{"version":3,"file":"/js/index.js","mappings":";;;;;;;;;;;AAAA;;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtJA","sources":["webpack://family/./resources/asset/js/index.js","webpack://family/./resources/asset/scss/main.scss"],"sourcesContent":["'use strict';\nimport { showError , log} from '@modernman00/shared-js-lib';\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const routeMap = {\n    '/register': {\n      module: () => import(/* webpackChunkName: 'register' */ './components/register/'),\n      hide: ['.signUp'], // Hide signup navbar\n    },\n    '/allMembers': {\n      module: () => import(/* webpackChunkName: 'all_members' */ './components/allMembers/'),\n      hide: ['.allMemberNav'], // Hide allMembers navbar\n    },\n    '/login': {\n      \n      module: () => import(/* webpackChunkName: 'login' */ './components/acctMgt/login.js'),\n      hide: ['.login'], // Hide login navbar\n    },\n    '/lasu': {\n      module: () => import(/* webpackChunkName: 'lasu' */ './components/acctMgt/admin.js'),\n      hide: ['.login'], // Same login module as /login\n    },\n    '/forgot': {\n      module: () => import(/* webpackChunkName: 'forgotPwd' */ './components/acctMgt/forgot.js'),\n      hide: ['.signup_login'], // Hide login/signup navbar\n    },\n    '/code': {\n      module: () => import(/* webpackChunkName: 'code' */ './components/acctMgt/code.js'),\n      hide: ['.signup_login'], // Hide login/signup navbar\n    },\n    '/profilePage': {\n      module: () => import(/* webpackChunkName: 'profilePage' */ './components/profilePage/'),\n      hide: ['.profilePageNav'], // Hide profile page navbar\n    },\n    '/changePW': {\n      module: () => import(/* webpackChunkName: 'changePW' */ './components/acctMgt/changePW.js'),\n      hide: ['.login', '.signUp'], // Hide login and signup navbars\n    },\n    '/profilepage/img': {\n      module: () => import(/* webpackChunkName: 'img' */ './components/profilePage/imgViewer'),\n    },\n    '/createFamilyCode': {\n      module: () => import(/* webpackChunkName: 'familyCode' */ './components/register/familyCode'),\n    },\n    '/register/nextStep': {\n      hide: ['.login', '.signUp'], // No module, just hide navbars\n    },\n    '/organogram': {\n      module: () => import(/* webpackChunkName: 'organogram' */ './components/familyTree/index.js'),\n      hide: ['.familyTreeNav'], // Hide family tree navbar\n    },\n    '/allMembers/getProfile': {\n      // Module import commented out â€” placeholder for future logic\n      hide: ['.familyTreeNav', '.notification_count'], // Hide navbars\n    },\n    '/accountSetting': {\n      \n      module: () => import(/* webpackChunkName: 'accountSetting' */ './components/accountSetting'),\n\n    },\n  };\n\n\n\n  try {\n    const path = window.location.pathname;\n    const route = routeMap[path];\n\n    if (!route) {\n      throw new Error(`Unhandled route: ${path}`);\n    }\n\n    // Hide specified nav elements\n    if (route.hide) {\n      route.hide.forEach((selector) => {\n        const el = document.querySelector(selector);\n        if (el) el.style.display = 'none';\n      });\n    }\n\n    // Load module if defined\n    if (route.module) {\n      route.module()\n        .then((mod) => mod.default)\n        .catch((err) => {\n          showError(err);\n          throw new Error(`Failed to load module for ${path}: ${err.message}`);\n        });\n    }\n  } catch (error) {\n    showError(error);\n    throw error;\n  }\n});\n\n/**\n * Tests if the current URL matches the given route.\n *\n * @param {string} url A URL route to test.\n *\n * @returns {boolean} True if the URL matches, otherwise false.\n */\nconst checkURL = (url) =>\n  !!window.location.pathname.match(new RegExp(`^/${url}(?:/[^/]+)*$`));\n\ntry {\n\n\n  const $navbarBurgers = Array.prototype.slice.call(\n    document.querySelectorAll('.navbar-burger'),\n    0,\n  );\n\n  // Add a click event on each of them\n  $navbarBurgers.forEach((el) => {\n    el.addEventListener('click', () => {\n      // Get the target from the \"data-target\" attribute\n      const target = el.dataset.target;\n      const $target = document.getElementById(target);\n\n      // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n      el.classList.toggle('is-active');\n      $target.classList.toggle('is-active');\n    });\n  });\n\n        const darkModeToggle = document.getElementById('darkModeToggle');\n                const body = document.body;\n\n                // Check for saved dark mode preference\n                if (localStorage.getItem('darkMode') === 'enabled') {\n                    body.classList.add('dark-mode');\n                    darkModeToggle.innerHTML = '<i class=\"bi bi-sun-fill\"></i>';\n                }\n\n                darkModeToggle.addEventListener('click', () => {\n                    body.classList.toggle('dark-mode');\n\n                    if (body.classList.contains('dark-mode')) {\n                        localStorage.setItem('darkMode', 'enabled');\n                        darkModeToggle.innerHTML = '<i class=\"bi bi-sun-fill\"></i>';\n                    } else {\n                        localStorage.setItem('darkMode', null);\n                        darkModeToggle.innerHTML = '<i class=\"bi bi-moon-fill\"></i>';\n                    }\n                });\n} catch (error) {\n  showError(error);\n}","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}