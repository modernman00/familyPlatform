(self["webpackChunkfamily"] = self["webpackChunkfamily"] || []).push([["/js/vendor"],{

/***/ "./node_modules/@modernman00/shared-js-lib/AcctMgt/changePassword.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/AcctMgt/changePassword.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   setupPasswordChange: () => (/* binding */ setupPasswordChange)
/* harmony export */ });
/* harmony import */ var _processAll_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./processAll.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/processAll.js");
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utility.js */ "./node_modules/@modernman00/shared-js-lib/Utility.js");
/* harmony import */ var _general_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../general.js */ "./node_modules/@modernman00/shared-js-lib/general.js");






/**
 * Initializes password change functionality with accessibility, validation, and submission logic.
 *
 * This function sets up:
 * - ARIA attributes for accessibility
 * - Input matching between password and confirmation fields
 * - Max length enforcement
 * - Event bindings for submit and password visibility toggle
 * - Form submission via `loginSubmission`
 *
 * @function setupPasswordChange
 * @param {Object} [config] - Configuration object for customizing behavior.
 * @param {string} [config.buttonId='button'] - ID of the submit button.
 * @param {string} [config.passwordId='password'] - ID of the password input field.
 * @param {string} [config.confirmId='confirm_password'] - ID of the confirm password input field.
 * @param {string} [config.showToggleId='showPassword'] - ID of the toggle button to show/hide password.
 * @param {string} [config.errorId='confirm_password_error'] - ID of the element to display mismatch errors.
 * @param {string} [config.helpId='password_help'] - ID of the helper text element for password guidance.
 * @param {string} [config.route] - API endpoint for password change submission.
 * @param {string} [config.redirect] - URL to redirect to after successful password change.
 * @param {string} [config.theme='bulma'] - UI theme identifier passed to `loginSubmission`.
 * @param {number} [config.maxLength=50] - Maximum allowed length for password fields.
 *
 * @example
 * setupPasswordChange(); // Uses default IDs and routes
 *
 * @example
 * setupPasswordChange({
 *   buttonId: 'submitBtn',
 *   passwordId: 'new_password',
 *   confirmId: 'confirm_new_password',
 *   route: '/api/change-password',
 *   redirect: '/dashboard'
 * });
 */


const setupPasswordChange = ({
  formId = 'changePassword',
  buttonId = 'button',
  passwordId = 'password',
  confirmId = 'confirm_password',
  showToggleId = 'showPassword',
  errorId = 'confirm_password_error',
  helpId = 'password_help',
  route,
  redirect,
  theme = 'bulma',
  maxLength = 50
} = {}) => {
  // Accessibility & input attributes
  const passwordInput = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.id)(passwordId);
  const showToggle = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.id)(showToggleId);
  const helperText = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.id)(helpId);

  passwordInput.setAttribute('autocomplete', 'current-password');
  showToggle.setAttribute('aria-label', 'Warning: this will display your password on the screen.');
  helperText.setAttribute('aria-live', 'polite');
  helperText.textContent =
    'Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, one number, and one special character.';

  // Length limit object
  const lengthLimit = {
    maxLength: {
      id: [passwordId, confirmId],
      max: [maxLength, maxLength]
    }
  };

  // Submission handler
  const handleSubmit = (e) => {
    e.preventDefault();
    (0,_processAll_js__WEBPACK_IMPORTED_MODULE_0__.loginSubmission)(formId, route, redirect, theme, lengthLimit);
  };

  // Bind events
  (0,_Utility_js__WEBPACK_IMPORTED_MODULE_2__.bindEvent)({ id: buttonId, handler: handleSubmit });
  (0,_Utility_js__WEBPACK_IMPORTED_MODULE_2__.bindEvent)({ id: showToggleId, handler: () => (0,_Utility_js__WEBPACK_IMPORTED_MODULE_2__.showPassword)(passwordId) });
  (0,_general_js__WEBPACK_IMPORTED_MODULE_3__.matchInput)(passwordId, confirmId, errorId);
};





/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/AcctMgt/code.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/AcctMgt/code.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createCodeSubmitHandler: () => (/* binding */ createCodeSubmitHandler)
/* harmony export */ });
/* harmony import */ var _processAll_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./processAll.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/processAll.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utility.js */ "./node_modules/@modernman00/shared-js-lib/Utility.js");



/**
 * Creates a reusable form submission handler for code-based forms.
 *
 * @function createCodeSubmitHandler
 * @param {Object} options - Configuration for the handler.
 * @param {string} options.formId - ID of the form element.
 * @param {string} options.inputId - ID of the input field to validate.
 * @param {string} options.buttonId - ID of the submit button.
 * @param {string} options.route - API endpoint for submission.
 * @param {string} options.redirect - URL to redirect to after success.
 * @param {string} [options.theme='bulma'] - UI theme identifier.
 * @param {number} [options.maxLength=50] - Max input length.
 *
 * @example
 * createCodeSubmitHandler({
 *   formId: 'codeForm',
 *   inputId: 'code',
 *   buttonId: 'button',
 *   route: appTestRoutes.appTestCode,
 *   redirect: appTestRoutes.appTestCodeRedirect
 * });
 */
function createCodeSubmitHandler({
  formId,
  inputId = 'code',
  buttonId = 'button',
  route,
  redirect,
  theme = 'bulma',
  maxLength = 50
}) {
  const handler = (e) => {
    e.preventDefault();

    const lengthLimit = {
      maxLength: {
        id: [inputId],
        max: [maxLength]
      }
    };

    (0,_processAll_js__WEBPACK_IMPORTED_MODULE_0__.loginSubmission)(formId, route, redirect, theme, lengthLimit);
  };

  (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.bindEvent)({ id: buttonId, handler });
}



/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/AcctMgt/forgot.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/AcctMgt/forgot.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   forgotSubmitHandler: () => (/* binding */ forgotSubmitHandler)
/* harmony export */ });
/* harmony import */ var _processAll_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./processAll.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/processAll.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utility.js */ "./node_modules/@modernman00/shared-js-lib/Utility.js");




/**
 * Creates a reusable form submission handler for email-based forms.
 *
 * This function:
 * - Prevents default form submission
 * - Applies max length validation to the email input
 * - Submits the form using `loginSubmission` with route and redirect logic
 *
 * @function createEmailSubmitHandler
 * @param {Object} options - Configuration for the handler.
 * @param {string} options.formId - ID of the form element.
 * @param {string} options.inputId - ID of the email input field.
 * @param {string} options.buttonId - ID of the submit button.
 * @param {string} options.route - API endpoint for submission.
 * @param {string} options.redirect - URL to redirect to after success.
 * @param {string} [options.theme='bulma'] - UI theme identifier.
 * @param {number} [options.maxLength=50] - Max input length.
 *
 * @example
 * createEmailSubmitHandler({
 *   formId: 'forgotPassword',
 *   inputId: 'email',
 *   buttonId: 'button',
 *   route: appTestRoutes.appTestForgot,
 *   redirect: appTestRoutes.appTestForgotRedirect
 * });
 */
function forgotSubmitHandler({
  formId,
  inputId = 'email',
  buttonId = 'button',
  route,
  redirect,
  theme = 'bulma',
  maxLength = 50
}) {
  const handler = (e) => {
    e.preventDefault();

    const lengthLimit = {
      maxLength: {
        id: [inputId],
        max: [maxLength]
      }
    };

    (0,_processAll_js__WEBPACK_IMPORTED_MODULE_0__.loginSubmission)(formId, route, redirect, theme, lengthLimit);
  };

  (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.bindEvent)({ id: buttonId, handler });
}




/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/AcctMgt/login.js":
/*!******************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/AcctMgt/login.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createAdminLoginHandler: () => (/* binding */ createAdminLoginHandler)
/* harmony export */ });
/* harmony import */ var _processAll_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./processAll.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/processAll.js");
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Utility.js */ "./node_modules/@modernman00/shared-js-lib/Utility.js");





/**
 * Creates a reusable admin login handler with password visibility and accessibility support.
 *
 * This function:
 * - Binds form submission to `loginSubmission`
 * - Applies max length validation to email and password fields
 * - Enables password visibility toggle
 * - Sets accessibility attributes for screen readers and autocomplete
 *
 * @function createAdminLoginHandler
 * @param {Object} options - Configuration for the login handler.
 * @param {string} options.formId - ID of the login form.
 * @param {string} options.emailId - ID of the email input field.
 * @param {string} options.passwordId - ID of the password input field.
 * @param {string} options.buttonId - ID of the submit button.
 * @param {string} options.showToggleId - ID of the password visibility toggle button.
 * @param {string} options.route - API endpoint for login submission.
 * @param {string} options.redirect - URL to redirect to after successful login.
 * @param {string} [options.theme='bootstrap'] - UI theme identifier.
 * @param {number[]} [options.maxLength=[30, 50]] - Max lengths for password and email respectively.
 *
 * @example
 * createAdminLoginHandler({
 *   formId: 'managed',
 *   emailId: 'email',
 *   passwordId: 'password',
 *   buttonId: 'button',
 *   showToggleId: 'showPassword',
 *   route: appTestRoutes.appTest,
 *   redirect: appTestRoutes.redirect
 * });
 */
function createAdminLoginHandler({
  formId,
  emailId = 'email',
  passwordId = 'password',
  buttonId = 'button',
  showToggleId = 'showPassword',
  route,
  redirect,
  theme = 'bootstrap',
  maxLength = [30, 50]
}) {
  const handler = (e) => {
    e.preventDefault();

    const lengthLimit = {
      maxLength: {
        id: [passwordId, emailId],
        max: maxLength
      }
    };

    (0,_processAll_js__WEBPACK_IMPORTED_MODULE_0__.loginSubmission)(formId, route, redirect, theme, lengthLimit);
  };

  (0,_Utility_js__WEBPACK_IMPORTED_MODULE_2__.bindEvent)({ id: buttonId, handler });
  (0,_Utility_js__WEBPACK_IMPORTED_MODULE_2__.bindEvent)({ id: showToggleId, handler: () => (0,_Utility_js__WEBPACK_IMPORTED_MODULE_2__.showPassword)(passwordId) });

  const passwordInput = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.id)(passwordId);
  const toggleLabel = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.id)(showToggleId);

  passwordInput.setAttribute('autocomplete', 'current-password');
  toggleLabel.setAttribute(
    'aria-label',
    'Warning: this will display your password on the screen.'
  );
}


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/AcctMgt/processAll.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/AcctMgt/processAll.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   loginSubmission: () => (/* binding */ loginSubmission)
/* harmony export */ });
/* harmony import */ var _Http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Http.js */ "./node_modules/@modernman00/shared-js-lib/Http.js");
/* harmony import */ var _Loader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Loader.js */ "./node_modules/@modernman00/shared-js-lib/Loader.js");
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");
/* harmony import */ var _ShowResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ShowResponse.js */ "./node_modules/@modernman00/shared-js-lib/ShowResponse.js");
/* harmony import */ var _FormHelper_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../FormHelper.js */ "./node_modules/@modernman00/shared-js-lib/FormHelper.js");








// block the setLoader div

/**
 * Handles the submission of the login form.
 * @param {string} formId - The ID of the form to submit.
 * @param {string} loginURL - The URL to make the POST request to.
 * @param {string} redirect - The URL to redirect the user to after the submission is complete.
 * @param {string} [css=null] - The CSS class to add to the notification element if the submission is successful.
 * @returns {void}
 * @throws {Error} - If there is an error with the submission
 */
const loginSubmission = async (formId, loginURL, redirect, css = null, lengthLimit = null
) => {

  try {

    const formInput = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_2__.id)(formId);

    if (!formInput) {
      throw new Error(`Form ${formId} not found`);
      // removed by dead control flow

    }

    const formInputArr = Array.from(formInput.elements);

    const formData = new _FormHelper_js__WEBPACK_IMPORTED_MODULE_4__["default"](formInputArr);

    formData.clearError();

    if (lengthLimit) {
      formData.realTimeCheckLen(lengthLimit.maxLength.id, lengthLimit.maxLength.max);
    }

    formData.massValidate([], { email: 'email', password: 'password' });

    if (formData.result === 1) {

      const notificationId = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_2__.id)(`${formId}_notification`) || formId;

      notificationId.scrollIntoView({ behavior: 'smooth' });

      (0,_Loader_js__WEBPACK_IMPORTED_MODULE_1__.showLoader)();

      localStorage.setItem('redirect', redirect);

      await (0,_Http_js__WEBPACK_IMPORTED_MODULE_0__.postFormData)(loginURL, formId, redirect, css);

    } else {

      alert('The form cannot be submitted. Please check the errors');
    }
  } catch (err) {
    (0,_ShowResponse_js__WEBPACK_IMPORTED_MODULE_3__.showError)(err);
  } finally {
    (0,_Loader_js__WEBPACK_IMPORTED_MODULE_1__.clearLoader)();
  }
};


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/AcctMgt/update.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/AcctMgt/update.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   update: () => (/* binding */ update)
/* harmony export */ });
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utility.js */ "./node_modules/@modernman00/shared-js-lib/Utility.js");
/* harmony import */ var _ShowResponse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ShowResponse.js */ "./node_modules/@modernman00/shared-js-lib/ShowResponse.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! axios */ "./node_modules/axios/lib/axios.js");
/* harmony import */ var _general_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../general.js */ "./node_modules/@modernman00/shared-js-lib/general.js");





/**
 * Creates a reusable form submission handler for update forms.
 *
 * @function update
 * @param {Object} options - Configuration for the handler.
 * @param {string} options.formId - ID of the form element.
   * @param {string} options.buttonId - ID of the submit button.
 * @param {string} options.route - API endpoint for submission.
 * @param {string} options.redirect - URL to redirect to after success.
 *
 * @example
 * update({
 *   formId: 'updateForm',
 *   buttonId: 'updateButton',
 *   route: appTestRoutes.appTestUpdate,
 *   redirect: appTestRoutes.appTestUpdateRedirect
 * });
 */
function update({
  formId,
  buttonId,
  route,
  redirect,
}) {
  const handler = async (e) => {
    e.preventDefault();

    const form = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(formId);
    if (!form) {
      (0,_ShowResponse_js__WEBPACK_IMPORTED_MODULE_2__.msgException)(`Form with ID "${formId}" not found.`);
      return;
    }

    const formData = new FormData();
    const inputs = form.querySelectorAll('[name]');

    inputs.forEach(input => {
      const name = input.name;
      const original = input.getAttribute('data-original');
      const current = input.type === 'file' ? input.files[0] : input.value;

      // Only include changed fields
      if (input.type === 'file') {
        if (current) formData.append(name, current);
      } else if (current !== original) {
        formData.append(name, current);
      }
    });

    try {

      const response = await axios__WEBPACK_IMPORTED_MODULE_3__["default"].post(route, formData);

      const message = response.data.message;

      console.log(response.data)

      const notificationId = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${formId}_notification`) || formId;

      notificationId.scrollIntoView({ behavior: 'smooth' });

      notificationId.innerHTML = message;


      if (redirect) {
        (0,_general_js__WEBPACK_IMPORTED_MODULE_4__.redirectAfterDelay)(redirect, 2000);
      }

    } catch (error) {
      console.log(error);
      const ErrorMsg = (0,_general_js__WEBPACK_IMPORTED_MODULE_4__.parseErrorResponse)(error);
      const notificationId = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${formId}_notification`)
      notificationId.innerHTML = `<li style="color:white; background-color:red">${ErrorMsg}</li>`;
    }
  };

  (0,_Utility_js__WEBPACK_IMPORTED_MODULE_1__.bindEvent)({ id: buttonId, handler });
}



/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/Cookie.js":
/*!***********************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/Cookie.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkCookie: () => (/* binding */ checkCookie),
/* harmony export */   getCookie: () => (/* binding */ getCookie),
/* harmony export */   getCookieValue: () => (/* binding */ getCookieValue),
/* harmony export */   setCookie: () => (/* binding */ setCookie)
/* harmony export */ });
/**
 * Sets a cookie with the given name, value, and number of days until it expires.
 * By default, the cookie will expire in 365 days.
 * @param {string} cname - The name of the cookie.
 * @param {string} cvalue - The value of the cookie.
 * @param {number} [exdays=365] - The number of days until the cookie expires.
 */
const setCookie = (cname, cvalue, exdays = 365) => {
    const d = new Date(Date.now() + exdays * 864e5);
    document.cookie = `${cname}=${cvalue}; expires=${d.toUTCString()}; path=/`;
}

/**
 * Retrieves the value of a cookie by name.
 * @param {string} cname - The name of the cookie to retrieve.
 * @returns {string} The value of the cookie, or an empty string if the cookie does not exist.
 */
const getCookie = (cname) => {
    const name = cname + "=";
    const cookies = document.cookie.split(';').map(cookie => cookie.trim());
    for (const cookie of cookies) {
        if (cookie.startsWith(name)) {
            return cookie.substring(name.length);
        }
    }
    return "";
}



/**
 * Checks if a cookie with the given name exists. If not, prompts the user
 * for a name and sets the cookie for 365 days. If the cookie does exist,
 * alerts the user with a welcome message.
 * @param {string} name - The name of the cookie to check.
 */
const checkCookie = (name) => {
    let user = getCookie(name);
    if (!user) {
        const askName = prompt("Please enter your name:", "");
        if (askName) {
            setCookie(name, askName, 365);
            user = askName;
        }
    }
    if (user) {
        alert(`Welcome again ${user}`);
    }
}

// CHECK TOKEN FROM COOKIE 
const getCookieValue = (name) => {
    const match = document.cookie.split('; ').find(row => row.startsWith(name + '='));
    return match ? decodeURIComponent(match.split('=')[1]) : null;
}


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/CountryCode.js":
/*!****************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/CountryCode.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   countryCodes: () => (/* binding */ countryCodes),
/* harmony export */   injectCountryCode: () => (/* binding */ injectCountryCode)
/* harmony export */ });
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");


// inject the country code once one of the country is picked

// Object to map countries to country codes

const countryCodes = {
  Afghanistan: '93',
  Albania: '355',
  Algeria: '213',
  Andorra: '376',
  Angola: '244',
  'Antigua and Barbuda': '1-268',
  Argentina: '54',
  Armenia: '374',
  Australia: '61',
  Austria: '43',
  Azerbaijan: '994',
  Bahamas: '1-242',
  Bahrain: '973',
  Bangladesh: '880',
  Barbados: '1-246',
  Belarus: '375',
  Belgium: '32',
  Belize: '501',
  Benin: '229',
  Bhutan: '975',
  Bolivia: '591',
  'Bosnia and Herzegovina': '387',
  Botswana: '267',
  Brazil: '55',
  Brunei: '673',
  Bulgaria: '359',
  'Burkina Faso': '226',
  Burundi: '257',
  Cambodia: '855',
  Cameroon: '237',
  Canada: '1',
  'Cape Verde': '238',
  'Central African Republic': '236',
  Chad: '235',
  Chile: '56',
  China: '86',
  Colombia: '57',
  Comoros: '269',
  'Congo (Brazzaville)': '242',
  'Congo (Kinshasa)': '243',
  'Costa Rica': '506',
  "Côte d'Ivoire": '225',
  Croatia: '385',
  Cuba: '53',
  Cyprus: '357',
  'Czech Republic': '420',
  Denmark: '45',
  Djibouti: '253',
  Dominica: '1-767',
  'Dominican Republic': '1-809, 1-829, 1-849',
  'East Timor': '670',
  Ecuador: '593',
  Egypt: '20',
  'El Salvador': '503',
  'Equatorial Guinea': '240',
  Eritrea: '291',
  Estonia: '372',
  Ethiopia: '251',
  Fiji: '679',
  Finland: '358',
  France: '33',
  Gabon: '241',
  Gambia: '220',
  Georgia: '995',
  Germany: '49',
  Ghana: '233',
  Greece: '30',
  Grenada: '1-473',
  Guatemala: '502',
  Guinea: '224',
  'Guinea-Bissau': '245',
  Guyana: '592',
  Haiti: '509',
  Honduras: '504',
  Hungary: '36',
  Iceland: '354',
  India: '91',
  Indonesia: '62',
  Iran: '98',
  Iraq: '964',
  Ireland: '353',
  Israel: '972',
  Italy: '39',
  Jamaica: '1-876',
  Japan: '81',
  Jordan: '962',
  Kazakhstan: '7',
  Kenya: '254',
  Kiribati: '686',
  'North Korea': '850',
  'South Korea': '82',
  Kosovo: '383',
  Kuwait: '965',
  Kyrgyzstan: '996',
  Laos: '856',
  Latvia: '371',
  Lebanon: '961',
  Lesotho: '266',
  Liberia: '231',
  Libya: '218',
  Liechtenstein: '423',
  Lithuania: '370',
  Luxembourg: '352',
  Macedonia: '389',
  Madagascar: '261',
  Malawi: '265',
  Malaysia: '60',
  Maldives: '960',
  Mali: '223',
  Malta: '356',
  'Marshall Islands': '692',
  Mauritania: '222',
  Mauritius: '230',
  Mexico: '52',
  Micronesia: '691',
  Moldova: '373',
  Monaco: '377',
  Mongolia: '976',
  Montenegro: '382',
  Morocco: '212',
  Mozambique: '258',
  Myanmar: '95',
  Namibia: '264',
  Nauru: '674',
  Nepal: '977',
  Netherlands: '31',
  'New Zealand': '64',
  Nicaragua: '505',
  Niger: '227',
  Nigeria: '234',
  Norway: '47',
  Oman: '968',
  Pakistan: '92',
  Palau: '680',
  Panama: '507',
  'Papua New Guinea': '675',
  Paraguay: '595',
  Peru: '51',
  Philippines: '63',
  Poland: '48',
  Portugal: '351',
  Qatar: '974',
  Romania: '40',
  Russia: '7',
  Rwanda: '250',
  'Saint Kitts and Nevis': '1-869',
  'Saint Lucia': '1-758',
  'Saint Vincent and the Grenadines': '1-784',
  Samoa: '685',
  'San Marino': '378',
  'Sao Tome and Principe': '239',
  'Saudi Arabia': '966',
  Senegal: '221',
  Serbia: '381',
  Seychelles: '248',
  'Sierra Leone': '232',
  Singapore: '65',
  Slovakia: '421',
  Slovenia: '386',
  'Solomon Islands': '677',
  Somalia: '252',
  'South Africa': '27',
  'South Sudan': '211',
  Spain: '34',
  'Sri Lanka': '94',
  Sudan: '249',
  Suriname: '597',
  Swaziland: '268',
  Sweden: '46',
  Switzerland: '41',
  Syria: '963',
  Taiwan: '886',
  Tajikistan: '992',
  Tanzania: '255',
  Thailand: '66',
  Togo: '228',
  Tonga: '676',
  'Trinidad and Tobago': '1-868',
  Tunisia: '216',
  Turkey: '90',
  Turkmenistan: '993',
  Tuvalu: '688',
  Uganda: '256',
  Ukraine: '380',
  'United Arab Emirates': '971',
  'United Kingdom': '44',
  'United States': '1',
  Uruguay: '598',
  Uzbekistan: '998',
  Vanuatu: '678',
  'Vatican City': '379',
  Venezuela: '58',
  Vietnam: '84',
  Yemen: '967',
  Zambia: '260',
  Zimbabwe: '263',
};

const injectCountryCode = async (countryId, mobileId) => {
  const MAX_RETRIES = 10;
  const RETRY_INTERVAL = 100; // ms

  const waitForElements = (retries = 0) => {
    const countryEl = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(countryId);
    const mobileEl = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(mobileId);

    if (countryEl && mobileEl) {
      countryEl.addEventListener('change', async (e) => {
        const value = e.target.value;
        mobileEl.value = (await countryCodes[value]) || '';
      });
    } else if (retries < MAX_RETRIES) {
      setTimeout(() => waitForElements(retries + 1), RETRY_INTERVAL);
    } else {
      showError(`injectCountryCode failed: Missing element(s) — ${!countryEl ? countryId : ''} ${!mobileEl ? mobileId : ''}`);
    }
  };

  // Ensure DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => waitForElements());
  } else {
    waitForElements();
  }
};




/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/DateTime.js":
/*!*************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/DateTime.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   calTiming: () => (/* binding */ calTiming),
/* harmony export */   date2String: () => (/* binding */ date2String),
/* harmony export */   timeAgo: () => (/* binding */ timeAgo),
/* harmony export */   updateTimeRealTime: () => (/* binding */ updateTimeRealTime)
/* harmony export */ });
/**
 * Returns a string representing the time elapsed since the given date.
 * The string is in the format "[number] [unit]s", where [number] is the number of the unit,
 * and [unit] is the name of the unit. The unit is the largest unit that is at least one,
 * for example "3 days" or "1 year". If the time elapsed is less than one second, returns "0 seconds".
 * @param {Date} date - The date to calculate the time elapsed since.
 * @returns {string} - The time elapsed since the given date.
 */
const calTiming = (date) => {
    const seconds = Math.floor((new Date() - date) / 1000);
    const epochs = [
        { name: "year", seconds: 31536000 },
        { name: "month", seconds: 2592000 },
        { name: "day", seconds: 86400 },
        { name: "hour", seconds: 3600 },
        { name: "minute", seconds: 60 },
        { name: "second", seconds: 1 }
    ];
    
    for (const epoch of epochs) {
        const interval = Math.floor(seconds / epoch.seconds);
        if (interval > 1) {
            return `${interval} ${epoch.name}s`;
        } else if (interval === 1) {
            return `1 ${epoch.name}`;
        }
    }
};
const aDay = 24 * 60 * 60 * 1000;


let element = document.querySelectorAll('time[data-time]')

/**
 * Updates all elements with a 'data-time' attribute with the time that has
 * elapsed since the given time, in real time.
 *
 * The function works by looping through all elements with the 'data-time'
 * attribute and calculating the time elapsed since the given time. It then
 * updates the content of the element with the time that has elapsed.
 *
 * The function then waits 60 seconds before calling itself again.
 *
 * @returns {void}
 */
const updateTimeRealTime = () => {
    for (const entry of element) {
        const seconds = (Date.now() - new Date(entry.dataset.time).getTime()) / 1000;
        entry.textContent = getDuration(seconds);
    }
    setTimeout(updateTimeRealTime, 1000 * 60);
};
setTimeout(updateTimeRealTime, 1000 * 60);


const epochs = [
    ['year', 31536000],
    ['month', 2592000],
    ['day', 86400],
    ['hour', 3600],
    ['minute', 60],
    ['second', 1]
];

/**
 * Takes a time in seconds and returns an object with the largest unit of time
 * that is at least one, and the number of those units.
 *
 * @param {number} timeAgoInSeconds - The time in seconds to calculate the duration of.
 * @returns {Object} - An object with an interval and epoch, where interval is the number of those units,
 *                    and epoch is the name of the unit.
 */
const getDuration = (timeAgoInSeconds) => {
    for (let [name, seconds] of epochs) {
        const interval = Math.floor(timeAgoInSeconds / seconds);
        if (interval >= 1) {
            return {
                interval: interval,
                epoch: name
            };
        }
    }
};

/**
 * Returns a string representing the time elapsed since the given date.
 * The time elapsed is presented as a string in the form of "X epochs ago",
 * where X is the number of epochs, and epochs is the largest unit of time that
 * is at least one, e.g. "1 hour ago", "2 days ago", etc.
 *
 * @param {Date|string} date - The date from which to calculate the time elapsed.
 * @returns {string} - A string representing the time elapsed since the given date.
 */
const timeAgo = (date) => {
    const timeAgoInSeconds = Math.floor((new Date() - new Date(date)) / 1000);
    const { interval, epoch } = getDuration(timeAgoInSeconds);
    const suffix = interval === 1 ? '' : 's';
    return `${interval} ${epoch}${suffix} ago`;
};

const date2String = (date) => new Date().toDateString(date)

/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/FormHelper.js":
/*!***************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/FormHelper.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FormHelper)
/* harmony export */ });

class FormHelper {
    constructor(data) {
        if (!Array.isArray(data)) throwError('data must be an array of form elements');
        this.data = data;
        this.error = [];
        this.result = 0;
    }

    id(x) {
        return document.getElementById(x);
    }

    /**
     * general validation; check empty status, at least a single input, mobile length, white space
     */

    getData() {
        return this.data;
    }


    /**
     * Validate a single form field
     * @param {string} value - the value of the field to validate
     * @param {string} [type='general'] - the type of validation to perform. Currently only 'email' is supported
     * @returns {boolean} - true if the field is valid, false otherwise
     */
    validateLoginField(inputId, type = 'general') {
        const inputEl = this.id(inputId);
        const value = inputEl.value.trim();
        let msg = '';
        let isValid = true;

        if (type === 'email') {
            const emailRegex = /^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-Z0-9]{2,4}$/;
            if (!emailRegex.test(value)) {
                msg = '<li>Please enter a valid email</li>';
                isValid = false;
            }
        }

        else if (type === 'password') {
            const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?!.*\s).{8,}$/;
            if (!passwordRegex.test(value)) {
                msg = '<li>Please enter a valid password (min 8 chars, upper & lowercase, number, special char)</li>';
                isValid = false;
            }
        }

        else if (type === 'general') {
            const generalRegex = /[\w\d\s.,'"!?@#&()\-]/;
            if (!generalRegex.test(value)) {
                msg = '<li>Invalid entry — special characters may not be allowed</li>';
                isValid = false;
            }
        }

        // Set error if invalid
        const errorEl = this.id(`${type}_error`);
        if (!isValid) {
            if (errorEl) {
                errorEl.innerHTML = msg;
                errorEl.style.color = 'red';
            }
            this.error.push(msg);
        } else {
            if (errorEl) errorEl.innerHTML = ''; // Clear error on success
        }

        return isValid;
    }


    /**
     * Test if a given value matches a regex pattern based on the type
     * @param {string} value - the value to test
     * @param {string} type - the type of regex pattern to apply (email, password, general)
     * @returns {boolean} - true if the value matches the regex, false otherwise
     */
    matchRegex(value, type) {
        const regexPatterns = {
            email: /^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-Z0-9]{2,4}$/,
            password: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?!.*\s).{8,}$/,
            general: /[\w\d\s.,'"!?@#&()\-]/,
        };

        return regexPatterns[type]?.test(value);
    }

    /**
     * 
     * @param {*} optionalFields ["spouseName", "spouseMobile", "fatherEmail"];
     * @param {*} typeMap Create a validation map if certain fields need special types (email, password, etc). const types = {
      email: "email",
      password: "password",
      custom_text: "general"
    };
     * formHelper.massValidate(optional, types);
     */



    massValidate(optionalFields = [], typeMap = {}) {
        this.clearError(); // Reset errors
        this.result = 0;

        for (let input of this.data) {
            const { name, value, id, type, placeholder } = input;
           

            // Skip non-input elements
            if (
                ['submit', 'button', 'g-recaptcha-response', 'cancel'].includes(name) ||
                ['button', 'showPassword', 'token', 'g-recaptcha-response'].includes(id) ||
                type === 'button' ||
                id === 'checkbox'
            ) continue;

     
         
         
              const errorEl = this.id(`${id}_error`);
            let val = value.trim();

            // Handle optional fields
            if (optionalFields.includes(id) && val === '') {
                input.value = 'Not Provided';
                continue;
            }

            // Required field check
            if (val === '' || val === 'select') {
                if (errorEl) errorEl.innerHTML = `<li style="color:red;">${id} cannot be left empty.</li>`;
                this.error.push(`${id.toUpperCase()} cannot be left empty.`);
                continue;
            }

            // Determine field type for regex
            let validateType = typeMap[id] || (
                id.toLowerCase().includes('email') ? 'email' :
                    id.toLowerCase().includes('password') ? 'password' : 'general'
            );

            if (!this.matchRegex(val, validateType)) {
                const msg = `There is a problem with your entry for ${id.toUpperCase()}`;
                if (errorEl) errorEl.innerHTML = `<li style="color:red;">${msg}</li>`;
                this.error.push(msg);
                continue;
            }

            if (errorEl) errorEl.innerHTML = ''; // Clear if all good
        }

        this.result = this.error.length === 0 ? 1 : 0;
    }



    emailVal() {
        const emailExp = /^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-z0-9]{2,4}$/;
        let msg = '<li style=color:\'red\';> Please enter a valid email</li>';
        const email = this.id('email').value;
        if (email.match(emailExp) === null) {
            this.id('email_error').innerHTML = msg;
            this.id('email_error').style.color = 'red';
            this.error.push(msg);
        }
    }

    /**
     * Clears all error messages and empties the error array.
     * Sets up event listeners to clear error messages for each input element.
     * Keyup event listener: for non-select inputs
     * Change event listener: for all inputs
     * @returns {void}
     */
    clearError() {
        this.error = []; // Empty the error array

        // Function to clear error messages for a given input element
        const clearErrorForElement = (elementName) => {
            const errorElement = this.id(`${elementName}_error`);
            if (errorElement) errorElement.innerHTML = '';
        };

        this.data.flat().forEach(({ id, name, value }) => {
            if (['submit', 'button', 'token', 'checkbox'].includes(id) || ['token', 'submit'].includes(name)) return;

            const element = this.id(id);
            if (!element) {
                console.error(`Element with ID '${id}' and post name '${name}' not found.`);
                return;
            }

            // Add event listeners to clear errors
            const clearErrorHandler = () => clearErrorForElement(id || name);
            if (value !== 'select') element.addEventListener('keyup', clearErrorHandler);
            element.addEventListener('change', clearErrorHandler);
        });
    }

    /**
     * Clears the values of all input elements in the form, excluding checkboxes and the submit button
     */
    clearHtml() {
        this.data.flat().forEach(post => {
            if (!['submit', 'checkbox'].includes(post.name) && post.type !== 'submit') {
                post.value = '';
            }
        });
    }
    /**
     * Check the length of the input in real time and display an error message if it exceeds the maximum length
     * @param {array of strings} input - the IDs of the input elements to check
     * @param {array of numbers} maxi - the maximum lengths for each input element
     */

    realTimeCheckLen(input, maxi) {
        input.forEach((id, i) => {

            const theData = this.id(`${id}`);
            if (!theData) {
                console.error(`Element with ID '${id}' not found`);
                return;
            }
            const max = maxi[i];
            theData.maxLength = parseInt(max) + 1;
            theData.addEventListener('input', () => {
                const error = this.id(`${id}_error`);
                error.innerHTML = (theData.value.length > max) ? 'You have reached the maximum limit' : '';
                this.id(`${id}_help`).style.display = theData.value.length > max ? '' : 'none';
            });
        });
    }



    /**
     * Match the value of the second input to the value of the first input in real time
     * @param {string} first - the id of the first input
     * @param {string} second - the id of the second input
     */
    matchInput(first, second) {
        const firstInput = this.id(first + '');
        const secondInput = this.id(second + '');
        const error = this.id(`${second}_error`);

        const checkMatch = () => error.innerHTML = (firstInput.value !== secondInput.value) ? 'Your passwords do not match' : '';

        firstInput.addEventListener('input', checkMatch);
        secondInput.addEventListener('input', checkMatch);
    }


    /**
     * Injects the values in the html array to the elements with the IDs in the idArray
     * @param {array of strings} idArray - the IDs of the elements to inject the values to
     * @param {array of strings} html - the values to inject to the elements
     */
    injectData(idArray, html) {
        idArray.forEach((id, i) => this.id(id).innerHTML = html[i]);
    }

    /**
     *
     * @param {this is an id and its value is for duplication} firstInput
     * @param {* another id that accepts the value of the firstInput} takeFirstInput
     */
    duplicate(giveInput, takeInput) {
        let giver, taker;
        giver = this.id(giveInput);
        taker = this.id(takeInput);
        giver.addEventListener('keyup', () => {
            taker.value = giver.value;
        });
    }




    /**
     * Sends a get request to the server as the user types in the specified input element
     * and updates the content of the specified output element with the response from the server
     * @param {string} input - the id of the input element to listen to
     * @param {string} url - the url of the get request to send, the value of the input element will be appended to the end of the url
     * @param {string} outputId - the id of the element to update with the response from the server
     */
    realTimeServer(input, url, outputId) {
        const theInput = this.id(input);
        const output = this.id(outputId);
        theInput.addEventListener('keyup', async () => {
            const inputVal = theInput.value;

            if (inputVal === '') {
                output.innerHTML = '';
                return;
            }

            try {
                const response = await axios.get(`${url}=${inputVal}`);
                output.innerHTML = response.data;
            } catch (error) {
                console.error(error);
            }
        });
    }

    /**
     * Check if a yes/no radio button is checked and display "checked" in a hidden input field.
     * @param {string} yesId - the id of the yes radio button
     * @param {string} noId - the id of the no radio button
     * @param {string} hiddenInput - the id of the hidden input field to display the result
     */
    isChecked(yesId, noId, hiddenInput) {
        const checked = () => {
            if (this.id(yesId).checked) {
                alert('check');
                this.id(hiddenInput).innerHTML = 'checked';
            } else if (this.id(noId).checked) {
                this.id(hiddenInput).innerHTML = 'checked';
            }
        };

        this.id(yesId).addEventListener('click', checked);
        this.id(noId).addEventListener('click', checked);

    }


}

/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/Http.js":
/*!*********************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/Http.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getApiData: () => (/* binding */ getApiData),
/* harmony export */   getMultipleApiData: () => (/* binding */ getMultipleApiData),
/* harmony export */   postFormData: () => (/* binding */ postFormData)
/* harmony export */ });
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");
/* harmony import */ var _axiosWrapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./axiosWrapper.js */ "./node_modules/@modernman00/shared-js-lib/axiosWrapper.js");
/* harmony import */ var _general_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./general.js */ "./node_modules/@modernman00/shared-js-lib/general.js");




/**
 * 
* Sends form data via POST request.
 * @param {string} url - The URL to post the data to.
 * @param {string} formId - The ID or class of the form.
 * @param {string|null} redirect - The page to redirect to after successful submission.
 * @param {string|null} css - The CSS framework to use for notification styling (e.g., 'W3css', 'bulma').
 NOTICE:::Make sure you set the notification id as the formId_notification
 */
const postFormData = async (url, formId, redirect = null, css = null) => {

    let notificationForm = `${formId}_notification`;
    const notificationId = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(notificationForm);


    if (!notificationId) {
        throw new Error('Notification element not found');
    }
    // Cleanup previous notification styles
    notificationId.style.display = 'none';

    ['is-danger', 'is-success', 'w3-red', 'w3-green', 'bg-danger', 'bg-success'].forEach(cls => notificationId.classList.remove(cls));

    // add value to the hidden csrf input field
    // const csrfToken = getCookieValue('XSRF-TOKEN');
    // if (csrfToken) {
    //     const csrfInput = id('token');
    //     if (csrfInput) {
    //         csrfInput.value = csrfToken; // Set the CSRF token in the hidden input field    
    // } 

    // extract the form entries
    // extract the form entriesËËË
    const form = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(formId)

    if (!form) {
        throw new Error('Form element not found');
    }

    let formEntries = new FormData(form);

    formEntries.delete('submit');
    formEntries.delete('checkbox');

    const options = {
        baseURL: '/', // Adjust to your API base URL
        withCredentials: true, // Ensure cookies (e.g., XSRF token) are sent
    };

    // AXIOS POST FUNCTIONALITY
    try {
        const response = await _axiosWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"].post(url, formEntries, options);
        const successClass = getNotificationClassByCSS(css || 'bulma', 'green');

        // check if response.data.message is an array
        const { message } = response.data || {};
        if (!message) {
            throw new Error('Response data does not contain a message');
        }
        processFormDataAction(successClass, message, notificationId);

        if (redirect) {
            (0,_general_js__WEBPACK_IMPORTED_MODULE_2__.redirectAfterDelay)(redirect, 2000);
        }

    } catch (error) {
        const errorClass = getNotificationClassByCSS(css || 'bulma', 'red');
        const ErrorMsg = (0,_general_js__WEBPACK_IMPORTED_MODULE_2__.parseErrorResponse)(error);
        processFormDataAction(errorClass, ErrorMsg, notificationId);
    }
};

/**
 * Process form data action.
 * @param {string} cssClass - The CSS class for the notification.
 * @param {string} message - The notification message.
 */
const processFormDataAction = (cssClass, message, formNotificationId) => {
    if (formNotificationId) {
        formNotificationId.style.display = 'block';
        formNotificationId.classList.add(cssClass);
        const errorElement = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)('error');
        if (errorElement) {
            errorElement.scrollIntoView({ behavior: 'smooth' });
            errorElement.innerHTML = message;
        }
        const loader = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)('setLoader');
        if (loader) loader.classList.remove('loader');
    } else {
        (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.log)('Notification element not found');
    }
};

/**
 * Get the notification class based on the CSS framework.
 * @param {string|null} css - The CSS framework to use for notification styling.
 * @param {string} status - The status of the notification ('green' or 'red').
 * @returns {string} - The corresponding CSS class.
 */
const getNotificationClassByCSS = (css, status) => {
    switch (css) {
        case 'W3css':
            return status === 'green' ? 'w3-green' : 'w3-red';
        case 'bulma':
            return status === 'green' ? 'is-success' : 'is-danger';
        case 'bootstrap':
            return status === 'green' ? 'bg-success' : 'bg-danger';
        default:
            return status === 'green' ? 'bg-success' : 'bg-danger';
    }
};


/**
 * Fetches data from a given URL using Axios, with optional Bearer token authentication.
 * Resolves to the response data from the server.
 * Rejects with an error object if something goes wrong.
 *
 * @param {string} URL - The URL to fetch data from.
 * @param {string|null} token - Optional Bearer token for authentication.
 * @returns {Promise<object>} - Resolves to the response data from the server or an error object if something goes wrong.
 * // Example usage of getApiData function

// With auth token
// const data = await getApiData('https://api.example.com/users', myAuthToken);
// if (data.status && data.status !== 200) {
//   console.error("API error:", data);
// } else {
//   console.log("User data:", data);
// }

// Without auth token
// const publicData = await getApiData('https://api.example.com/public');
// console.log(publicData);

 */

const getApiData = async (URL, token = null) => {
    try {
        const config = {
            headers: {
                "X-Requested-With": "XMLHttpRequest",
                "Content-Type": "application/json",
                Accept: "application/json",
                ...(token && { Authorization: `Bearer ${token}` }), // only add if token exists
            },
        };

        const response = await _axiosWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(URL, config);
        return response.data;
    } catch (error) {
        // return something cleaner
        if (error.response) {
            // server responded with error
            return { status: error.response.status, data: error.response.data };
        } else {
            // network or other issue
            return { status: "network_error", message: error.message };
        }
    }
};




/**
 * Fetches data from two API endpoints in parallel.
 *
 * @param {string} url1 - The first API endpoint.
 * @param {string} url2 - The second API endpoint.
 * @param {string|null} token - Optional Bearer token for authentication.
 *
 * @returns {Promise<object[]>} - Resolves to an array of response data [res1.data, res2.data]
 *                                or an error object if something goes wrong.
 *
 * Usage:
 * const [users, posts] = await getMultipleApiData('/api/users', '/api/posts', myToken);
 */
const getMultipleApiData = async (url1, url2, token = null) => {
    try {
        const config = {
            headers: {
                "X-Requested-With": "XMLHttpRequest",
                "Content-Type": "application/json",
                Accept: "application/json",
                ...(token && { Authorization: `Bearer ${token}` }), // add only if token exists
            },
        };

        // run requests in parallel
        const [res1, res2] = await _axiosWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"].all([
            _axiosWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(url1, config),
            _axiosWrapper_js__WEBPACK_IMPORTED_MODULE_1__["default"].get(url2, config),
        ]);

        return [res1.data, res2.data]; // return just the data
    } catch (error) {
        if (error.response) {
            return { status: error.response.status, data: error.response.data };
        } else {
            return { status: "network_error", message: error.message };
        }
    }
};


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/Loader.js":
/*!***********************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/Loader.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clearLoader: () => (/* binding */ clearLoader),
/* harmony export */   loaderIcon: () => (/* binding */ loaderIcon),
/* harmony export */   loaderIconBootstrap: () => (/* binding */ loaderIconBootstrap),
/* harmony export */   loaderIconBulma: () => (/* binding */ loaderIconBulma),
/* harmony export */   showLoader: () => (/* binding */ showLoader)
/* harmony export */ });
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");


const loaderIconBootstrap = () => {

    return `<div class="spinner-grow text-primary" role="status">
        <span class="sr-only">Loading...</span>
        </div>`
}

const loaderIcon = () => {

    return `<div class="loader"></div>`
}

const loaderIconBulma = () => {

    return `<div class="is-loading"></div>`
}

const clearLoader = (elementId = 'setLoader', loaderClass = "loader") => {
    const loader = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(elementId);
    if (!loader) {
        throw new Error(`Element not found`);
    }

    loader.style.display = "none";
    loader.classList.remove(loaderClass);

}
const showLoader = (elementId ='setLoader', loaderClass = "loader") => {
    const loader = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(elementId);
    if (!loader) {
        throw new Error(`Element  not found`);
    }
    loader.classList.add(loaderClass);
    loader.style.display = "block";
};


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/ShowResponse.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/ShowResponse.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   msgException: () => (/* binding */ msgException),
/* harmony export */   showError: () => (/* binding */ showError),
/* harmony export */   showNotification: () => (/* binding */ showNotification),
/* harmony export */   showResponse: () => (/* binding */ showResponse)
/* harmony export */ });
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");


const showError = (e) =>
  console.error(
    `${e.name} at ${e.fileName}:${e.lineNumber} - ${e.message}\n${e.stack}`,
  );

const msgException = (errorMessage) => {
  throw new Error(errorMessage);
};

/**
 *
 * @param {*} elementId - element id
 * @param {*} addClass either a success or danger class (green or red)
 * @param {*} message - html message to convey success or failure
 * @param {*} timer - timer for the message to disappear- default is 5 secs
 */
const showNotification = (
  elementId,
  addClass,
  message,
  timer = 5000,
) => {
  // display the success information for 10sec
  (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${elementId}`).style.display = 'block'; // unblock the notification
  (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${elementId}`).classList.add(addClass); // add the success class
  (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${elementId}`).innerHTML = message; // error element
  (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)('loader').classList.remove('loader'); // remove loader

  setTimeout(() => {
    (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${elementId}`).style.backgroundColor = '';
    (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${elementId}`).style.color = '';
    (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${elementId}`).innerHTML = '';
  }, timer);
};



const showResponse = (theId, message, status) => {
  const responseEl = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(theId);
  const col = status ? 'green' : 'red';

  responseEl.innerHTML = message;
  responseEl.style.color = 'green';
  responseEl.style.backgroundColor = col;
  responseEl.style.color = 'white';
  setTimeout(() => {
    responseEl.innerHTML = '';
  }, 5000); // Disappear after 5 seconds
};


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/Utility.js":
/*!************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/Utility.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   autoCompleter: () => (/* binding */ autoCompleter),
/* harmony export */   bindEvent: () => (/* binding */ bindEvent),
/* harmony export */   distinctValue: () => (/* binding */ distinctValue),
/* harmony export */   emailVal: () => (/* binding */ emailVal),
/* harmony export */   realTimeCheckLen: () => (/* binding */ realTimeCheckLen),
/* harmony export */   sanitizeInput: () => (/* binding */ sanitizeInput),
/* harmony export */   showPassword: () => (/* binding */ showPassword),
/* harmony export */   toSentenceCase: () => (/* binding */ toSentenceCase)
/* harmony export */ });
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");
/* harmony import */ var _theAutoComplete_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./theAutoComplete.js */ "./node_modules/@modernman00/shared-js-lib/theAutoComplete.js");



/**
 * Set maxlength of input fields and display error message and help text in real time
 * @param {string[]} input - array of ids of input fields
 * @param {string[]} maxi - array of maximum lengths of input fields, corresponding to the input array
 * @throws {Error} if any element with id from the input array is not found or is empty
 */
const realTimeCheckLen = (input, maxi) => {
    const data = input.map(el => (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${el}`));
    const errors = input.map(el => (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${el}_error`));
    const helps = input.map(el => (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(`${el}_help`));

    maxi.forEach((max, i) => {
        if (!data[i] || !errors[i] || !helps[i]) {
            throw new Error(`Element with ID '${input[i]}' not found or is empty`);
        }

        data[i].maxLength = parseInt(max, 10) + 1;
        data[i].addEventListener('keyup', () => {
            errors[i].innerHTML = (data[i].value.length > max) ? `You have reached the maximum limit` : "";
            helps[i].style.display = data[i].value.length > max ? '' : 'none';
            setTimeout(() => {
                helps[i].style.display = 'none';
            }, 5000);
        });
    });
}

/**
 * Converts a string to sentence case.
 *
 * Sentence case is a string where the first letter of each word is capitalized, and the rest of the letters are in lowercase.
 *
 * @param {string} str The string to convert to sentence case.
 * @returns {string} A new string in sentence case.
 * @throws {Error} If the input is not a string or is empty.    
 */
const toSentenceCase = (str) => {
    if (str || typeof str == 'string') {
        return str
            .toLowerCase() // Convert the string to lowercase
            .split(' ')    // Split the string into words
            .map(word => word.charAt(0).toUpperCase() + word.slice(1)) // Capitalize the first letter of each word
            .join(' ');    // Join the words back into a string
    } 
}

/**
 * Sets up an autocomplete functionality for an input element.
 *
 * @param {string} inputId - The ID of the input element to attach the autocomplete to.
 * @param {Array<Object>} data - An array of objects containing data for autocomplete suggestions, 
 *                               where each object should have a 'firstName' property.
 *
 * The function converts all `firstName` properties to lowercase for case-insensitive matching.
 * It initializes the autocomplete with the given input element and data, providing real-time
 * suggestions based on user input. On selecting a suggestion, it populates the input element
 * with the selected suggestion's `firstName`.
 */

const autoCompleter = (inputId, data) => {
    const lowerCaseData = data.map(item => ({...item, firstName: item.firstName.toLowerCase()}));
    (0,_theAutoComplete_js__WEBPACK_IMPORTED_MODULE_1__.autocomplete)({
        input: inputId,
        fetch: function (text, update) {
            const suggestions = lowerCaseData.filter(n => n.firstName.startsWith(text.toLowerCase()));
            update(suggestions);
        },
        onSelect: function (item) {
            input.value = item.firstName;
        }
    })
}

/**
 * Removes duplicate values from an array.
 *
 * @param {Array} array - The array from which to remove duplicates.
 * @returns {Array} A new array containing only unique values from the original array.
 */

const distinctValue = (array) => {
    return [...new Set(array)]
}

/**
 * Toggles the type of the input element with the given ID between 'password' and 'text'.
 *
 * @param {string} inputId - The ID of the input element to toggle.
 */
const showPassword = (inputId) => {
    const y = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(inputId);
    y.type = y.type === "password" ? "text" : "password";
}


/**
 * Validates an email address and updates the error message if invalid.
 *
 * @param {string} email - The email address to validate.
 * @returns {number} Returns 1 if the email is invalid and sets an error message, otherwise returns 0.
 */

const emailVal = (email) => {
    const emailExp = /^[\w\-\.\+]+\@[a-zA-Z0-9\.\-]+\.[a-zA-Z0-9]{2,4}$/;
    if (!emailExp.test(email)) {
        const errorElement = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)('email_error');
        errorElement.innerHTML = `<li style="color:red;">Please enter a valid email</li>`;
        errorElement.style.color = "red";
        return 1;
    }
    return 0;
}


/**
 * Sanitizes a string input by escaping special HTML characters to prevent XSS attacks.
 * Converts &, <, >, ", and ' to their respective HTML entities.
 * Trims leading and trailing whitespace from the input.
 *
 * @param {string} input - The input string to sanitize.
 * @returns {string} Sanitized string with HTML special characters escaped.
 */

const sanitizeInput = (input) => {
    if (typeof input !== 'string') return '';
    return input
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;')
        .replace(/'/g, '&#39;')
        .trim();
};


/**
 * Binds an event listener to an element with the specified ID.
 *
 * @param {Object} options - An object containing the following properties:
 *   - id {string}: The ID of the element to bind the event listener to.
 *   - event {string} (optional): The type of event to listen for. Defaults to 'click'.
 *   - handler {function}: The function to be called when the event occurs.
 * @throws {Error} Throws an error if the element with the specified ID is not found,
 *                 or if the handler is not a function.
 */
function bindEvent({ id, event = 'click', handler }) {
  const el = document.getElementById(id);
  if (el && typeof handler === 'function') {
    el.addEventListener(event, handler);
  }
}


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js":
/*!****************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/UtilityHtml.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   checkBox: () => (/* binding */ checkBox),
/* harmony export */   checkBox2: () => (/* binding */ checkBox2),
/* harmony export */   checkElements: () => (/* binding */ checkElements),
/* harmony export */   checkManyElements: () => (/* binding */ checkManyElements),
/* harmony export */   createAndAppendElement: () => (/* binding */ createAndAppendElement),
/* harmony export */   hideElement: () => (/* binding */ hideElement),
/* harmony export */   id: () => (/* binding */ id),
/* harmony export */   idInnerHTML: () => (/* binding */ idInnerHTML),
/* harmony export */   idValue: () => (/* binding */ idValue),
/* harmony export */   isChecked: () => (/* binding */ isChecked),
/* harmony export */   log: () => (/* binding */ log),
/* harmony export */   manipulateAttribute: () => (/* binding */ manipulateAttribute),
/* harmony export */   qSel: () => (/* binding */ qSel),
/* harmony export */   qSelAll: () => (/* binding */ qSelAll),
/* harmony export */   qSelInnerHTML: () => (/* binding */ qSelInnerHTML),
/* harmony export */   qSelValue: () => (/* binding */ qSelValue),
/* harmony export */   removeDiv: () => (/* binding */ removeDiv),
/* harmony export */   showElement: () => (/* binding */ showElement),
/* harmony export */   warningSign: () => (/* binding */ warningSign),
/* harmony export */   write: () => (/* binding */ write)
/* harmony export */ });
// Environment detection
const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';

// Log warning for browser-only functions when in Node environment
const browserOnly = (functionName) => {
  if (!isBrowser) {
    console.warn(`Warning: ${functionName} is only available in browser environments`);
    return null;
  }
  return true;
};

// DOM manipulation functions that are safe for both environments
const id = (x) => {
  if (!isBrowser) return null;
  return document.getElementById(x);
};

const idValue = (elementId) => {
  if (!isBrowser) return null;
  const element = id(elementId);
  return element ? element.value : null;
};

const idInnerHTML = (elementId) => {
  if (!isBrowser) return null;
  const element = id(elementId);
  return element ? element.innerHTML : null;
};

const warningSign = "\u26A0"; // danger warning sign - safe in any environment

const qSel = (name) => {
  if (!isBrowser) return null;
  return document.querySelector(name);
};

const qSelAll = (name) => {
  if (!isBrowser) return [];
  return document.querySelectorAll(name);
};

const qSelValue = (name) => {
  if (!isBrowser) return null;
  const element = qSel(name);
  return element ? element.value : null;
};

const qSelInnerHTML = (name) => {
  if (!isBrowser) return null;
  const element = qSel(name);
  return element ? element.innerHTML : null;
};

// This is safe for both environments
const log = (id, identifier = null) => {
  console.log(' start' + "  " + identifier);
  console.log(id);
  console.log(' end' + "  " + identifier);
};

const write = (input) => {
  if (!browserOnly('write')) return;
  document.write(input);
};

const hideElement = (elementId) => {
  if (!browserOnly('hideElement')) return;
  const element = id(elementId);
  if (element) element.style.display = "none";
};

const showElement = (elementId) => {
  if (!browserOnly('showElement')) return;
  const element = id(elementId);
  if (element) element.style.display = "block";
};

const removeDiv = (div_id) => {
  if (!browserOnly('removeDiv')) return;
  const div = document.getElementById(div_id);
  if (div) {
    return div.remove();
  }
};

/**
 * @description Manipulates an attribute of a specified HTML element
 * @param {string} idName - The ID of the element to manipulate
 * @param {string} removeOrSet - Specify "remove" to remove the attribute, otherwise set the attribute
 * @param {string} attributeType - The type of attribute to manipulate
 * @param {string|null} [nameValue=null] - The value to set for the attribute if adding it
 * @returns {void}
 */
const manipulateAttribute = (idName, removeOrSet, attributeType, nameValue = null) => {
  if (!browserOnly('manipulateAttribute')) return;
  const element = id(idName);
  if (!element) return;
  
  if (removeOrSet === "remove") {
    element.removeAttribute(attributeType);
  } else {
    element.setAttribute(attributeType, nameValue);
  }
};

// Function to check for elements and render if they exist
const checkElements = (idOrClass, classString, theFunction = null) => {
  if (!browserOnly('checkElements')) return;

  const doesElementExist = (idOrClass === "id") ? id(classString) : qSel(classString);
  // Check if elements exist before calling render function
  if (doesElementExist && doesElementExist.length) {
    theFunction(doesElementExist);
  }
};

/**
 * @description Check if elements exist before calling render function
 * @param {string} idOrClass - whether to use id or class
 * @param {string} classString - the class or id name
 * @param {function} [theFunction] - the function to call if elements exist
 * @returns {void}
 */
const checkManyElements = (idOrClass, classString, theFunction = null) => {
  if (!browserOnly('checkManyElements')) return;

  const doesElementExist = (idOrClass === "id") ? id(classString) : qSelAll(classString);
  // Check if elements exist before calling render function
  if (doesElementExist && doesElementExist.length > 0) {
    theFunction(doesElementExist);
  }
};

/**
 * @description Create a new element and append it to a parent element
 * @param {string} elementType - the type of element to create
 * @param {string} setId - the id of the new element
 * @param {string} parent - the id of the parent element
 * @param {string} [setClass] - an optional class to set on the new element
 * @returns {HTMLElement|null} The created element or null if in Node.js environment
 */
const createAndAppendElement = (elementType, setId, parent, setClass = null) => {
  if (!browserOnly('createAndAppendElement')) return null;
  
  const newDiv = document.createElement(elementType);
  newDiv.setAttribute('id', setId);
  newDiv.setAttribute('class', `field ${setClass}`);
  const parentDiv = id(parent);
  if (parentDiv) {
    return parentDiv.appendChild(newDiv);
  }
  return newDiv;
};

// These HTML template functions are safe in any environment since they just return strings
const checkBox = (subject) => {
  return `<div class="control"> 
      <label class="radio">
        <input type="radio" name="send${subject}" value="yes" id=${subject}Yes > Yes 
      </label>
      <label class="radio"> 
        <input type="radio" name="send${subject}" value="no" id=${subject}No checked> No 
      </label>
    </div>`;
};

const checkBox2 = (subject) => {
  return `<div class="control"> 
      <label class="checkbox">
        <input type="checkbox" name="send${subject}" value="yes" id=${subject}Yes> Yes 
      </label>
      <label class="checkbox"> 
        <input type="checkbox" name="send${subject}" value="no" id=${subject}No> No 
      </label>
    </div>`;
};

const isChecked = (name, fn) => {
  if (!browserOnly('isChecked')) return;
  
  const yesId = (`${name}Yes`);
  const noId = `${name}No`;
  const yesElement = id(yesId);
  const noElement = id(noId);
  
  if (!yesElement || !noElement) return;
  
  const checked = () => {
    if (yesElement.checked) {
      alert('check');
      fn();
    } else if (noElement.checked) {
      alert('check No');
    }
  };
  
  yesElement.addEventListener('click', checked);
  noElement.addEventListener('click', checked);
};


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/axiosWrapper.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/axiosWrapper.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Cookie_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Cookie.js */ "./node_modules/@modernman00/shared-js-lib/Cookie.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ "./node_modules/axios/lib/axios.js");
/* harmony import */ var axios_retry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios-retry */ "./node_modules/@modernman00/shared-js-lib/node_modules/axios-retry/dist/esm/index.js");




(0,axios_retry__WEBPACK_IMPORTED_MODULE_2__["default"])(axios__WEBPACK_IMPORTED_MODULE_1__["default"], { retries: 3 });

const csrfToken = (0,_Cookie_js__WEBPACK_IMPORTED_MODULE_0__.getCookieValue)('XSRF-TOKEN');

axios__WEBPACK_IMPORTED_MODULE_1__["default"].interceptors.request.use(config => {
    config.headers['X-Requested-With'] = 'XMLHttpRequest';
    // config.headers['Accept'] = 'application/json';

    if (csrfToken) {
        config.headers['X-XSRF-TOKEN'] = csrfToken;
    }
    
    return config;
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (axios__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/general.js":
/*!************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/general.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   matchInput: () => (/* binding */ matchInput),
/* harmony export */   parseErrorResponse: () => (/* binding */ parseErrorResponse),
/* harmony export */   redirectAfterDelay: () => (/* binding */ redirectAfterDelay),
/* harmony export */   showFileName: () => (/* binding */ showFileName)
/* harmony export */ });
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");




/**
 * 
 * @param { id of the first element} first 
 * @param {* id of the second element} second 
 * @param {* error id - if error - where to show it} err 
 */
const matchInput = (first, second, err) => {
    let error, firstInput, secondInput;
    error = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(err);
    firstInput = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(first);
    secondInput = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(second);

    secondInput.addEventListener('keyup', () => {

        if (secondInput.value !== firstInput.value) {
            error.innerHTML = 'Your passwords do not match';
            error.style.color = 'red';
        } else {
            error.innerHTML = 'The password is matched: <i class=\'fa fa-check\' aria-hidden=\'true\'></i>';
            error.style.color = 'green';
        }


    });
};




/**
 * Redirects the browser to a new URL after a specified delay.
 *
 * @param {string} url - The URL to redirect to.
 * @param {number} delay - The delay, in milliseconds, before the redirect occurs.
 * @return {void} This function does not return anything.
 */
const redirectAfterDelay = (url, delay) => {
    setTimeout(() => {
        window.location.href = url;
    }, delay);
};  
            

const parseErrorResponse = (error) => {
    let errorMessage = 'An unknown error occurred';

    if (Array.isArray(error?.response?.data?.message)) {
        errorMessage = `<ul>${error.response.data.message.map(e => `<li>${e}</li>`).join('')}</ul>`;
    } else if (typeof error?.response?.data?.message === 'string') {
        errorMessage = error.response.data.message;
    } else if (typeof error.message === 'string') {
        errorMessage = error.message;
    } 

    return errorMessage;
};

const showFileName = (fileCss) => {
    const fileInput = document.querySelector(`#${fileCss} input[type=file]`);
    fileInput.onchange = () => {
        if (fileInput.files.length > 0) {
            const fileName = document.querySelector(`#${fileCss} .file-name`);
            fileName.textContent = fileInput.files[0].name;
        }
    };
}




/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   autoCompleter: () => (/* reexport safe */ _Utility_js__WEBPACK_IMPORTED_MODULE_2__.autoCompleter),
/* harmony export */   bindEvent: () => (/* reexport safe */ _Utility_js__WEBPACK_IMPORTED_MODULE_2__.bindEvent),
/* harmony export */   calTiming: () => (/* reexport safe */ _DateTime_js__WEBPACK_IMPORTED_MODULE_7__.calTiming),
/* harmony export */   checkBox: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.checkBox),
/* harmony export */   checkBox2: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.checkBox2),
/* harmony export */   checkCookie: () => (/* reexport safe */ _Cookie_js__WEBPACK_IMPORTED_MODULE_4__.checkCookie),
/* harmony export */   checkElements: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.checkElements),
/* harmony export */   checkManyElements: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.checkManyElements),
/* harmony export */   clearLoader: () => (/* reexport safe */ _Loader_js__WEBPACK_IMPORTED_MODULE_3__.clearLoader),
/* harmony export */   countryCodes: () => (/* reexport safe */ _CountryCode_js__WEBPACK_IMPORTED_MODULE_8__.countryCodes),
/* harmony export */   createAdminLoginHandler: () => (/* reexport safe */ _AcctMgt_login_js__WEBPACK_IMPORTED_MODULE_12__.createAdminLoginHandler),
/* harmony export */   createAndAppendElement: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.createAndAppendElement),
/* harmony export */   createCodeSubmitHandler: () => (/* reexport safe */ _AcctMgt_code_js__WEBPACK_IMPORTED_MODULE_10__.createCodeSubmitHandler),
/* harmony export */   date2String: () => (/* reexport safe */ _DateTime_js__WEBPACK_IMPORTED_MODULE_7__.date2String),
/* harmony export */   distinctValue: () => (/* reexport safe */ _Utility_js__WEBPACK_IMPORTED_MODULE_2__.distinctValue),
/* harmony export */   emailVal: () => (/* reexport safe */ _Utility_js__WEBPACK_IMPORTED_MODULE_2__.emailVal),
/* harmony export */   forgotSubmitHandler: () => (/* reexport safe */ _AcctMgt_forgot_js__WEBPACK_IMPORTED_MODULE_11__.forgotSubmitHandler),
/* harmony export */   getApiData: () => (/* reexport safe */ _Http_js__WEBPACK_IMPORTED_MODULE_0__.getApiData),
/* harmony export */   getCookie: () => (/* reexport safe */ _Cookie_js__WEBPACK_IMPORTED_MODULE_4__.getCookie),
/* harmony export */   getCookieValue: () => (/* reexport safe */ _Cookie_js__WEBPACK_IMPORTED_MODULE_4__.getCookieValue),
/* harmony export */   getMultipleApiData: () => (/* reexport safe */ _Http_js__WEBPACK_IMPORTED_MODULE_0__.getMultipleApiData),
/* harmony export */   hideElement: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.hideElement),
/* harmony export */   id: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.id),
/* harmony export */   idInnerHTML: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.idInnerHTML),
/* harmony export */   idValue: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.idValue),
/* harmony export */   injectCountryCode: () => (/* reexport safe */ _CountryCode_js__WEBPACK_IMPORTED_MODULE_8__.injectCountryCode),
/* harmony export */   isChecked: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.isChecked),
/* harmony export */   loaderIcon: () => (/* reexport safe */ _Loader_js__WEBPACK_IMPORTED_MODULE_3__.loaderIcon),
/* harmony export */   loaderIconBootstrap: () => (/* reexport safe */ _Loader_js__WEBPACK_IMPORTED_MODULE_3__.loaderIconBootstrap),
/* harmony export */   loaderIconBulma: () => (/* reexport safe */ _Loader_js__WEBPACK_IMPORTED_MODULE_3__.loaderIconBulma),
/* harmony export */   log: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.log),
/* harmony export */   loginSubmission: () => (/* reexport safe */ _AcctMgt_processAll_js__WEBPACK_IMPORTED_MODULE_13__.loginSubmission),
/* harmony export */   manipulateAttribute: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.manipulateAttribute),
/* harmony export */   matchInput: () => (/* reexport safe */ _general_js__WEBPACK_IMPORTED_MODULE_15__.matchInput),
/* harmony export */   msgException: () => (/* reexport safe */ _ShowResponse_js__WEBPACK_IMPORTED_MODULE_6__.msgException),
/* harmony export */   parseErrorResponse: () => (/* reexport safe */ _general_js__WEBPACK_IMPORTED_MODULE_15__.parseErrorResponse),
/* harmony export */   postFormData: () => (/* reexport safe */ _Http_js__WEBPACK_IMPORTED_MODULE_0__.postFormData),
/* harmony export */   qSel: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.qSel),
/* harmony export */   qSelAll: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.qSelAll),
/* harmony export */   qSelInnerHTML: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.qSelInnerHTML),
/* harmony export */   qSelValue: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.qSelValue),
/* harmony export */   realTimeCheckLen: () => (/* reexport safe */ _Utility_js__WEBPACK_IMPORTED_MODULE_2__.realTimeCheckLen),
/* harmony export */   redirectAfterDelay: () => (/* reexport safe */ _general_js__WEBPACK_IMPORTED_MODULE_15__.redirectAfterDelay),
/* harmony export */   removeDiv: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.removeDiv),
/* harmony export */   sanitizeInput: () => (/* reexport safe */ _Utility_js__WEBPACK_IMPORTED_MODULE_2__.sanitizeInput),
/* harmony export */   setCookie: () => (/* reexport safe */ _Cookie_js__WEBPACK_IMPORTED_MODULE_4__.setCookie),
/* harmony export */   setupPasswordChange: () => (/* reexport safe */ _AcctMgt_changePassword_js__WEBPACK_IMPORTED_MODULE_9__.setupPasswordChange),
/* harmony export */   showElement: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.showElement),
/* harmony export */   showError: () => (/* reexport safe */ _ShowResponse_js__WEBPACK_IMPORTED_MODULE_6__.showError),
/* harmony export */   showFileName: () => (/* reexport safe */ _general_js__WEBPACK_IMPORTED_MODULE_15__.showFileName),
/* harmony export */   showLoader: () => (/* reexport safe */ _Loader_js__WEBPACK_IMPORTED_MODULE_3__.showLoader),
/* harmony export */   showNotification: () => (/* reexport safe */ _ShowResponse_js__WEBPACK_IMPORTED_MODULE_6__.showNotification),
/* harmony export */   showPassword: () => (/* reexport safe */ _Utility_js__WEBPACK_IMPORTED_MODULE_2__.showPassword),
/* harmony export */   showResponse: () => (/* reexport safe */ _ShowResponse_js__WEBPACK_IMPORTED_MODULE_6__.showResponse),
/* harmony export */   timeAgo: () => (/* reexport safe */ _DateTime_js__WEBPACK_IMPORTED_MODULE_7__.timeAgo),
/* harmony export */   toSentenceCase: () => (/* reexport safe */ _Utility_js__WEBPACK_IMPORTED_MODULE_2__.toSentenceCase),
/* harmony export */   update: () => (/* reexport safe */ _AcctMgt_update_js__WEBPACK_IMPORTED_MODULE_14__.update),
/* harmony export */   updateTimeRealTime: () => (/* reexport safe */ _DateTime_js__WEBPACK_IMPORTED_MODULE_7__.updateTimeRealTime),
/* harmony export */   warningSign: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.warningSign),
/* harmony export */   write: () => (/* reexport safe */ _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__.write)
/* harmony export */ });
/* harmony import */ var _Http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Http.js */ "./node_modules/@modernman00/shared-js-lib/Http.js");
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");
/* harmony import */ var _Utility_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utility.js */ "./node_modules/@modernman00/shared-js-lib/Utility.js");
/* harmony import */ var _Loader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Loader.js */ "./node_modules/@modernman00/shared-js-lib/Loader.js");
/* harmony import */ var _Cookie_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Cookie.js */ "./node_modules/@modernman00/shared-js-lib/Cookie.js");
/* harmony import */ var _FormHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FormHelper.js */ "./node_modules/@modernman00/shared-js-lib/FormHelper.js");
/* harmony import */ var _ShowResponse_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ShowResponse.js */ "./node_modules/@modernman00/shared-js-lib/ShowResponse.js");
/* harmony import */ var _DateTime_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./DateTime.js */ "./node_modules/@modernman00/shared-js-lib/DateTime.js");
/* harmony import */ var _CountryCode_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./CountryCode.js */ "./node_modules/@modernman00/shared-js-lib/CountryCode.js");
/* harmony import */ var _AcctMgt_changePassword_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./AcctMgt/changePassword.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/changePassword.js");
/* harmony import */ var _AcctMgt_code_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./AcctMgt/code.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/code.js");
/* harmony import */ var _AcctMgt_forgot_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AcctMgt/forgot.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/forgot.js");
/* harmony import */ var _AcctMgt_login_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./AcctMgt/login.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/login.js");
/* harmony import */ var _AcctMgt_processAll_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./AcctMgt/processAll.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/processAll.js");
/* harmony import */ var _AcctMgt_update_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./AcctMgt/update.js */ "./node_modules/@modernman00/shared-js-lib/AcctMgt/update.js");
/* harmony import */ var _general_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./general.js */ "./node_modules/@modernman00/shared-js-lib/general.js");


















/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/node_modules/axios-retry/dist/esm/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/node_modules/axios-retry/dist/esm/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_OPTIONS: () => (/* binding */ DEFAULT_OPTIONS),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   exponentialDelay: () => (/* binding */ exponentialDelay),
/* harmony export */   isIdempotentRequestError: () => (/* binding */ isIdempotentRequestError),
/* harmony export */   isNetworkError: () => (/* binding */ isNetworkError),
/* harmony export */   isNetworkOrIdempotentRequestError: () => (/* binding */ isNetworkOrIdempotentRequestError),
/* harmony export */   isRetryableError: () => (/* binding */ isRetryableError),
/* harmony export */   isSafeRequestError: () => (/* binding */ isSafeRequestError),
/* harmony export */   linearDelay: () => (/* binding */ linearDelay),
/* harmony export */   namespace: () => (/* binding */ namespace),
/* harmony export */   retryAfter: () => (/* binding */ retryAfter)
/* harmony export */ });
/* harmony import */ var is_retry_allowed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-retry-allowed */ "./node_modules/is-retry-allowed/index.js");

const namespace = 'axios-retry';
function isNetworkError(error) {
    const CODE_EXCLUDE_LIST = ['ERR_CANCELED', 'ECONNABORTED'];
    if (error.response) {
        return false;
    }
    if (!error.code) {
        return false;
    }
    // Prevents retrying timed out & cancelled requests
    if (CODE_EXCLUDE_LIST.includes(error.code)) {
        return false;
    }
    // Prevents retrying unsafe errors
    return is_retry_allowed__WEBPACK_IMPORTED_MODULE_0__(error);
}
const SAFE_HTTP_METHODS = ['get', 'head', 'options'];
const IDEMPOTENT_HTTP_METHODS = SAFE_HTTP_METHODS.concat(['put', 'delete']);
function isRetryableError(error) {
    return (error.code !== 'ECONNABORTED' &&
        (!error.response ||
            error.response.status === 429 ||
            (error.response.status >= 500 && error.response.status <= 599)));
}
function isSafeRequestError(error) {
    if (!error.config?.method) {
        // Cannot determine if the request can be retried
        return false;
    }
    return isRetryableError(error) && SAFE_HTTP_METHODS.indexOf(error.config.method) !== -1;
}
function isIdempotentRequestError(error) {
    if (!error.config?.method) {
        // Cannot determine if the request can be retried
        return false;
    }
    return isRetryableError(error) && IDEMPOTENT_HTTP_METHODS.indexOf(error.config.method) !== -1;
}
function isNetworkOrIdempotentRequestError(error) {
    return isNetworkError(error) || isIdempotentRequestError(error);
}
function retryAfter(error = undefined) {
    const retryAfterHeader = error?.response?.headers['retry-after'];
    if (!retryAfterHeader) {
        return 0;
    }
    // if the retry after header is a number, convert it to milliseconds
    let retryAfterMs = (Number(retryAfterHeader) || 0) * 1000;
    // If the retry after header is a date, get the number of milliseconds until that date
    if (retryAfterMs === 0) {
        retryAfterMs = (new Date(retryAfterHeader).valueOf() || 0) - Date.now();
    }
    return Math.max(0, retryAfterMs);
}
function noDelay(_retryNumber = 0, error = undefined) {
    return Math.max(0, retryAfter(error));
}
function exponentialDelay(retryNumber = 0, error = undefined, delayFactor = 100) {
    const calculatedDelay = 2 ** retryNumber * delayFactor;
    const delay = Math.max(calculatedDelay, retryAfter(error));
    const randomSum = delay * 0.2 * Math.random(); // 0-20% of the delay
    return delay + randomSum;
}
/**
 * Linear delay
 * @param {number | undefined} delayFactor - delay factor in milliseconds (default: 100)
 * @returns {function} (retryNumber: number, error: AxiosError | undefined) => number
 */
function linearDelay(delayFactor = 100) {
    return (retryNumber = 0, error = undefined) => {
        const delay = retryNumber * delayFactor;
        return Math.max(delay, retryAfter(error));
    };
}
const DEFAULT_OPTIONS = {
    retries: 3,
    retryCondition: isNetworkOrIdempotentRequestError,
    retryDelay: noDelay,
    shouldResetTimeout: false,
    onRetry: () => { },
    onMaxRetryTimesExceeded: () => { },
    validateResponse: null
};
function getRequestOptions(config, defaultOptions) {
    return { ...DEFAULT_OPTIONS, ...defaultOptions, ...config[namespace] };
}
function setCurrentState(config, defaultOptions, resetLastRequestTime = false) {
    const currentState = getRequestOptions(config, defaultOptions || {});
    currentState.retryCount = currentState.retryCount || 0;
    if (!currentState.lastRequestTime || resetLastRequestTime) {
        currentState.lastRequestTime = Date.now();
    }
    config[namespace] = currentState;
    return currentState;
}
function fixConfig(axiosInstance, config) {
    // @ts-ignore
    if (axiosInstance.defaults.agent === config.agent) {
        // @ts-ignore
        delete config.agent;
    }
    if (axiosInstance.defaults.httpAgent === config.httpAgent) {
        delete config.httpAgent;
    }
    if (axiosInstance.defaults.httpsAgent === config.httpsAgent) {
        delete config.httpsAgent;
    }
}
async function shouldRetry(currentState, error) {
    const { retries, retryCondition } = currentState;
    const shouldRetryOrPromise = (currentState.retryCount || 0) < retries && retryCondition(error);
    // This could be a promise
    if (typeof shouldRetryOrPromise === 'object') {
        try {
            const shouldRetryPromiseResult = await shouldRetryOrPromise;
            // keep return true unless shouldRetryPromiseResult return false for compatibility
            return shouldRetryPromiseResult !== false;
        }
        catch (_err) {
            return false;
        }
    }
    return shouldRetryOrPromise;
}
async function handleRetry(axiosInstance, currentState, error, config) {
    currentState.retryCount += 1;
    const { retryDelay, shouldResetTimeout, onRetry } = currentState;
    const delay = retryDelay(currentState.retryCount, error);
    // Axios fails merging this configuration to the default configuration because it has an issue
    // with circular structures: https://github.com/mzabriskie/axios/issues/370
    fixConfig(axiosInstance, config);
    if (!shouldResetTimeout && config.timeout && currentState.lastRequestTime) {
        const lastRequestDuration = Date.now() - currentState.lastRequestTime;
        const timeout = config.timeout - lastRequestDuration - delay;
        if (timeout <= 0) {
            return Promise.reject(error);
        }
        config.timeout = timeout;
    }
    config.transformRequest = [(data) => data];
    await onRetry(currentState.retryCount, error, config);
    if (config.signal?.aborted) {
        return Promise.resolve(axiosInstance(config));
    }
    return new Promise((resolve) => {
        const abortListener = () => {
            clearTimeout(timeout);
            resolve(axiosInstance(config));
        };
        const timeout = setTimeout(() => {
            resolve(axiosInstance(config));
            if (config.signal?.removeEventListener) {
                config.signal.removeEventListener('abort', abortListener);
            }
        }, delay);
        if (config.signal?.addEventListener) {
            config.signal.addEventListener('abort', abortListener, { once: true });
        }
    });
}
async function handleMaxRetryTimesExceeded(currentState, error) {
    if (currentState.retryCount >= currentState.retries)
        await currentState.onMaxRetryTimesExceeded(error, currentState.retryCount);
}
const axiosRetry = (axiosInstance, defaultOptions) => {
    const requestInterceptorId = axiosInstance.interceptors.request.use((config) => {
        setCurrentState(config, defaultOptions, true);
        if (config[namespace]?.validateResponse) {
            // by setting this, all HTTP responses will be go through the error interceptor first
            config.validateStatus = () => false;
        }
        return config;
    });
    const responseInterceptorId = axiosInstance.interceptors.response.use(null, async (error) => {
        const { config } = error;
        // If we have no information to retry the request
        if (!config) {
            return Promise.reject(error);
        }
        const currentState = setCurrentState(config, defaultOptions);
        if (error.response && currentState.validateResponse?.(error.response)) {
            // no issue with response
            return error.response;
        }
        if (await shouldRetry(currentState, error)) {
            return handleRetry(axiosInstance, currentState, error, config);
        }
        await handleMaxRetryTimesExceeded(currentState, error);
        return Promise.reject(error);
    });
    return { requestInterceptorId, responseInterceptorId };
};
// Compatibility with CommonJS
axiosRetry.isNetworkError = isNetworkError;
axiosRetry.isSafeRequestError = isSafeRequestError;
axiosRetry.isIdempotentRequestError = isIdempotentRequestError;
axiosRetry.isNetworkOrIdempotentRequestError = isNetworkOrIdempotentRequestError;
axiosRetry.exponentialDelay = exponentialDelay;
axiosRetry.linearDelay = linearDelay;
axiosRetry.isRetryableError = isRetryableError;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (axiosRetry);


/***/ }),

/***/ "./node_modules/@modernman00/shared-js-lib/theAutoComplete.js":
/*!********************************************************************!*\
  !*** ./node_modules/@modernman00/shared-js-lib/theAutoComplete.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   autocomplete: () => (/* binding */ autocomplete)
/* harmony export */ });
/* harmony import */ var _UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./UtilityHtml.js */ "./node_modules/@modernman00/shared-js-lib/UtilityHtml.js");


/**
 * 
 * @param {string} inputId 
 * @param {Array} arr 
 */

/**
 * Sets up an autocomplete functionality for an input element.
 *
 * @param {string} inputId - The ID of the input element to attach the autocomplete to.
 * @param {Array<string>} arr - An array of strings containing the autocomplete suggestions.
 *
 * The function converts all strings in the array to lowercase for case-insensitive matching.
 * It initializes the autocomplete with the given input element and array of suggestions,
 * providing real-time suggestions based on user input. On selecting a suggestion,
 * it populates the input element with the selected suggestion.
 */
const autocomplete = (inputId, arr) => {
    const whatToBuyInput = (0,_UtilityHtml_js__WEBPACK_IMPORTED_MODULE_0__.id)(inputId); // Get the text input
    if (whatToBuyInput) {
  // Create a <ul> for autocomplete suggestions
  const suggestionList = document.createElement("ul");
  suggestionList.classList.add("autocomplete-suggestions");
  suggestionList.id = "suggestions"; // For accessibility
  whatToBuyInput.parentElement.appendChild(suggestionList); // Append to input's parent

  // Function to show matching suggestions based on user input
  const showSuggestions = (inputValue) => {
    suggestionList.innerHTML = ""; // Clear previous suggestions
    if (!inputValue) return; // Exit if input is empty

    // Filter items that match the input (case-insensitive), limit to 8
    const matches = arr
      .filter(item => item.toLowerCase().includes(inputValue.toLowerCase()))
      .slice(0, 8);

    // Create <li> for each match
    matches.forEach((item, index) => {
      const li = document.createElement("li");
      li.textContent = item;
      li.setAttribute("tabindex", "0"); // Make focusable for keyboard
      li.setAttribute("data-index", index); // Store index for navigation
      li.addEventListener("click", () => {
        whatToBuyInput.value = item; // Set input value on click
        suggestionList.innerHTML = ""; // Clear suggestions
      });
      li.addEventListener("keypress", (e) => {
        if (e.key === "Enter") {
          whatToBuyInput.value = item; // Set input value on Enter
          suggestionList.innerHTML = ""; // Clear suggestions
        }
      });
      suggestionList.appendChild(li);
    });
  };

  // Show suggestions as user types
  whatToBuyInput.addEventListener("input", (e) => {
    showSuggestions(e.target.value);
  });

  // Clear suggestions on blur (with delay for click to register)
  whatToBuyInput.addEventListener("blur", () => {
    setTimeout(() => suggestionList.innerHTML = "", 200);
  });

  // Handle keyboard navigation for suggestions
  whatToBuyInput.addEventListener("keydown", (e) => {
    const suggestions = suggestionList.querySelectorAll("li");
    if (!suggestions.length) return; // Exit if no suggestions

    let focusedIndex = Array.from(suggestions).findIndex(li => li === document.activeElement);
    if (e.key === "ArrowDown") {
      e.preventDefault(); // Prevent cursor movement
      focusedIndex = (focusedIndex + 1) % suggestions.length; // Loop to start
      suggestions[focusedIndex].focus();
    } else if (e.key === "ArrowUp") {
      e.preventDefault();
      focusedIndex = (focusedIndex - 1 + suggestions.length) % suggestions.length; // Loop to end
      suggestions[focusedIndex].focus();
    } else if (e.key === "Enter" && focusedIndex >= 0) {
      e.preventDefault();
      whatToBuyInput.value = suggestions[focusedIndex].textContent; // Select item
      suggestionList.innerHTML = ""; // Clear suggestions
    } else if (e.key === "Escape") {
      suggestionList.innerHTML = ""; // Clear suggestions
    }
  });
}
}



/***/ }),

/***/ "./node_modules/autocompleter/autocomplete.js":
/*!****************************************************!*\
  !*** ./node_modules/autocompleter/autocomplete.js ***!
  \****************************************************/
/***/ (function(module) {

(function (global, factory) {
   true ? module.exports = factory() :
  0;
}(this, (function () { 'use strict';

  /*
   * https://github.com/kraaden/autocomplete
   * Copyright (c) 2016 Denys Krasnoshchok
   * MIT License
   */
  function autocomplete(settings) {
      // just an alias to minimize JS file size
      var doc = document;
      var container = settings.container || doc.createElement("div");
      var containerStyle = container.style;
      var userAgent = navigator.userAgent;
      var mobileFirefox = ~userAgent.indexOf("Firefox") && ~userAgent.indexOf("Mobile");
      var debounceWaitMs = settings.debounceWaitMs || 0;
      var preventSubmit = settings.preventSubmit || false;
      var disableAutoSelect = settings.disableAutoSelect || false;
      // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead
      var keyUpEventName = mobileFirefox ? "input" : "keyup";
      var items = [];
      var inputValue = "";
      var minLen = 2;
      var showOnFocus = settings.showOnFocus;
      var selected;
      var keypressCounter = 0;
      var debounceTimer;
      if (settings.minLength !== undefined) {
          minLen = settings.minLength;
      }
      if (!settings.input) {
          throw new Error("input undefined");
      }
      var input = settings.input;
      container.className = "autocomplete " + (settings.className || "");
      // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning
      containerStyle.position = "absolute";
      /**
       * Detach the container from DOM
       */
      function detach() {
          var parent = container.parentNode;
          if (parent) {
              parent.removeChild(container);
          }
      }
      /**
       * Clear debouncing timer if assigned
       */
      function clearDebounceTimer() {
          if (debounceTimer) {
              window.clearTimeout(debounceTimer);
          }
      }
      /**
       * Attach the container to DOM
       */
      function attach() {
          if (!container.parentNode) {
              doc.body.appendChild(container);
          }
      }
      /**
       * Check if container for autocomplete is displayed
       */
      function containerDisplayed() {
          return !!container.parentNode;
      }
      /**
       * Clear autocomplete state and hide container
       */
      function clear() {
          // prevent the update call if there are pending AJAX requests
          keypressCounter++;
          items = [];
          inputValue = "";
          selected = undefined;
          detach();
      }
      /**
       * Update autocomplete position
       */
      function updatePosition() {
          if (!containerDisplayed()) {
              return;
          }
          containerStyle.height = "auto";
          containerStyle.width = input.offsetWidth + "px";
          var maxHeight = 0;
          var inputRect;
          function calc() {
              var docEl = doc.documentElement;
              var clientTop = docEl.clientTop || doc.body.clientTop || 0;
              var clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;
              var scrollTop = window.pageYOffset || docEl.scrollTop;
              var scrollLeft = window.pageXOffset || docEl.scrollLeft;
              inputRect = input.getBoundingClientRect();
              var top = inputRect.top + input.offsetHeight + scrollTop - clientTop;
              var left = inputRect.left + scrollLeft - clientLeft;
              containerStyle.top = top + "px";
              containerStyle.left = left + "px";
              maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);
              if (maxHeight < 0) {
                  maxHeight = 0;
              }
              containerStyle.top = top + "px";
              containerStyle.bottom = "";
              containerStyle.left = left + "px";
              containerStyle.maxHeight = maxHeight + "px";
          }
          // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)
          calc();
          calc();
          if (settings.customize && inputRect) {
              settings.customize(input, inputRect, container, maxHeight);
          }
      }
      /**
       * Redraw the autocomplete div element with suggestions
       */
      function update() {
          // delete all children from autocomplete DOM container
          while (container.firstChild) {
              container.removeChild(container.firstChild);
          }
          // function for rendering autocomplete suggestions
          var render = function (item, currentValue) {
              var itemElement = doc.createElement("div");
              itemElement.textContent = item.label || "";
              return itemElement;
          };
          if (settings.render) {
              render = settings.render;
          }
          // function to render autocomplete groups
          var renderGroup = function (groupName, currentValue) {
              var groupDiv = doc.createElement("div");
              groupDiv.textContent = groupName;
              return groupDiv;
          };
          if (settings.renderGroup) {
              renderGroup = settings.renderGroup;
          }
          var fragment = doc.createDocumentFragment();
          var prevGroup = "#9?$";
          items.forEach(function (item) {
              if (item.group && item.group !== prevGroup) {
                  prevGroup = item.group;
                  var groupDiv = renderGroup(item.group, inputValue);
                  if (groupDiv) {
                      groupDiv.className += " group";
                      fragment.appendChild(groupDiv);
                  }
              }
              var div = render(item, inputValue);
              if (div) {
                  div.addEventListener("click", function (ev) {
                      settings.onSelect(item, input);
                      clear();
                      ev.preventDefault();
                      ev.stopPropagation();
                  });
                  if (item === selected) {
                      div.className += " selected";
                  }
                  fragment.appendChild(div);
              }
          });
          container.appendChild(fragment);
          if (items.length < 1) {
              if (settings.emptyMsg) {
                  var empty = doc.createElement("div");
                  empty.className = "empty";
                  empty.textContent = settings.emptyMsg;
                  container.appendChild(empty);
              }
              else {
                  clear();
                  return;
              }
          }
          attach();
          updatePosition();
          updateScroll();
      }
      function updateIfDisplayed() {
          if (containerDisplayed()) {
              update();
          }
      }
      function resizeEventHandler() {
          updateIfDisplayed();
      }
      function scrollEventHandler(e) {
          if (e.target !== container) {
              updateIfDisplayed();
          }
          else {
              e.preventDefault();
          }
      }
      function keyupEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          var ignore = settings.keysToIgnore || [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];
          for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {
              var key = ignore_1[_i];
              if (keyCode === key) {
                  return;
              }
          }
          if (keyCode >= 112 /* F1 */ && keyCode <= 123 /* F12 */ && !settings.keysToIgnore) {
              return;
          }
          // the down key is used to open autocomplete
          if (keyCode === 40 /* Down */ && containerDisplayed()) {
              return;
          }
          startFetch(0 /* Keyboard */);
      }
      /**
       * Automatically move scroll bar if selected item is not visible
       */
      function updateScroll() {
          var elements = container.getElementsByClassName("selected");
          if (elements.length > 0) {
              var element = elements[0];
              // make group visible
              var previous = element.previousElementSibling;
              if (previous && previous.className.indexOf("group") !== -1 && !previous.previousElementSibling) {
                  element = previous;
              }
              if (element.offsetTop < container.scrollTop) {
                  container.scrollTop = element.offsetTop;
              }
              else {
                  var selectBottom = element.offsetTop + element.offsetHeight;
                  var containerBottom = container.scrollTop + container.offsetHeight;
                  if (selectBottom > containerBottom) {
                      container.scrollTop += selectBottom - containerBottom;
                  }
              }
          }
      }
      /**
       * Select the previous item in suggestions
       */
      function selectPrev() {
          if (items.length < 1) {
              selected = undefined;
          }
          else {
              if (selected === items[0]) {
                  selected = items[items.length - 1];
              }
              else {
                  for (var i = items.length - 1; i > 0; i--) {
                      if (selected === items[i] || i === 1) {
                          selected = items[i - 1];
                          break;
                      }
                  }
              }
          }
      }
      /**
       * Select the next item in suggestions
       */
      function selectNext() {
          if (items.length < 1) {
              selected = undefined;
          }
          if (!selected || selected === items[items.length - 1]) {
              selected = items[0];
              return;
          }
          for (var i = 0; i < (items.length - 1); i++) {
              if (selected === items[i]) {
                  selected = items[i + 1];
                  break;
              }
          }
      }
      function keydownEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {
              var containerIsDisplayed = containerDisplayed();
              if (keyCode === 27 /* Esc */) {
                  clear();
              }
              else {
                  if (!containerIsDisplayed || items.length < 1) {
                      return;
                  }
                  keyCode === 38 /* Up */
                      ? selectPrev()
                      : selectNext();
                  update();
              }
              ev.preventDefault();
              if (containerIsDisplayed) {
                  ev.stopPropagation();
              }
              return;
          }
          if (keyCode === 13 /* Enter */) {
              if (selected) {
                  settings.onSelect(selected, input);
                  clear();
              }
              if (preventSubmit) {
                  ev.preventDefault();
              }
          }
      }
      function focusEventHandler() {
          if (showOnFocus) {
              startFetch(1 /* Focus */);
          }
      }
      function startFetch(trigger) {
          // If multiple keys were pressed, before we get an update from server,
          // this may cause redrawing autocomplete multiple times after the last key was pressed.
          // To avoid this, the number of times keyboard was pressed will be saved and checked before redraw.
          var savedKeypressCounter = ++keypressCounter;
          var inputText = input.value;
          var cursorPos = input.selectionStart || 0;
          if (inputText.length >= minLen || trigger === 1 /* Focus */) {
              clearDebounceTimer();
              debounceTimer = window.setTimeout(function () {
                  settings.fetch(inputText, function (elements) {
                      if (keypressCounter === savedKeypressCounter && elements) {
                          items = elements;
                          inputValue = inputText;
                          selected = (items.length < 1 || disableAutoSelect) ? undefined : items[0];
                          update();
                      }
                  }, trigger, cursorPos);
              }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);
          }
          else {
              clear();
          }
      }
      function blurEventHandler() {
          // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM
          setTimeout(function () {
              if (doc.activeElement !== input) {
                  clear();
              }
          }, 200);
      }
      /**
       * Fixes #26: on long clicks focus will be lost and onSelect method will not be called
       */
      container.addEventListener("mousedown", function (evt) {
          evt.stopPropagation();
          evt.preventDefault();
      });
      /**
       * Fixes #30: autocomplete closes when scrollbar is clicked in IE
       * See: https://stackoverflow.com/a/9210267/13172349
       */
      container.addEventListener("focus", function () { return input.focus(); });
      /**
       * This function will remove DOM elements and clear event handlers
       */
      function destroy() {
          input.removeEventListener("focus", focusEventHandler);
          input.removeEventListener("keydown", keydownEventHandler);
          input.removeEventListener(keyUpEventName, keyupEventHandler);
          input.removeEventListener("blur", blurEventHandler);
          window.removeEventListener("resize", resizeEventHandler);
          doc.removeEventListener("scroll", scrollEventHandler, true);
          clearDebounceTimer();
          clear();
      }
      // setup event handlers
      input.addEventListener("keydown", keydownEventHandler);
      input.addEventListener(keyUpEventName, keyupEventHandler);
      input.addEventListener("blur", blurEventHandler);
      input.addEventListener("focus", focusEventHandler);
      window.addEventListener("resize", resizeEventHandler);
      doc.addEventListener("scroll", scrollEventHandler, true);
      return {
          destroy: destroy
      };
  }

  return autocomplete;

})));
//# sourceMappingURL=autocomplete.js.map


/***/ }),

/***/ "./node_modules/axios-retry/lib/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/axios-retry/lib/esm/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_OPTIONS: () => (/* binding */ DEFAULT_OPTIONS),
/* harmony export */   "default": () => (/* binding */ axiosRetry),
/* harmony export */   exponentialDelay: () => (/* binding */ exponentialDelay),
/* harmony export */   isIdempotentRequestError: () => (/* binding */ isIdempotentRequestError),
/* harmony export */   isNetworkError: () => (/* binding */ isNetworkError),
/* harmony export */   isNetworkOrIdempotentRequestError: () => (/* binding */ isNetworkOrIdempotentRequestError),
/* harmony export */   isRetryableError: () => (/* binding */ isRetryableError),
/* harmony export */   isSafeRequestError: () => (/* binding */ isSafeRequestError),
/* harmony export */   namespace: () => (/* binding */ namespace)
/* harmony export */ });
/* harmony import */ var is_retry_allowed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-retry-allowed */ "./node_modules/is-retry-allowed/index.js");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var namespace = 'axios-retry';
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isNetworkError(error) {
  var CODE_EXCLUDE_LIST = ['ERR_CANCELED', 'ECONNABORTED'];
  return !error.response && Boolean(error.code) && // Prevents retrying cancelled requests
  !CODE_EXCLUDE_LIST.includes(error.code) && // Prevents retrying timed out & cancelled requests
  is_retry_allowed__WEBPACK_IMPORTED_MODULE_0__(error) // Prevents retrying unsafe errors
  ;
}
var SAFE_HTTP_METHODS = ['get', 'head', 'options'];
var IDEMPOTENT_HTTP_METHODS = SAFE_HTTP_METHODS.concat(['put', 'delete']);
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isRetryableError(error) {
  return error.code !== 'ECONNABORTED' && (!error.response || error.response.status >= 500 && error.response.status <= 599);
}
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isSafeRequestError(error) {
  if (!error.config) {
    // Cannot determine if the request can be retried
    return false;
  }

  return isRetryableError(error) && SAFE_HTTP_METHODS.indexOf(error.config.method) !== -1;
}
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isIdempotentRequestError(error) {
  if (!error.config) {
    // Cannot determine if the request can be retried
    return false;
  }

  return isRetryableError(error) && IDEMPOTENT_HTTP_METHODS.indexOf(error.config.method) !== -1;
}
/**
 * @param  {Error}  error
 * @return {boolean}
 */

function isNetworkOrIdempotentRequestError(error) {
  return isNetworkError(error) || isIdempotentRequestError(error);
}
/**
 * @return {number} - delay in milliseconds, always 0
 */

function noDelay() {
  return 0;
}
/**
 * Set delayFactor 1000 for an exponential delay to occur on the order
 * of seconds
 * @param  {number} [retryNumber=0]
 * @param  {Error}  error - unused; for existing API of retryDelay callback
 * @param  {number} [delayFactor=100] milliseconds
 * @return {number} - delay in milliseconds
 */


function exponentialDelay() {
  var retryNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var error = arguments.length > 1 ? arguments[1] : undefined;
  var delayFactor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;
  var delay = Math.pow(2, retryNumber) * delayFactor;
  var randomSum = delay * 0.2 * Math.random(); // 0-20% of the delay

  return delay + randomSum;
}
/** @type {IAxiosRetryConfig} */

var DEFAULT_OPTIONS = {
  retries: 3,
  retryCondition: isNetworkOrIdempotentRequestError,
  retryDelay: noDelay,
  shouldResetTimeout: false,
  onRetry: () => {}
};
/**
 * Returns the axios-retry options for the current request
 * @param  {AxiosRequestConfig} config
 * @param  {IAxiosRetryConfig} defaultOptions
 * @return {IAxiosRetryConfigExtended}
 */

function getRequestOptions(config, defaultOptions) {
  return _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), defaultOptions), config[namespace]);
}
/**
 * Initializes and returns the retry state for the given request/config
 * @param  {AxiosRequestConfig} config
 * @param  {IAxiosRetryConfig} defaultOptions
 * @return {IAxiosRetryConfigExtended}
 */


function getCurrentState(config, defaultOptions) {
  var currentState = getRequestOptions(config, defaultOptions);
  currentState.retryCount = currentState.retryCount || 0;
  config[namespace] = currentState;
  return currentState;
}
/**
 * @param  {Axios} axios
 * @param  {AxiosRequestConfig} config
 */


function fixConfig(axios, config) {
  if (axios.defaults.agent === config.agent) {
    delete config.agent;
  }

  if (axios.defaults.httpAgent === config.httpAgent) {
    delete config.httpAgent;
  }

  if (axios.defaults.httpsAgent === config.httpsAgent) {
    delete config.httpsAgent;
  }
}
/**
 * Checks retryCondition if request can be retried. Handles it's returning value or Promise.
 * @param  {IAxiosRetryConfigExtended} currentState
 * @param  {Error} error
 * @return {Promise<boolean>}
 */


function shouldRetry(_x, _x2) {
  return _shouldRetry.apply(this, arguments);
}
/**
 * Adds response interceptors to an axios instance to retry requests failed due to network issues
 *
 * @example
 *
 * import axios from 'axios';
 *
 * axiosRetry(axios, { retries: 3 });
 *
 * axios.get('http://example.com/test') // The first request fails and the second returns 'ok'
 *   .then(result => {
 *     result.data; // 'ok'
 *   });
 *
 * // Exponential back-off retry delay between requests
 * axiosRetry(axios, { retryDelay : axiosRetry.exponentialDelay});
 *
 * // Custom retry delay
 * axiosRetry(axios, { retryDelay : (retryCount) => {
 *   return retryCount * 1000;
 * }});
 *
 * // Also works with custom axios instances
 * const client = axios.create({ baseURL: 'http://example.com' });
 * axiosRetry(client, { retries: 3 });
 *
 * client.get('/test') // The first request fails and the second returns 'ok'
 *   .then(result => {
 *     result.data; // 'ok'
 *   });
 *
 * // Allows request-specific configuration
 * client
 *   .get('/test', {
 *     'axios-retry': {
 *       retries: 0
 *     }
 *   })
 *   .catch(error => { // The first request fails
 *     error !== undefined
 *   });
 *
 * @param {Axios} axios An axios instance (the axios object or one created from axios.create)
 * @param {Object} [defaultOptions]
 * @param {number} [defaultOptions.retries=3] Number of retries
 * @param {boolean} [defaultOptions.shouldResetTimeout=false]
 *        Defines if the timeout should be reset between retries
 * @param {Function} [defaultOptions.retryCondition=isNetworkOrIdempotentRequestError]
 *        A function to determine if the error can be retried
 * @param {Function} [defaultOptions.retryDelay=noDelay]
 *        A function to determine the delay between retry requests
 * @param {Function} [defaultOptions.onRetry=()=>{}]
 *        A function to get notified when a retry occurs
 * @return {{ requestInterceptorId: number, responseInterceptorId: number }}
 *        The ids of the interceptors added to the request and to the response (so they can be ejected at a later time)
 */


function _shouldRetry() {
  _shouldRetry = _asyncToGenerator(function* (currentState, error) {
    var {
      retries,
      retryCondition
    } = currentState;
    var shouldRetryOrPromise = currentState.retryCount < retries && retryCondition(error); // This could be a promise

    if (typeof shouldRetryOrPromise === 'object') {
      try {
        var shouldRetryPromiseResult = yield shouldRetryOrPromise; // keep return true unless shouldRetryPromiseResult return false for compatibility

        return shouldRetryPromiseResult !== false;
      } catch (_err) {
        return false;
      }
    }

    return shouldRetryOrPromise;
  });
  return _shouldRetry.apply(this, arguments);
}

function axiosRetry(axios, defaultOptions) {
  var requestInterceptorId = axios.interceptors.request.use(config => {
    var currentState = getCurrentState(config, defaultOptions);
    currentState.lastRequestTime = Date.now();
    return config;
  });
  var responseInterceptorId = axios.interceptors.response.use(null, /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(function* (error) {
      var {
        config
      } = error; // If we have no information to retry the request

      if (!config) {
        return Promise.reject(error);
      }

      var currentState = getCurrentState(config, defaultOptions);

      if (yield shouldRetry(currentState, error)) {
        currentState.retryCount += 1;
        var {
          retryDelay,
          shouldResetTimeout,
          onRetry
        } = currentState;
        var delay = retryDelay(currentState.retryCount, error); // Axios fails merging this configuration to the default configuration because it has an issue
        // with circular structures: https://github.com/mzabriskie/axios/issues/370

        fixConfig(axios, config);

        if (!shouldResetTimeout && config.timeout && currentState.lastRequestTime) {
          var lastRequestDuration = Date.now() - currentState.lastRequestTime;
          var timeout = config.timeout - lastRequestDuration - delay;

          if (timeout <= 0) {
            return Promise.reject(error);
          }

          config.timeout = timeout;
        }

        config.transformRequest = [data => data];
        yield onRetry(currentState.retryCount, error, config);
        return new Promise(resolve => setTimeout(() => resolve(axios(config)), delay));
      }

      return Promise.reject(error);
    });

    return function (_x3) {
      return _ref.apply(this, arguments);
    };
  }());
  return {
    requestInterceptorId,
    responseInterceptorId
  };
} // Compatibility with CommonJS

axiosRetry.isNetworkError = isNetworkError;
axiosRetry.isSafeRequestError = isSafeRequestError;
axiosRetry.isIdempotentRequestError = isIdempotentRequestError;
axiosRetry.isNetworkOrIdempotentRequestError = isNetworkOrIdempotentRequestError;
axiosRetry.exponentialDelay = exponentialDelay;
axiosRetry.isRetryableError = isRetryableError;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/axios/lib/adapters/adapters.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/adapters/adapters.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./http.js */ "./node_modules/axios/lib/helpers/null.js");
/* harmony import */ var _xhr_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./xhr.js */ "./node_modules/axios/lib/adapters/xhr.js");
/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fetch.js */ "./node_modules/axios/lib/adapters/fetch.js");
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");






const knownAdapters = {
  http: _http_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  xhr: _xhr_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  fetch: {
    get: _fetch_js__WEBPACK_IMPORTED_MODULE_3__.getFetch,
  }
}

_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, 'name', {value});
    } catch (e) {
      // eslint-disable-next-line no-empty
    }
    Object.defineProperty(fn, 'adapterName', {value});
  }
});

const renderReason = (reason) => `- ${reason}`;

const isResolvedHandle = (adapter) => _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(adapter) || adapter === null || adapter === false;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  getAdapter: (adapters, config) => {
    adapters = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(adapters) ? adapters : [adapters];

    const {length} = adapters;
    let nameOrAdapter;
    let adapter;

    const rejectedReasons = {};

    for (let i = 0; i < length; i++) {
      nameOrAdapter = adapters[i];
      let id;

      adapter = nameOrAdapter;

      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];

        if (adapter === undefined) {
          throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__["default"](`Unknown adapter '${id}'`);
        }
      }

      if (adapter && (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(adapter) || (adapter = adapter.get(config)))) {
        break;
      }

      rejectedReasons[id || '#' + i] = adapter;
    }

    if (!adapter) {

      const reasons = Object.entries(rejectedReasons)
        .map(([id, state]) => `adapter ${id} ` +
          (state === false ? 'is not supported by the environment' : 'is not available in the build')
        );

      let s = length ?
        (reasons.length > 1 ? 'since :\n' + reasons.map(renderReason).join('\n') : ' ' + renderReason(reasons[0])) :
        'as no adapter specified';

      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__["default"](
        `There is no suitable adapter to dispatch the request ` + s,
        'ERR_NOT_SUPPORT'
      );
    }

    return adapter;
  },
  adapters: knownAdapters
});


/***/ }),

/***/ "./node_modules/axios/lib/adapters/fetch.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/adapters/fetch.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   getFetch: () => (/* binding */ getFetch)
/* harmony export */ });
/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");
/* harmony import */ var _helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/composeSignals.js */ "./node_modules/axios/lib/helpers/composeSignals.js");
/* harmony import */ var _helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/trackStream.js */ "./node_modules/axios/lib/helpers/trackStream.js");
/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");
/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ "./node_modules/axios/lib/helpers/progressEventReducer.js");
/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ "./node_modules/axios/lib/helpers/resolveConfig.js");
/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/settle.js */ "./node_modules/axios/lib/core/settle.js");










const DEFAULT_CHUNK_SIZE = 64 * 1024;

const {isFunction} = _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"];

const globalFetchAPI = (({Request, Response}) => ({
  Request, Response
}))(_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].global);

const {
  ReadableStream, TextEncoder
} = _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].global;


const test = (fn, ...args) => {
  try {
    return !!fn(...args);
  } catch (e) {
    return false
  }
}

const factory = (env) => {
  env = _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].merge.call({
    skipUndefined: true
  }, globalFetchAPI, env);

  const {fetch: envFetch, Request, Response} = env;
  const isFetchSupported = envFetch ? isFunction(envFetch) : typeof fetch === 'function';
  const isRequestSupported = isFunction(Request);
  const isResponseSupported = isFunction(Response);

  if (!isFetchSupported) {
    return false;
  }

  const isReadableStreamSupported = isFetchSupported && isFunction(ReadableStream);

  const encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?
      ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :
      async (str) => new Uint8Array(await new Request(str).arrayBuffer())
  );

  const supportsRequestStream = isRequestSupported && isReadableStreamSupported && test(() => {
    let duplexAccessed = false;

    const hasContentType = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].origin, {
      body: new ReadableStream(),
      method: 'POST',
      get duplex() {
        duplexAccessed = true;
        return 'half';
      },
    }).headers.has('Content-Type');

    return duplexAccessed && !hasContentType;
  });

  const supportsResponseStream = isResponseSupported && isReadableStreamSupported &&
    test(() => _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isReadableStream(new Response('').body));

  const resolvers = {
    stream: supportsResponseStream && ((res) => res.body)
  };

  isFetchSupported && ((() => {
    ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {
      !resolvers[type] && (resolvers[type] = (res, config) => {
        let method = res && res[type];

        if (method) {
          return method.call(res);
        }

        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"](`Response type '${type}' is not supported`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"].ERR_NOT_SUPPORT, config);
      })
    });
  })());

  const getBodyLength = async (body) => {
    if (body == null) {
      return 0;
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isBlob(body)) {
      return body.size;
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isSpecCompliantForm(body)) {
      const _request = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].origin, {
        method: 'POST',
        body,
      });
      return (await _request.arrayBuffer()).byteLength;
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isArrayBufferView(body) || _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isArrayBuffer(body)) {
      return body.byteLength;
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isURLSearchParams(body)) {
      body = body + '';
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isString(body)) {
      return (await encodeText(body)).byteLength;
    }
  }

  const resolveBodyLength = async (headers, body) => {
    const length = _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].toFiniteNumber(headers.getContentLength());

    return length == null ? getBodyLength(body) : length;
  }

  return async (config) => {
    let {
      url,
      method,
      data,
      signal,
      cancelToken,
      timeout,
      onDownloadProgress,
      onUploadProgress,
      responseType,
      headers,
      withCredentials = 'same-origin',
      fetchOptions
    } = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_7__["default"])(config);

    let _fetch = envFetch || fetch;

    responseType = responseType ? (responseType + '').toLowerCase() : 'text';

    let composedSignal = (0,_helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_3__["default"])([signal, cancelToken && cancelToken.toAbortSignal()], timeout);

    let request = null;

    const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
      composedSignal.unsubscribe();
    });

    let requestContentLength;

    try {
      if (
        onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&
        (requestContentLength = await resolveBodyLength(headers, data)) !== 0
      ) {
        let _request = new Request(url, {
          method: 'POST',
          body: data,
          duplex: "half"
        });

        let contentTypeHeader;

        if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {
          headers.setContentType(contentTypeHeader)
        }

        if (_request.body) {
          const [onProgress, flush] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventDecorator)(
            requestContentLength,
            (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.asyncDecorator)(onUploadProgress))
          );

          data = (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_4__.trackStream)(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
        }
      }

      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isString(withCredentials)) {
        withCredentials = withCredentials ? 'include' : 'omit';
      }

      // Cloudflare Workers throws when credentials are defined
      // see https://github.com/cloudflare/workerd/issues/902
      const isCredentialsSupported = isRequestSupported && "credentials" in Request.prototype;

      const resolvedOptions = {
        ...fetchOptions,
        signal: composedSignal,
        method: method.toUpperCase(),
        headers: headers.normalize().toJSON(),
        body: data,
        duplex: "half",
        credentials: isCredentialsSupported ? withCredentials : undefined
      };

      request = isRequestSupported && new Request(url, resolvedOptions);

      let response = await (isRequestSupported ? _fetch(request, fetchOptions) : _fetch(url, resolvedOptions));

      const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');

      if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {
        const options = {};

        ['status', 'statusText', 'headers'].forEach(prop => {
          options[prop] = response[prop];
        });

        const responseContentLength = _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].toFiniteNumber(response.headers.get('content-length'));

        const [onProgress, flush] = onDownloadProgress && (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventDecorator)(
          responseContentLength,
          (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.asyncDecorator)(onDownloadProgress), true)
        ) || [];

        response = new Response(
          (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_4__.trackStream)(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
            flush && flush();
            unsubscribe && unsubscribe();
          }),
          options
        );
      }

      responseType = responseType || 'text';

      let responseData = await resolvers[_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].findKey(resolvers, responseType) || 'text'](response, config);

      !isStreamResponse && unsubscribe && unsubscribe();

      return await new Promise((resolve, reject) => {
        (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_8__["default"])(resolve, reject, {
          data: responseData,
          headers: _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_5__["default"].from(response.headers),
          status: response.status,
          statusText: response.statusText,
          config,
          request
        })
      })
    } catch (err) {
      unsubscribe && unsubscribe();

      if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {
        throw Object.assign(
          new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"].ERR_NETWORK, config, request),
          {
            cause: err.cause || err
          }
        )
      }

      throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"].from(err, err && err.code, config, request);
    }
  }
}

const seedCache = new Map();

const getFetch = (config) => {
  let env = config ? config.env : {};
  const {fetch, Request, Response} = env;
  const seeds = [
    Request, Response, fetch
  ];

  let len = seeds.length, i = len,
    seed, target, map = seedCache;

  while (i--) {
    seed = seeds[i];
    target = map.get(seed);

    target === undefined && map.set(seed, target = (i ? new Map() : factory(env)))

    map = target;
  }

  return target;
};

const adapter = getFetch();

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (adapter);


/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../core/settle.js */ "./node_modules/axios/lib/core/settle.js");
/* harmony import */ var _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../defaults/transitional.js */ "./node_modules/axios/lib/defaults/transitional.js");
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");
/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");
/* harmony import */ var _helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/parseProtocol.js */ "./node_modules/axios/lib/helpers/parseProtocol.js");
/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");
/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");
/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ "./node_modules/axios/lib/helpers/progressEventReducer.js");
/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ "./node_modules/axios/lib/helpers/resolveConfig.js");











const isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isXHRAdapterSupported && function (config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    const _config = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_9__["default"])(config);
    let requestData = _config.data;
    const requestHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_7__["default"].from(_config.headers).normalize();
    let {responseType, onUploadProgress, onDownloadProgress} = _config;
    let onCanceled;
    let uploadThrottled, downloadThrottled;
    let flushUpload, flushDownload;

    function done() {
      flushUpload && flushUpload(); // flush events
      flushDownload && flushDownload(); // flush events

      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);

      _config.signal && _config.signal.removeEventListener('abort', onCanceled);
    }

    let request = new XMLHttpRequest();

    request.open(_config.method.toUpperCase(), _config.url, true);

    // Set the request timeout in MS
    request.timeout = _config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      const responseHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_7__["default"].from(
        'getAllResponseHeaders' in request && request.getAllResponseHeaders()
      );
      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?
        request.responseText : request.response;
      const response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config,
        request
      };

      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"]('Request aborted', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ECONNABORTED, config, request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
  request.onerror = function handleError(event) {
       // Browsers deliver a ProgressEvent in XHR onerror
       // (message may be empty; when present, surface it)
       // See https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/error_event
       const msg = event && event.message ? event.message : 'Network Error';
       const err = new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"](msg, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ERR_NETWORK, config, request);
       // attach the underlying event for consumers who want details
       err.event = event || null;
       reject(err);
       request = null;
    };
    
    // Handle timeout
    request.ontimeout = function handleTimeout() {
      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';
      const transitional = _config.transitional || _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_2__["default"];
      if (_config.timeoutErrorMessage) {
        timeoutErrorMessage = _config.timeoutErrorMessage;
      }
      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"](
        timeoutErrorMessage,
        transitional.clarifyTimeoutError ? _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ETIMEDOUT : _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ECONNABORTED,
        config,
        request));

      // Clean up request
      request = null;
    };

    // Remove Content-Type if data is undefined
    requestData === undefined && requestHeaders.setContentType(null);

    // Add headers to the request
    if ('setRequestHeader' in request) {
      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request.setRequestHeader(key, val);
      });
    }

    // Add withCredentials to request if needed
    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(_config.withCredentials)) {
      request.withCredentials = !!_config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = _config.responseType;
    }

    // Handle progress if needed
    if (onDownloadProgress) {
      ([downloadThrottled, flushDownload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_8__.progressEventReducer)(onDownloadProgress, true));
      request.addEventListener('progress', downloadThrottled);
    }

    // Not all browsers support upload events
    if (onUploadProgress && request.upload) {
      ([uploadThrottled, flushUpload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_8__.progressEventReducer)(onUploadProgress));

      request.upload.addEventListener('progress', uploadThrottled);

      request.upload.addEventListener('loadend', flushUpload);
    }

    if (_config.cancelToken || _config.signal) {
      // Handle cancellation
      // eslint-disable-next-line func-names
      onCanceled = cancel => {
        if (!request) {
          return;
        }
        reject(!cancel || cancel.type ? new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_4__["default"](null, config, request) : cancel);
        request.abort();
        request = null;
      };

      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
      if (_config.signal) {
        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);
      }
    }

    const protocol = (0,_helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_5__["default"])(_config.url);

    if (protocol && _platform_index_js__WEBPACK_IMPORTED_MODULE_6__["default"].protocols.indexOf(protocol) === -1) {
      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"]('Unsupported protocol ' + protocol + ':', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ERR_BAD_REQUEST, config));
      return;
    }


    // Send the request
    request.send(requestData || null);
  });
});


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/bind.js */ "./node_modules/axios/lib/helpers/bind.js");
/* harmony import */ var _core_Axios_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/Axios.js */ "./node_modules/axios/lib/core/Axios.js");
/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/mergeConfig.js */ "./node_modules/axios/lib/core/mergeConfig.js");
/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ "./node_modules/axios/lib/defaults/index.js");
/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers/formDataToJSON.js */ "./node_modules/axios/lib/helpers/formDataToJSON.js");
/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");
/* harmony import */ var _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cancel/CancelToken.js */ "./node_modules/axios/lib/cancel/CancelToken.js");
/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./cancel/isCancel.js */ "./node_modules/axios/lib/cancel/isCancel.js");
/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./env/data.js */ "./node_modules/axios/lib/env/data.js");
/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./helpers/toFormData.js */ "./node_modules/axios/lib/helpers/toFormData.js");
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");
/* harmony import */ var _helpers_spread_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/spread.js */ "./node_modules/axios/lib/helpers/spread.js");
/* harmony import */ var _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./helpers/isAxiosError.js */ "./node_modules/axios/lib/helpers/isAxiosError.js");
/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");
/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./adapters/adapters.js */ "./node_modules/axios/lib/adapters/adapters.js");
/* harmony import */ var _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/HttpStatusCode.js */ "./node_modules/axios/lib/helpers/HttpStatusCode.js");




















/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 *
 * @returns {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  const context = new _core_Axios_js__WEBPACK_IMPORTED_MODULE_2__["default"](defaultConfig);
  const instance = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_core_Axios_js__WEBPACK_IMPORTED_MODULE_2__["default"].prototype.request, context);

  // Copy axios.prototype to instance
  _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].extend(instance, _core_Axios_js__WEBPACK_IMPORTED_MODULE_2__["default"].prototype, context, {allOwnKeys: true});

  // Copy context to instance
  _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].extend(instance, context, null, {allOwnKeys: true});

  // Factory for creating new instances
  instance.create = function create(instanceConfig) {
    return createInstance((0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__["default"])(defaultConfig, instanceConfig));
  };

  return instance;
}

// Create the default instance to be exported
const axios = createInstance(_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__["default"]);

// Expose Axios class to allow class inheritance
axios.Axios = _core_Axios_js__WEBPACK_IMPORTED_MODULE_2__["default"];

// Expose Cancel & CancelToken
axios.CanceledError = _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_6__["default"];
axios.CancelToken = _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_7__["default"];
axios.isCancel = _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_8__["default"];
axios.VERSION = _env_data_js__WEBPACK_IMPORTED_MODULE_9__.VERSION;
axios.toFormData = _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_10__["default"];

// Expose AxiosError class
axios.AxiosError = _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_11__["default"];

// alias for CanceledError for backward compatibility
axios.Cancel = axios.CanceledError;

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};

axios.spread = _helpers_spread_js__WEBPACK_IMPORTED_MODULE_12__["default"];

// Expose isAxiosError
axios.isAxiosError = _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_13__["default"];

// Expose mergeConfig
axios.mergeConfig = _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__["default"];

axios.AxiosHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_14__["default"];

axios.formToJSON = thing => (0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_5__["default"])(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isHTMLForm(thing) ? new FormData(thing) : thing);

axios.getAdapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__["default"].getAdapter;

axios.HttpStatusCode = _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__["default"];

axios.default = axios;

// this module should only have a default export
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (axios);


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");




/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @param {Function} executor The executor function.
 *
 * @returns {CancelToken}
 */
class CancelToken {
  constructor(executor) {
    if (typeof executor !== 'function') {
      throw new TypeError('executor must be a function.');
    }

    let resolvePromise;

    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });

    const token = this;

    // eslint-disable-next-line func-names
    this.promise.then(cancel => {
      if (!token._listeners) return;

      let i = token._listeners.length;

      while (i-- > 0) {
        token._listeners[i](cancel);
      }
      token._listeners = null;
    });

    // eslint-disable-next-line func-names
    this.promise.then = onfulfilled => {
      let _resolve;
      // eslint-disable-next-line func-names
      const promise = new Promise(resolve => {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);

      promise.cancel = function reject() {
        token.unsubscribe(_resolve);
      };

      return promise;
    };

    executor(function cancel(message, config, request) {
      if (token.reason) {
        // Cancellation has already been requested
        return;
      }

      token.reason = new _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__["default"](message, config, request);
      resolvePromise(token.reason);
    });
  }

  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }

  /**
   * Subscribe to the cancel signal
   */

  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }

    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }

  /**
   * Unsubscribe from the cancel signal
   */

  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index = this._listeners.indexOf(listener);
    if (index !== -1) {
      this._listeners.splice(index, 1);
    }
  }

  toAbortSignal() {
    const controller = new AbortController();

    const abort = (err) => {
      controller.abort(err);
    };

    this.subscribe(abort);

    controller.signal.unsubscribe = () => this.unsubscribe(abort);

    return controller.signal;
  }

  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token = new CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token,
      cancel
    };
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CancelToken);


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CanceledError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CanceledError.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");





/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @param {string=} message The message.
 * @param {Object=} config The config.
 * @param {Object=} request The request.
 *
 * @returns {CanceledError} The created error.
 */
function CanceledError(message, config, request) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, message == null ? 'canceled' : message, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].ERR_CANCELED, config, request);
  this.name = 'CanceledError';
}

_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].inherits(CanceledError, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"], {
  __CANCEL__: true
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanceledError);


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isCancel)
/* harmony export */ });


function isCancel(value) {
  return !!(value && value.__CANCEL__);
}


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/buildURL.js */ "./node_modules/axios/lib/helpers/buildURL.js");
/* harmony import */ var _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InterceptorManager.js */ "./node_modules/axios/lib/core/InterceptorManager.js");
/* harmony import */ var _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dispatchRequest.js */ "./node_modules/axios/lib/core/dispatchRequest.js");
/* harmony import */ var _mergeConfig_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mergeConfig.js */ "./node_modules/axios/lib/core/mergeConfig.js");
/* harmony import */ var _buildFullPath_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./buildFullPath.js */ "./node_modules/axios/lib/core/buildFullPath.js");
/* harmony import */ var _helpers_validator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/validator.js */ "./node_modules/axios/lib/helpers/validator.js");
/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");











const validators = _helpers_validator_js__WEBPACK_IMPORTED_MODULE_6__["default"].validators;

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 *
 * @return {Axios} A new instance of Axios
 */
class Axios {
  constructor(instanceConfig) {
    this.defaults = instanceConfig || {};
    this.interceptors = {
      request: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_2__["default"](),
      response: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_2__["default"]()
    };
  }

  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(configOrUrl, config) {
    try {
      return await this._request(configOrUrl, config);
    } catch (err) {
      if (err instanceof Error) {
        let dummy = {};

        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());

        // slice off the Error: ... line
        const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, '') : '';
        try {
          if (!err.stack) {
            err.stack = stack;
            // match without the 2 top stack lines
          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ''))) {
            err.stack += '\n' + stack
          }
        } catch (e) {
          // ignore the case where "stack" is an un-writable property
        }
      }

      throw err;
    }
  }

  _request(configOrUrl, config) {
    /*eslint no-param-reassign:0*/
    // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof configOrUrl === 'string') {
      config = config || {};
      config.url = configOrUrl;
    } else {
      config = configOrUrl || {};
    }

    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_4__["default"])(this.defaults, config);

    const {transitional, paramsSerializer, headers} = config;

    if (transitional !== undefined) {
      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_6__["default"].assertOptions(transitional, {
        silentJSONParsing: validators.transitional(validators.boolean),
        forcedJSONParsing: validators.transitional(validators.boolean),
        clarifyTimeoutError: validators.transitional(validators.boolean)
      }, false);
    }

    if (paramsSerializer != null) {
      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(paramsSerializer)) {
        config.paramsSerializer = {
          serialize: paramsSerializer
        }
      } else {
        _helpers_validator_js__WEBPACK_IMPORTED_MODULE_6__["default"].assertOptions(paramsSerializer, {
          encode: validators.function,
          serialize: validators.function
        }, true);
      }
    }

    // Set config.allowAbsoluteUrls
    if (config.allowAbsoluteUrls !== undefined) {
      // do nothing
    } else if (this.defaults.allowAbsoluteUrls !== undefined) {
      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;
    } else {
      config.allowAbsoluteUrls = true;
    }

    _helpers_validator_js__WEBPACK_IMPORTED_MODULE_6__["default"].assertOptions(config, {
      baseUrl: validators.spelling('baseURL'),
      withXsrfToken: validators.spelling('withXSRFToken')
    }, true);

    // Set config.method
    config.method = (config.method || this.defaults.method || 'get').toLowerCase();

    // Flatten headers
    let contextHeaders = headers && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].merge(
      headers.common,
      headers[config.method]
    );

    headers && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(
      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
      (method) => {
        delete headers[method];
      }
    );

    config.headers = _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_7__["default"].concat(contextHeaders, headers);

    // filter out skipped interceptors
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
        return;
      }

      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });

    const responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });

    let promise;
    let i = 0;
    let len;

    if (!synchronousRequestInterceptors) {
      const chain = [_dispatchRequest_js__WEBPACK_IMPORTED_MODULE_3__["default"].bind(this), undefined];
      chain.unshift(...requestInterceptorChain);
      chain.push(...responseInterceptorChain);
      len = chain.length;

      promise = Promise.resolve(config);

      while (i < len) {
        promise = promise.then(chain[i++], chain[i++]);
      }

      return promise;
    }

    len = requestInterceptorChain.length;

    let newConfig = config;

    while (i < len) {
      const onFulfilled = requestInterceptorChain[i++];
      const onRejected = requestInterceptorChain[i++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }

    try {
      promise = _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_3__["default"].call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }

    i = 0;
    len = responseInterceptorChain.length;

    while (i < len) {
      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
    }

    return promise;
  }

  getUri(config) {
    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_4__["default"])(this.defaults, config);
    const fullPath = (0,_buildFullPath_js__WEBPACK_IMPORTED_MODULE_5__["default"])(config.baseURL, config.url, config.allowAbsoluteUrls);
    return (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fullPath, config.params, config.paramsSerializer);
  }
}

// Provide aliases for supported request methods
_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_4__["default"])(config || {}, {
      method,
      url,
      data: (config || {}).data
    }));
  };
});

_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/

  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_4__["default"])(config || {}, {
        method,
        headers: isForm ? {
          'Content-Type': 'multipart/form-data'
        } : {},
        url,
        data
      }));
    };
  }

  Axios.prototype[method] = generateHTTPMethod();

  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Axios);


/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosError.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosError.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");




/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [config] The config.
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 *
 * @returns {Error} The created error.
 */
function AxiosError(message, code, config, request, response) {
  Error.call(this);

  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = (new Error()).stack;
  }

  this.message = message;
  this.name = 'AxiosError';
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  if (response) {
    this.response = response;
    this.status = response.status ? response.status : null;
  }
}

_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].inherits(AxiosError, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});

const prototype = AxiosError.prototype;
const descriptors = {};

[
  'ERR_BAD_OPTION_VALUE',
  'ERR_BAD_OPTION',
  'ECONNABORTED',
  'ETIMEDOUT',
  'ERR_NETWORK',
  'ERR_FR_TOO_MANY_REDIRECTS',
  'ERR_DEPRECATED',
  'ERR_BAD_RESPONSE',
  'ERR_BAD_REQUEST',
  'ERR_CANCELED',
  'ERR_NOT_SUPPORT',
  'ERR_INVALID_URL'
// eslint-disable-next-line func-names
].forEach(code => {
  descriptors[code] = {value: code};
});

Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, 'isAxiosError', {value: true});

// eslint-disable-next-line func-names
AxiosError.from = (error, code, config, request, response, customProps) => {
  const axiosError = Object.create(prototype);

  _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toFlatObject(error, axiosError, function filter(obj) {
    return obj !== Error.prototype;
  }, prop => {
    return prop !== 'isAxiosError';
  });

  const msg = error && error.message ? error.message : 'Error';

  // Prefer explicit code; otherwise copy the low-level error's code (e.g. ECONNREFUSED)
  const errCode = code == null && error ? error.code : code;
  AxiosError.call(axiosError, msg, errCode, config, request, response);

  // Chain the original error on the standard field; non-enumerable to avoid JSON noise
  if (error && axiosError.cause == null) {
    Object.defineProperty(axiosError, 'cause', { value: error, configurable: true });
  }

  axiosError.name = (error && error.name) || 'Error';

  customProps && Object.assign(axiosError, customProps);

  return axiosError;
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosError);


/***/ }),

/***/ "./node_modules/axios/lib/core/AxiosHeaders.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/AxiosHeaders.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/parseHeaders.js */ "./node_modules/axios/lib/helpers/parseHeaders.js");





const $internals = Symbol('internals');

function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}

function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }

  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(value) ? value.map(normalizeValue) : String(value);
}

function parseTokens(str) {
  const tokens = Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match;

  while ((match = tokensRE.exec(str))) {
    tokens[match[1]] = match[2];
  }

  return tokens;
}

const isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());

function matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {
  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(filter)) {
    return filter.call(this, value, header);
  }

  if (isHeaderNameFilter) {
    value = header;
  }

  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(value)) return;

  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(filter)) {
    return value.indexOf(filter) !== -1;
  }

  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isRegExp(filter)) {
    return filter.test(value);
  }
}

function formatHeader(header) {
  return header.trim()
    .toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str) => {
      return char.toUpperCase() + str;
    });
}

function buildAccessors(obj, header) {
  const accessorName = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toCamelCase(' ' + header);

  ['get', 'set', 'has'].forEach(methodName => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}

class AxiosHeaders {
  constructor(headers) {
    headers && this.set(headers);
  }

  set(header, valueOrRewrite, rewrite) {
    const self = this;

    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);

      if (!lHeader) {
        throw new Error('header name must be a non-empty string');
      }

      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(self, lHeader);

      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {
        self[key || _header] = normalizeValue(_value);
      }
    }

    const setHeaders = (headers, _rewrite) =>
      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));

    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isPlainObject(header) || header instanceof this.constructor) {
      setHeaders(header, valueOrRewrite)
    } else if(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
      setHeaders((0,_helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"])(header), valueOrRewrite);
    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(header) && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isIterable(header)) {
      let obj = {}, dest, key;
      for (const entry of header) {
        if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(entry)) {
          throw TypeError('Object iterator must return a key-value pair');
        }

        obj[key = entry[0]] = (dest = obj[key]) ?
          (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];
      }

      setHeaders(obj, valueOrRewrite)
    } else {
      header != null && setHeader(valueOrRewrite, header, rewrite);
    }

    return this;
  }

  get(header, parser) {
    header = normalizeHeader(header);

    if (header) {
      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(this, header);

      if (key) {
        const value = this[key];

        if (!parser) {
          return value;
        }

        if (parser === true) {
          return parseTokens(value);
        }

        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(parser)) {
          return parser.call(this, value, key);
        }

        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isRegExp(parser)) {
          return parser.exec(value);
        }

        throw new TypeError('parser must be boolean|regexp|function');
      }
    }
  }

  has(header, matcher) {
    header = normalizeHeader(header);

    if (header) {
      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(this, header);

      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }

    return false;
  }

  delete(header, matcher) {
    const self = this;
    let deleted = false;

    function deleteHeader(_header) {
      _header = normalizeHeader(_header);

      if (_header) {
        const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(self, _header);

        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {
          delete self[key];

          deleted = true;
        }
      }
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(header)) {
      header.forEach(deleteHeader);
    } else {
      deleteHeader(header);
    }

    return deleted;
  }

  clear(matcher) {
    const keys = Object.keys(this);
    let i = keys.length;
    let deleted = false;

    while (i--) {
      const key = keys[i];
      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }

    return deleted;
  }

  normalize(format) {
    const self = this;
    const headers = {};

    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(this, (value, header) => {
      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(headers, header);

      if (key) {
        self[key] = normalizeValue(value);
        delete self[header];
        return;
      }

      const normalized = format ? formatHeader(header) : String(header).trim();

      if (normalized !== header) {
        delete self[header];
      }

      self[normalized] = normalizeValue(value);

      headers[normalized] = true;
    });

    return this;
  }

  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }

  toJSON(asStrings) {
    const obj = Object.create(null);

    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(this, (value, header) => {
      value != null && value !== false && (obj[header] = asStrings && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(value) ? value.join(', ') : value);
    });

    return obj;
  }

  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }

  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\n');
  }

  getSetCookie() {
    return this.get("set-cookie") || [];
  }

  get [Symbol.toStringTag]() {
    return 'AxiosHeaders';
  }

  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }

  static concat(first, ...targets) {
    const computed = new this(first);

    targets.forEach((target) => computed.set(target));

    return computed;
  }

  static accessor(header) {
    const internals = this[$internals] = (this[$internals] = {
      accessors: {}
    });

    const accessors = internals.accessors;
    const prototype = this.prototype;

    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);

      if (!accessors[lHeader]) {
        buildAccessors(prototype, _header);
        accessors[lHeader] = true;
      }
    }

    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);

    return this;
  }
}

AxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);

// reserved names hotfix
_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  }
});

_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].freezeMethods(AxiosHeaders);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosHeaders);


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");




class InterceptorManager {
  constructor() {
    this.handlers = [];
  }

  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
  }

  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  }

  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }

  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h);
      }
    });
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InterceptorManager);


/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ buildFullPath)
/* harmony export */ });
/* harmony import */ var _helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/isAbsoluteURL.js */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
/* harmony import */ var _helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/combineURLs.js */ "./node_modules/axios/lib/helpers/combineURLs.js");





/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 *
 * @returns {string} The combined full path
 */
function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {
  let isRelativeUrl = !(0,_helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__["default"])(requestedURL);
  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {
    return (0,_helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__["default"])(baseURL, requestedURL);
  }
  return requestedURL;
}


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ dispatchRequest)
/* harmony export */ });
/* harmony import */ var _transformData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformData.js */ "./node_modules/axios/lib/core/transformData.js");
/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cancel/isCancel.js */ "./node_modules/axios/lib/cancel/isCancel.js");
/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../defaults/index.js */ "./node_modules/axios/lib/defaults/index.js");
/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");
/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");
/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../adapters/adapters.js */ "./node_modules/axios/lib/adapters/adapters.js");









/**
 * Throws a `CanceledError` if cancellation has been requested.
 *
 * @param {Object} config The config that is to be used for the request
 *
 * @returns {void}
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }

  if (config.signal && config.signal.aborted) {
    throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_3__["default"](null, config);
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 *
 * @returns {Promise} The Promise to be fulfilled
 */
function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__["default"].from(config.headers);

  // Transform request data
  config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_0__["default"].call(
    config,
    config.transformRequest
  );

  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {
    config.headers.setContentType('application/x-www-form-urlencoded', false);
  }

  const adapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_5__["default"].getAdapter(config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].adapter, config);

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_0__["default"].call(
      config,
      config.transformResponse,
      response
    );

    response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__["default"].from(response.headers);

    return response;
  }, function onAdapterRejection(reason) {
    if (!(0,_cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_1__["default"])(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_0__["default"].call(
          config,
          config.transformResponse,
          reason.response
        );
        reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__["default"].from(reason.response.headers);
      }
    }

    return Promise.reject(reason);
  });
}


/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mergeConfig)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");





const headersToObject = (thing) => thing instanceof _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"] ? { ...thing } : thing;

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 *
 * @returns {Object} New object resulting from merging config2 to config1
 */
function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  const config = {};

  function getMergedValue(target, source, prop, caseless) {
    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isPlainObject(target) && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isPlainObject(source)) {
      return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].merge.call({caseless}, target, source);
    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isPlainObject(source)) {
      return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].merge({}, source);
    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(source)) {
      return source.slice();
    }
    return source;
  }

  // eslint-disable-next-line consistent-return
  function mergeDeepProperties(a, b, prop , caseless) {
    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(b)) {
      return getMergedValue(a, b, prop , caseless);
    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(a)) {
      return getMergedValue(undefined, a, prop , caseless);
    }
  }

  // eslint-disable-next-line consistent-return
  function valueFromConfig2(a, b) {
    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(b)) {
      return getMergedValue(undefined, b);
    }
  }

  // eslint-disable-next-line consistent-return
  function defaultToConfig2(a, b) {
    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(b)) {
      return getMergedValue(undefined, b);
    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(a)) {
      return getMergedValue(undefined, a);
    }
  }

  // eslint-disable-next-line consistent-return
  function mergeDirectKeys(a, b, prop) {
    if (prop in config2) {
      return getMergedValue(a, b);
    } else if (prop in config1) {
      return getMergedValue(undefined, a);
    }
  }

  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)
  };

  _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {
    const merge = mergeMap[prop] || mergeDeepProperties;
    const configValue = merge(config1[prop], config2[prop], prop);
    (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);
  });

  return config;
}


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ settle)
/* harmony export */ });
/* harmony import */ var _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");




/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 *
 * @returns {object} The response.
 */
function settle(resolve, reject, response) {
  const validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(new _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"](
      'Request failed with status code ' + response.status,
      [_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].ERR_BAD_REQUEST, _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ transformData)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../defaults/index.js */ "./node_modules/axios/lib/defaults/index.js");
/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");






/**
 * Transform the data for a request or a response
 *
 * @param {Array|Function} fns A single function or Array of functions
 * @param {?Object} response The response object
 *
 * @returns {*} The resulting transformed data
 */
function transformData(fns, response) {
  const config = this || _defaults_index_js__WEBPACK_IMPORTED_MODULE_1__["default"];
  const context = response || config;
  const headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_2__["default"].from(context.headers);
  let data = context.data;

  _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(fns, function transform(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);
  });

  headers.normalize();

  return data;
}


/***/ }),

/***/ "./node_modules/axios/lib/defaults/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/defaults/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");
/* harmony import */ var _transitional_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transitional.js */ "./node_modules/axios/lib/defaults/transitional.js");
/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toFormData.js */ "./node_modules/axios/lib/helpers/toFormData.js");
/* harmony import */ var _helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/toURLEncodedForm.js */ "./node_modules/axios/lib/helpers/toURLEncodedForm.js");
/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");
/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/formDataToJSON.js */ "./node_modules/axios/lib/helpers/formDataToJSON.js");










/**
 * It takes a string, tries to parse it, and if it fails, it returns the stringified version
 * of the input
 *
 * @param {any} rawValue - The value to be stringified.
 * @param {Function} parser - A function that parses a string into a JavaScript object.
 * @param {Function} encoder - A function that takes a value and returns a string.
 *
 * @returns {string} A stringified version of the rawValue.
 */
function stringifySafely(rawValue, parser, encoder) {
  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

const defaults = {

  transitional: _transitional_js__WEBPACK_IMPORTED_MODULE_2__["default"],

  adapter: ['xhr', 'http', 'fetch'],

  transformRequest: [function transformRequest(data, headers) {
    const contentType = headers.getContentType() || '';
    const hasJSONContentType = contentType.indexOf('application/json') > -1;
    const isObjectPayload = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(data);

    if (isObjectPayload && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isHTMLForm(data)) {
      data = new FormData(data);
    }

    const isFormData = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFormData(data);

    if (isFormData) {
      return hasJSONContentType ? JSON.stringify((0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_6__["default"])(data)) : data;
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArrayBuffer(data) ||
      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isBuffer(data) ||
      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isStream(data) ||
      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFile(data) ||
      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isBlob(data) ||
      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isReadableStream(data)
    ) {
      return data;
    }
    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArrayBufferView(data)) {
      return data.buffer;
    }
    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isURLSearchParams(data)) {
      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);
      return data.toString();
    }

    let isFileList;

    if (isObjectPayload) {
      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {
        return (0,_helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_4__["default"])(data, this.formSerializer).toString();
      }

      if ((isFileList = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {
        const _FormData = this.env && this.env.FormData;

        return (0,_helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
          isFileList ? {'files[]': data} : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }

    if (isObjectPayload || hasJSONContentType ) {
      headers.setContentType('application/json', false);
      return stringifySafely(data);
    }

    return data;
  }],

  transformResponse: [function transformResponse(data) {
    const transitional = this.transitional || defaults.transitional;
    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    const JSONRequested = this.responseType === 'json';

    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isResponse(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isReadableStream(data)) {
      return data;
    }

    if (data && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {
      const silentJSONParsing = transitional && transitional.silentJSONParsing;
      const strictJSONParsing = !silentJSONParsing && JSONRequested;

      try {
        return JSON.parse(data, this.parseReviver);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"].from(e, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"].ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  env: {
    FormData: _platform_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].classes.FormData,
    Blob: _platform_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].classes.Blob
  },

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },

  headers: {
    common: {
      'Accept': 'application/json, text/plain, */*',
      'Content-Type': undefined
    }
  }
};

_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {
  defaults.headers[method] = {};
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defaults);


/***/ }),

/***/ "./node_modules/axios/lib/defaults/transitional.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/defaults/transitional.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
});


/***/ }),

/***/ "./node_modules/axios/lib/env/data.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/env/data.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VERSION: () => (/* binding */ VERSION)
/* harmony export */ });
const VERSION = "1.12.2";

/***/ }),

/***/ "./node_modules/axios/lib/helpers/AxiosURLSearchParams.js":
/*!****************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/AxiosURLSearchParams.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ "./node_modules/axios/lib/helpers/toFormData.js");




/**
 * It encodes a string by replacing all characters that are not in the unreserved set with
 * their percent-encoded equivalents
 *
 * @param {string} str - The string to encode.
 *
 * @returns {string} The encoded string.
 */
function encode(str) {
  const charMap = {
    '!': '%21',
    "'": '%27',
    '(': '%28',
    ')': '%29',
    '~': '%7E',
    '%20': '+',
    '%00': '\x00'
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
    return charMap[match];
  });
}

/**
 * It takes a params object and converts it to a FormData object
 *
 * @param {Object<string, any>} params - The parameters to be converted to a FormData object.
 * @param {Object<string, any>} options - The options object passed to the Axios constructor.
 *
 * @returns {void}
 */
function AxiosURLSearchParams(params, options) {
  this._pairs = [];

  params && (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__["default"])(params, this, options);
}

const prototype = AxiosURLSearchParams.prototype;

prototype.append = function append(name, value) {
  this._pairs.push([name, value]);
};

prototype.toString = function toString(encoder) {
  const _encode = encoder ? function(value) {
    return encoder.call(this, value, encode);
  } : encode;

  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + '=' + _encode(pair[1]);
  }, '').join('&');
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosURLSearchParams);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/HttpStatusCode.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/HttpStatusCode.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511,
};

Object.entries(HttpStatusCode).forEach(([key, value]) => {
  HttpStatusCode[value] = key;
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HttpStatusCode);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ bind)
/* harmony export */ });


function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ buildURL)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/AxiosURLSearchParams.js */ "./node_modules/axios/lib/helpers/AxiosURLSearchParams.js");





/**
 * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their
 * URI encoded counterparts
 *
 * @param {string} val The value to be encoded.
 *
 * @returns {string} The encoded value.
 */
function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @param {?(object|Function)} options
 *
 * @returns {string} The formatted url
 */
function buildURL(url, params, options) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }
  
  const _encode = options && options.encode || encode;

  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(options)) {
    options = {
      serialize: options
    };
  } 

  const serializeFn = options && options.serialize;

  let serializedParams;

  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isURLSearchParams(params) ?
      params.toString() :
      new _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__["default"](params, options).toString(_encode);
  }

  if (serializedParams) {
    const hashmarkIndex = url.indexOf("#");

    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ combineURLs)
/* harmony export */ });


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 *
 * @returns {string} The combined URL
 */
function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/?\/$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/composeSignals.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/composeSignals.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");




const composeSignals = (signals, timeout) => {
  const {length} = (signals = signals ? signals.filter(Boolean) : []);

  if (timeout || length) {
    let controller = new AbortController();

    let aborted;

    const onabort = function (reason) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        const err = reason instanceof Error ? reason : this.reason;
        controller.abort(err instanceof _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"] ? err : new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__["default"](err instanceof Error ? err.message : err));
      }
    }

    let timer = timeout && setTimeout(() => {
      timer = null;
      onabort(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"](`timeout ${timeout} of ms exceeded`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"].ETIMEDOUT))
    }, timeout)

    const unsubscribe = () => {
      if (signals) {
        timer && clearTimeout(timer);
        timer = null;
        signals.forEach(signal => {
          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);
        });
        signals = null;
      }
    }

    signals.forEach((signal) => signal.addEventListener('abort', onabort));

    const {signal} = controller;

    signal.unsubscribe = () => _utils_js__WEBPACK_IMPORTED_MODULE_2__["default"].asap(unsubscribe);

    return signal;
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (composeSignals);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_platform_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].hasStandardBrowserEnv ?

  // Standard browser envs support document.cookie
  {
    write(name, value, expires, path, domain, secure) {
      const cookie = [name + '=' + encodeURIComponent(value)];

      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());

      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(path) && cookie.push('path=' + path);

      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(domain) && cookie.push('domain=' + domain);

      secure === true && cookie.push('secure');

      document.cookie = cookie.join('; ');
    },

    read(name) {
      const match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
      return (match ? decodeURIComponent(match[3]) : null);
    },

    remove(name) {
      this.write(name, '', Date.now() - 86400000);
    }
  }

  :

  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {},
    read() {
      return null;
    },
    remove() {}
  });



/***/ }),

/***/ "./node_modules/axios/lib/helpers/formDataToJSON.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/formDataToJSON.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");




/**
 * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']
 *
 * @param {string} name - The name of the property to get.
 *
 * @returns An array of strings.
 */
function parsePropPath(name) {
  // foo[x][y][z]
  // foo.x.y.z
  // foo-x-y-z
  // foo x y z
  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].matchAll(/\w+|\[(\w*)]/g, name).map(match => {
    return match[0] === '[]' ? '' : match[1] || match[0];
  });
}

/**
 * Convert an array to an object.
 *
 * @param {Array<any>} arr - The array to convert to an object.
 *
 * @returns An object with the same keys and values as the array.
 */
function arrayToObject(arr) {
  const obj = {};
  const keys = Object.keys(arr);
  let i;
  const len = keys.length;
  let key;
  for (i = 0; i < len; i++) {
    key = keys[i];
    obj[key] = arr[key];
  }
  return obj;
}

/**
 * It takes a FormData object and returns a JavaScript object
 *
 * @param {string} formData The FormData object to convert to JSON.
 *
 * @returns {Object<string, any> | null} The converted object.
 */
function formDataToJSON(formData) {
  function buildPath(path, value, target, index) {
    let name = path[index++];

    if (name === '__proto__') return true;

    const isNumericKey = Number.isFinite(+name);
    const isLast = index >= path.length;
    name = !name && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(target) ? target.length : name;

    if (isLast) {
      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].hasOwnProp(target, name)) {
        target[name] = [target[name], value];
      } else {
        target[name] = value;
      }

      return !isNumericKey;
    }

    if (!target[name] || !_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(target[name])) {
      target[name] = [];
    }

    const result = buildPath(path, value, target[name], index);

    if (result && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(target[name])) {
      target[name] = arrayToObject(target[name]);
    }

    return !isNumericKey;
  }

  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFormData(formData) && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(formData.entries)) {
    const obj = {};

    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    });

    return obj;
  }

  return null;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formDataToJSON);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isAbsoluteURL)
/* harmony export */ });


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 *
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ isAxiosError)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");




/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 *
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
function isAxiosError(payload) {
  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(payload) && (payload.isAxiosError === true);
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {
  url = new URL(url, _platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].origin);

  return (
    origin.protocol === url.protocol &&
    origin.host === url.host &&
    (isMSIE || origin.port === url.port)
  );
})(
  new URL(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].origin),
  _platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].navigator && /(msie|trident)/i.test(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].navigator.userAgent)
) : () => true);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/null.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/null.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// eslint-disable-next-line strict
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (null);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");




// RawAxiosHeaders whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
const ignoreDuplicateOf = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toObjectSet([
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
]);

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} rawHeaders Headers needing to be parsed
 *
 * @returns {Object} Headers parsed into an object
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rawHeaders => {
  const parsed = {};
  let key;
  let val;
  let i;

  rawHeaders && rawHeaders.split('\n').forEach(function parser(line) {
    i = line.indexOf(':');
    key = line.substring(0, i).trim().toLowerCase();
    val = line.substring(i + 1).trim();

    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {
      return;
    }

    if (key === 'set-cookie') {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
    }
  });

  return parsed;
});


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseProtocol.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseProtocol.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ parseProtocol)
/* harmony export */ });


function parseProtocol(url) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || '';
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/progressEventReducer.js":
/*!****************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/progressEventReducer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   asyncDecorator: () => (/* binding */ asyncDecorator),
/* harmony export */   progressEventDecorator: () => (/* binding */ progressEventDecorator),
/* harmony export */   progressEventReducer: () => (/* binding */ progressEventReducer)
/* harmony export */ });
/* harmony import */ var _speedometer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./speedometer.js */ "./node_modules/axios/lib/helpers/speedometer.js");
/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttle.js */ "./node_modules/axios/lib/helpers/throttle.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");




const progressEventReducer = (listener, isDownloadStream, freq = 3) => {
  let bytesNotified = 0;
  const _speedometer = (0,_speedometer_js__WEBPACK_IMPORTED_MODULE_0__["default"])(50, 250);

  return (0,_throttle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(e => {
    const loaded = e.loaded;
    const total = e.lengthComputable ? e.total : undefined;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange = loaded <= total;

    bytesNotified = loaded;

    const data = {
      loaded,
      total,
      progress: total ? (loaded / total) : undefined,
      bytes: progressBytes,
      rate: rate ? rate : undefined,
      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,
      event: e,
      lengthComputable: total != null,
      [isDownloadStream ? 'download' : 'upload']: true
    };

    listener(data);
  }, freq);
}

const progressEventDecorator = (total, throttled) => {
  const lengthComputable = total != null;

  return [(loaded) => throttled[0]({
    lengthComputable,
    total,
    loaded
  }), throttled[1]];
}

const asyncDecorator = (fn) => (...args) => _utils_js__WEBPACK_IMPORTED_MODULE_2__["default"].asap(() => fn(...args));


/***/ }),

/***/ "./node_modules/axios/lib/helpers/resolveConfig.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/resolveConfig.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isURLSameOrigin.js */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
/* harmony import */ var _cookies_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookies.js */ "./node_modules/axios/lib/helpers/cookies.js");
/* harmony import */ var _core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/buildFullPath.js */ "./node_modules/axios/lib/core/buildFullPath.js");
/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/mergeConfig.js */ "./node_modules/axios/lib/core/mergeConfig.js");
/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");
/* harmony import */ var _buildURL_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./buildURL.js */ "./node_modules/axios/lib/helpers/buildURL.js");









/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((config) => {
  const newConfig = (0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_5__["default"])({}, config);

  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;

  newConfig.headers = headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_6__["default"].from(headers);

  newConfig.url = (0,_buildURL_js__WEBPACK_IMPORTED_MODULE_7__["default"])((0,_core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_4__["default"])(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);

  // HTTP basic authentication
  if (auth) {
    headers.set('Authorization', 'Basic ' +
      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))
    );
  }

  if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isFormData(data)) {
    if (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].hasStandardBrowserEnv || _platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].hasStandardBrowserWebWorkerEnv) {
      headers.setContentType(undefined); // browser handles it
    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isFunction(data.getHeaders)) {
      // Node.js FormData (like form-data package)
      const formHeaders = data.getHeaders();
      // Only set safe headers to avoid overwriting security headers
      const allowedHeaders = ['content-type', 'content-length'];
      Object.entries(formHeaders).forEach(([key, val]) => {
        if (allowedHeaders.includes(key.toLowerCase())) {
          headers.set(key, val);
        }
      });
    }
  }  

  // Add xsrf header
  // This is only done if running in a standard browser environment.
  // Specifically not if we're in a web worker, or react-native.

  if (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].hasStandardBrowserEnv) {
    withXSRFToken && _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));

    if (withXSRFToken || (withXSRFToken !== false && (0,_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_2__["default"])(newConfig.url))) {
      // Add xsrf header
      const xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies_js__WEBPACK_IMPORTED_MODULE_3__["default"].read(xsrfCookieName);

      if (xsrfValue) {
        headers.set(xsrfHeaderName, xsrfValue);
      }
    }
  }

  return newConfig;
});



/***/ }),

/***/ "./node_modules/axios/lib/helpers/speedometer.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/speedometer.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });


/**
 * Calculate data maxRate
 * @param {Number} [samplesCount= 10]
 * @param {Number} [min= 1000]
 * @returns {Function}
 */
function speedometer(samplesCount, min) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head = 0;
  let tail = 0;
  let firstSampleTS;

  min = min !== undefined ? min : 1000;

  return function push(chunkLength) {
    const now = Date.now();

    const startedAt = timestamps[tail];

    if (!firstSampleTS) {
      firstSampleTS = now;
    }

    bytes[head] = chunkLength;
    timestamps[head] = now;

    let i = tail;
    let bytesCount = 0;

    while (i !== head) {
      bytesCount += bytes[i++];
      i = i % samplesCount;
    }

    head = (head + 1) % samplesCount;

    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }

    if (now - firstSampleTS < min) {
      return;
    }

    const passed = startedAt && now - startedAt;

    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (speedometer);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ spread)
/* harmony export */ });


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 *
 * @returns {Function}
 */
function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/throttle.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/throttle.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Throttle decorator
 * @param {Function} fn
 * @param {Number} freq
 * @return {Function}
 */
function throttle(fn, freq) {
  let timestamp = 0;
  let threshold = 1000 / freq;
  let lastArgs;
  let timer;

  const invoke = (args, now = Date.now()) => {
    timestamp = now;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn(...args);
  }

  const throttled = (...args) => {
    const now = Date.now();
    const passed = now - timestamp;
    if ( passed >= threshold) {
      invoke(args, now);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(() => {
          timer = null;
          invoke(lastArgs)
        }, threshold - passed);
      }
    }
  }

  const flush = () => lastArgs && invoke(lastArgs);

  return [throttled, flush];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (throttle);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/toFormData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toFormData.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");
/* harmony import */ var _platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../platform/node/classes/FormData.js */ "./node_modules/axios/lib/helpers/null.js");
/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")["Buffer"];




// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored


/**
 * Determines if the given thing is a array or js object.
 *
 * @param {string} thing - The object or array to be visited.
 *
 * @returns {boolean}
 */
function isVisitable(thing) {
  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isPlainObject(thing) || _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(thing);
}

/**
 * It removes the brackets from the end of a string
 *
 * @param {string} key - The key of the parameter.
 *
 * @returns {string} the key without the brackets.
 */
function removeBrackets(key) {
  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].endsWith(key, '[]') ? key.slice(0, -2) : key;
}

/**
 * It takes a path, a key, and a boolean, and returns a string
 *
 * @param {string} path - The path to the current key.
 * @param {string} key - The key of the current object being iterated over.
 * @param {string} dots - If true, the key will be rendered with dots instead of brackets.
 *
 * @returns {string} The path to the current key.
 */
function renderKey(path, key, dots) {
  if (!path) return key;
  return path.concat(key).map(function each(token, i) {
    // eslint-disable-next-line no-param-reassign
    token = removeBrackets(token);
    return !dots && i ? '[' + token + ']' : token;
  }).join(dots ? '.' : '');
}

/**
 * If the array is an array and none of its elements are visitable, then it's a flat array.
 *
 * @param {Array<any>} arr - The array to check
 *
 * @returns {boolean}
 */
function isFlatArray(arr) {
  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(arr) && !arr.some(isVisitable);
}

const predicates = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toFlatObject(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"], {}, null, function filter(prop) {
  return /^is[A-Z]/.test(prop);
});

/**
 * Convert a data object to FormData
 *
 * @param {Object} obj
 * @param {?Object} [formData]
 * @param {?Object} [options]
 * @param {Function} [options.visitor]
 * @param {Boolean} [options.metaTokens = true]
 * @param {Boolean} [options.dots = false]
 * @param {?Boolean} [options.indexes = false]
 *
 * @returns {Object}
 **/

/**
 * It converts an object into a FormData object
 *
 * @param {Object<any, any>} obj - The object to convert to form data.
 * @param {string} formData - The FormData object to append to.
 * @param {Object<string, any>} options
 *
 * @returns
 */
function toFormData(obj, formData, options) {
  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(obj)) {
    throw new TypeError('target must be an object');
  }

  // eslint-disable-next-line no-param-reassign
  formData = formData || new (_platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_2__["default"] || FormData)();

  // eslint-disable-next-line no-param-reassign
  options = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    // eslint-disable-next-line no-eq-null,eqeqeq
    return !_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(source[option]);
  });

  const metaTokens = options.metaTokens;
  // eslint-disable-next-line no-use-before-define
  const visitor = options.visitor || defaultVisitor;
  const dots = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;
  const useBlob = _Blob && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isSpecCompliantForm(formData);

  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(visitor)) {
    throw new TypeError('visitor must be a function');
  }

  function convertValue(value) {
    if (value === null) return '';

    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isDate(value)) {
      return value.toISOString();
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isBoolean(value)) {
      return value.toString();
    }

    if (!useBlob && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isBlob(value)) {
      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"]('Blob is not supported. Use a Buffer instead.');
    }

    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArrayBuffer(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isTypedArray(value)) {
      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);
    }

    return value;
  }

  /**
   * Default visitor.
   *
   * @param {*} value
   * @param {String|Number} key
   * @param {Array<String|Number>} path
   * @this {FormData}
   *
   * @returns {boolean} return true to visit the each prop of the value recursively
   */
  function defaultVisitor(value, key, path) {
    let arr = value;

    if (value && !path && typeof value === 'object') {
      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].endsWith(key, '{}')) {
        // eslint-disable-next-line no-param-reassign
        key = metaTokens ? key : key.slice(0, -2);
        // eslint-disable-next-line no-param-reassign
        value = JSON.stringify(value);
      } else if (
        (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(value) && isFlatArray(value)) ||
        ((_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFileList(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].endsWith(key, '[]')) && (arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toArray(value))
        )) {
        // eslint-disable-next-line no-param-reassign
        key = removeBrackets(key);

        arr.forEach(function each(el, index) {
          !(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),
            convertValue(el)
          );
        });
        return false;
      }
    }

    if (isVisitable(value)) {
      return true;
    }

    formData.append(renderKey(path, key, dots), convertValue(value));

    return false;
  }

  const stack = [];

  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });

  function build(value, path) {
    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(value)) return;

    if (stack.indexOf(value) !== -1) {
      throw Error('Circular reference detected in ' + path.join('.'));
    }

    stack.push(value);

    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(value, function each(el, key) {
      const result = !(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(el) || el === null) && visitor.call(
        formData, el, _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(key) ? key.trim() : key, path, exposedHelpers
      );

      if (result === true) {
        build(el, path ? path.concat(key) : [key]);
      }
    });

    stack.pop();
  }

  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(obj)) {
    throw new TypeError('data must be an object');
  }

  build(obj);

  return formData;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toFormData);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/toURLEncodedForm.js":
/*!************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/toURLEncodedForm.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ toURLEncodedForm)
/* harmony export */ });
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");
/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toFormData.js */ "./node_modules/axios/lib/helpers/toFormData.js");
/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");






function toURLEncodedForm(data, options) {
  return (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(data, new _platform_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].classes.URLSearchParams(), {
    visitor: function(value, key, path, helpers) {
      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_2__["default"].isNode && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isBuffer(value)) {
        this.append(key, value.toString('base64'));
        return false;
      }

      return helpers.defaultVisitor.apply(this, arguments);
    },
    ...options
  });
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/trackStream.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/trackStream.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   readBytes: () => (/* binding */ readBytes),
/* harmony export */   streamChunk: () => (/* binding */ streamChunk),
/* harmony export */   trackStream: () => (/* binding */ trackStream)
/* harmony export */ });

const streamChunk = function* (chunk, chunkSize) {
  let len = chunk.byteLength;

  if (!chunkSize || len < chunkSize) {
    yield chunk;
    return;
  }

  let pos = 0;
  let end;

  while (pos < len) {
    end = pos + chunkSize;
    yield chunk.slice(pos, end);
    pos = end;
  }
}

const readBytes = async function* (iterable, chunkSize) {
  for await (const chunk of readStream(iterable)) {
    yield* streamChunk(chunk, chunkSize);
  }
}

const readStream = async function* (stream) {
  if (stream[Symbol.asyncIterator]) {
    yield* stream;
    return;
  }

  const reader = stream.getReader();
  try {
    for (;;) {
      const {done, value} = await reader.read();
      if (done) {
        break;
      }
      yield value;
    }
  } finally {
    await reader.cancel();
  }
}

const trackStream = (stream, chunkSize, onProgress, onFinish) => {
  const iterator = readBytes(stream, chunkSize);

  let bytes = 0;
  let done;
  let _onFinish = (e) => {
    if (!done) {
      done = true;
      onFinish && onFinish(e);
    }
  }

  return new ReadableStream({
    async pull(controller) {
      try {
        const {done, value} = await iterator.next();

        if (done) {
         _onFinish();
          controller.close();
          return;
        }

        let len = value.byteLength;
        if (onProgress) {
          let loadedBytes = bytes += len;
          onProgress(loadedBytes);
        }
        controller.enqueue(new Uint8Array(value));
      } catch (err) {
        _onFinish(err);
        throw err;
      }
    },
    cancel(reason) {
      _onFinish(reason);
      return iterator.return();
    }
  }, {
    highWaterMark: 2
  })
}


/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env/data.js */ "./node_modules/axios/lib/env/data.js");
/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");





const validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {
  validators[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

const deprecatedWarnings = {};

/**
 * Transitional option validator
 *
 * @param {function|boolean?} validator - set to false if the transitional option has been removed
 * @param {string?} version - deprecated version / removed since version
 * @param {string?} message - some message with additional info
 *
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  function formatMessage(opt, desc) {
    return '[Axios v' + _env_data_js__WEBPACK_IMPORTED_MODULE_0__.VERSION + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return (value, opt, opts) => {
    if (validator === false) {
      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"](
        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),
        _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"].ERR_DEPRECATED
      );
    }

    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

validators.spelling = function spelling(correctSpelling) {
  return (value, opt) => {
    // eslint-disable-next-line no-console
    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
    return true;
  }
};

/**
 * Assert object's properties type
 *
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 *
 * @returns {object}
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"]('options must be an object', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"].ERR_BAD_OPTION_VALUE);
  }
  const keys = Object.keys(options);
  let i = keys.length;
  while (i-- > 0) {
    const opt = keys[i];
    const validator = schema[opt];
    if (validator) {
      const value = options[opt];
      const result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"]('option ' + opt + ' must be ' + result, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"].ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"]('Unknown option ' + opt, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__["default"].ERR_BAD_OPTION);
    }
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  assertOptions,
  validators
});


/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/Blob.js":
/*!*****************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/Blob.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof Blob !== 'undefined' ? Blob : null);


/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/FormData.js":
/*!*********************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/FormData.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof FormData !== 'undefined' ? FormData : null);


/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js":
/*!****************************************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/AxiosURLSearchParams.js */ "./node_modules/axios/lib/helpers/AxiosURLSearchParams.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__["default"]);


/***/ }),

/***/ "./node_modules/axios/lib/platform/browser/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/axios/lib/platform/browser/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/URLSearchParams.js */ "./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js");
/* harmony import */ var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/FormData.js */ "./node_modules/axios/lib/platform/browser/classes/FormData.js");
/* harmony import */ var _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Blob.js */ "./node_modules/axios/lib/platform/browser/classes/Blob.js");




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  isBrowser: true,
  classes: {
    URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__["default"],
    Blob: _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__["default"]
  },
  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']
});


/***/ }),

/***/ "./node_modules/axios/lib/platform/common/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/platform/common/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hasBrowserEnv: () => (/* binding */ hasBrowserEnv),
/* harmony export */   hasStandardBrowserEnv: () => (/* binding */ hasStandardBrowserEnv),
/* harmony export */   hasStandardBrowserWebWorkerEnv: () => (/* binding */ hasStandardBrowserWebWorkerEnv),
/* harmony export */   navigator: () => (/* binding */ _navigator),
/* harmony export */   origin: () => (/* binding */ origin)
/* harmony export */ });
const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';

const _navigator = typeof navigator === 'object' && navigator || undefined;

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 *
 * @returns {boolean}
 */
const hasStandardBrowserEnv = hasBrowserEnv &&
  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);

/**
 * Determine if we're running in a standard browser webWorker environment
 *
 * Although the `isStandardBrowserEnv` method indicates that
 * `allows axios to run in a web worker`, the WebWorker will still be
 * filtered out due to its judgment standard
 * `typeof window !== 'undefined' && typeof document !== 'undefined'`.
 * This leads to a problem when axios post `FormData` in webWorker
 */
const hasStandardBrowserWebWorkerEnv = (() => {
  return (
    typeof WorkerGlobalScope !== 'undefined' &&
    // eslint-disable-next-line no-undef
    self instanceof WorkerGlobalScope &&
    typeof self.importScripts === 'function'
  );
})();

const origin = hasBrowserEnv && window.location.href || 'http://localhost';




/***/ }),

/***/ "./node_modules/axios/lib/platform/index.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/platform/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node/index.js */ "./node_modules/axios/lib/platform/browser/index.js");
/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/utils.js */ "./node_modules/axios/lib/platform/common/utils.js");



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  ..._common_utils_js__WEBPACK_IMPORTED_MODULE_1__,
  ..._node_index_js__WEBPACK_IMPORTED_MODULE_0__["default"]
});


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/bind.js */ "./node_modules/axios/lib/helpers/bind.js");
/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ "./node_modules/process/browser.js");




// utils is a library of generic helper functions non-specific to axios

const {toString} = Object.prototype;
const {getPrototypeOf} = Object;
const {iterator, toStringTag} = Symbol;

const kindOf = (cache => thing => {
    const str = toString.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(Object.create(null));

const kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type
}

const typeOfTest = type => thing => typeof thing === type;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 *
 * @returns {boolean} True if value is an Array, otherwise false
 */
const {isArray} = Array;

/**
 * Determine if a value is undefined
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if the value is undefined, otherwise false
 */
const isUndefined = typeOfTest('undefined');

/**
 * Determine if a value is a Buffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
const isArrayBuffer = kindOfTest('ArrayBuffer');


/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  let result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a String, otherwise false
 */
const isString = typeOfTest('string');

/**
 * Determine if a value is a Function
 *
 * @param {*} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
const isFunction = typeOfTest('function');

/**
 * Determine if a value is a Number
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Number, otherwise false
 */
const isNumber = typeOfTest('number');

/**
 * Determine if a value is an Object
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an Object, otherwise false
 */
const isObject = (thing) => thing !== null && typeof thing === 'object';

/**
 * Determine if a value is a Boolean
 *
 * @param {*} thing The value to test
 * @returns {boolean} True if value is a Boolean, otherwise false
 */
const isBoolean = thing => thing === true || thing === false;

/**
 * Determine if a value is a plain Object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a plain Object, otherwise false
 */
const isPlainObject = (val) => {
  if (kindOf(val) !== 'object') {
    return false;
  }

  const prototype = getPrototypeOf(val);
  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);
}

/**
 * Determine if a value is an empty object (safely handles Buffers)
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is an empty object, otherwise false
 */
const isEmptyObject = (val) => {
  // Early return for non-objects or Buffers to prevent RangeError
  if (!isObject(val) || isBuffer(val)) {
    return false;
  }

  try {
    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;
  } catch (e) {
    // Fallback for any other objects that might cause RangeError with Object.keys()
    return false;
  }
}

/**
 * Determine if a value is a Date
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Date, otherwise false
 */
const isDate = kindOfTest('Date');

/**
 * Determine if a value is a File
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */
const isFile = kindOfTest('File');

/**
 * Determine if a value is a Blob
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Blob, otherwise false
 */
const isBlob = kindOfTest('Blob');

/**
 * Determine if a value is a FileList
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a File, otherwise false
 */
const isFileList = kindOfTest('FileList');

/**
 * Determine if a value is a Stream
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a Stream, otherwise false
 */
const isStream = (val) => isObject(val) && isFunction(val.pipe);

/**
 * Determine if a value is a FormData
 *
 * @param {*} thing The value to test
 *
 * @returns {boolean} True if value is an FormData, otherwise false
 */
const isFormData = (thing) => {
  let kind;
  return thing && (
    (typeof FormData === 'function' && thing instanceof FormData) || (
      isFunction(thing.append) && (
        (kind = kindOf(thing)) === 'formdata' ||
        // detect form-data instance
        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')
      )
    )
  )
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
const isURLSearchParams = kindOfTest('URLSearchParams');

const [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 *
 * @returns {String} The String freed of excess whitespace
 */
const trim = (str) => str.trim ?
  str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 *
 * @param {Boolean} [allOwnKeys = false]
 * @returns {any}
 */
function forEach(obj, fn, {allOwnKeys = false} = {}) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  let i;
  let l;

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Buffer check
    if (isBuffer(obj)) {
      return;
    }

    // Iterate over object keys
    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    const len = keys.length;
    let key;

    for (i = 0; i < len; i++) {
      key = keys[i];
      fn.call(null, obj[key], key, obj);
    }
  }
}

function findKey(obj, key) {
  if (isBuffer(obj)){
    return null;
  }

  key = key.toLowerCase();
  const keys = Object.keys(obj);
  let i = keys.length;
  let _key;
  while (i-- > 0) {
    _key = keys[i];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}

const _global = (() => {
  /*eslint no-undef:0*/
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : (typeof window !== 'undefined' ? window : global)
})();

const isContextDefined = (context) => !isUndefined(context) && context !== _global;

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 *
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  const {caseless, skipUndefined} = isContextDefined(this) && this || {};
  const result = {};
  const assignValue = (val, key) => {
    const targetKey = caseless && findKey(result, key) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge({}, val);
    } else if (isArray(val)) {
      result[targetKey] = val.slice();
    } else if (!skipUndefined || !isUndefined(val)) {
      result[targetKey] = val;
    }
  }

  for (let i = 0, l = arguments.length; i < l; i++) {
    arguments[i] && forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 *
 * @param {Boolean} [allOwnKeys]
 * @returns {Object} The resulting value of object a
 */
const extend = (a, b, thisArg, {allOwnKeys}= {}) => {
  forEach(b, (val, key) => {
    if (thisArg && isFunction(val)) {
      a[key] = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__["default"])(val, thisArg);
    } else {
      a[key] = val;
    }
  }, {allOwnKeys});
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 *
 * @returns {string} content value without BOM
 */
const stripBOM = (content) => {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

/**
 * Inherit the prototype methods from one constructor into another
 * @param {function} constructor
 * @param {function} superConstructor
 * @param {object} [props]
 * @param {object} [descriptors]
 *
 * @returns {void}
 */
const inherits = (constructor, superConstructor, props, descriptors) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, 'super', {
    value: superConstructor.prototype
  });
  props && Object.assign(constructor.prototype, props);
}

/**
 * Resolve object with deep prototype chain to a flat object
 * @param {Object} sourceObj source object
 * @param {Object} [destObj]
 * @param {Function|Boolean} [filter]
 * @param {Function} [propFilter]
 *
 * @returns {Object}
 */
const toFlatObject = (sourceObj, destObj, filter, propFilter) => {
  let props;
  let i;
  let prop;
  const merged = {};

  destObj = destObj || {};
  // eslint-disable-next-line no-eq-null,eqeqeq
  if (sourceObj == null) return destObj;

  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i = props.length;
    while (i-- > 0) {
      prop = props[i];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter !== false && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);

  return destObj;
}

/**
 * Determines whether a string ends with the characters of a specified string
 *
 * @param {String} str
 * @param {String} searchString
 * @param {Number} [position= 0]
 *
 * @returns {boolean}
 */
const endsWith = (str, searchString, position) => {
  str = String(str);
  if (position === undefined || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
}


/**
 * Returns new array from array like object or null if failed
 *
 * @param {*} [thing]
 *
 * @returns {?Array}
 */
const toArray = (thing) => {
  if (!thing) return null;
  if (isArray(thing)) return thing;
  let i = thing.length;
  if (!isNumber(i)) return null;
  const arr = new Array(i);
  while (i-- > 0) {
    arr[i] = thing[i];
  }
  return arr;
}

/**
 * Checking if the Uint8Array exists and if it does, it returns a function that checks if the
 * thing passed in is an instance of Uint8Array
 *
 * @param {TypedArray}
 *
 * @returns {Array}
 */
// eslint-disable-next-line func-names
const isTypedArray = (TypedArray => {
  // eslint-disable-next-line func-names
  return thing => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));

/**
 * For each entry in the object, call the function with the key and value.
 *
 * @param {Object<any, any>} obj - The object to iterate over.
 * @param {Function} fn - The function to call for each entry.
 *
 * @returns {void}
 */
const forEachEntry = (obj, fn) => {
  const generator = obj && obj[iterator];

  const _iterator = generator.call(obj);

  let result;

  while ((result = _iterator.next()) && !result.done) {
    const pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
}

/**
 * It takes a regular expression and a string, and returns an array of all the matches
 *
 * @param {string} regExp - The regular expression to match against.
 * @param {string} str - The string to search.
 *
 * @returns {Array<boolean>}
 */
const matchAll = (regExp, str) => {
  let matches;
  const arr = [];

  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }

  return arr;
}

/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */
const isHTMLForm = kindOfTest('HTMLFormElement');

const toCamelCase = str => {
  return str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,
    function replacer(m, p1, p2) {
      return p1.toUpperCase() + p2;
    }
  );
};

/* Creating a function that will check if an object has a property. */
const hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);

/**
 * Determine if a value is a RegExp object
 *
 * @param {*} val The value to test
 *
 * @returns {boolean} True if value is a RegExp object, otherwise false
 */
const isRegExp = kindOfTest('RegExp');

const reduceDescriptors = (obj, reducer) => {
  const descriptors = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};

  forEach(descriptors, (descriptor, name) => {
    let ret;
    if ((ret = reducer(descriptor, name, obj)) !== false) {
      reducedDescriptors[name] = ret || descriptor;
    }
  });

  Object.defineProperties(obj, reducedDescriptors);
}

/**
 * Makes all methods read-only
 * @param {Object} obj
 */

const freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    // skip restricted props in strict mode
    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {
      return false;
    }

    const value = obj[name];

    if (!isFunction(value)) return;

    descriptor.enumerable = false;

    if ('writable' in descriptor) {
      descriptor.writable = false;
      return;
    }

    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error('Can not rewrite read-only method \'' + name + '\'');
      };
    }
  });
}

const toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};

  const define = (arr) => {
    arr.forEach(value => {
      obj[value] = true;
    });
  }

  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));

  return obj;
}

const noop = () => {}

const toFiniteNumber = (value, defaultValue) => {
  return value != null && Number.isFinite(value = +value) ? value : defaultValue;
}



/**
 * If the thing is a FormData object, return true, otherwise return false.
 *
 * @param {unknown} thing - The thing to check.
 *
 * @returns {boolean}
 */
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);
}

const toJSONObject = (obj) => {
  const stack = new Array(10);

  const visit = (source, i) => {

    if (isObject(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }

      //Buffer check
      if (isBuffer(source)) {
        return source;
      }

      if(!('toJSON' in source)) {
        stack[i] = source;
        const target = isArray(source) ? [] : {};

        forEach(source, (value, key) => {
          const reducedValue = visit(value, i + 1);
          !isUndefined(reducedValue) && (target[key] = reducedValue);
        });

        stack[i] = undefined;

        return target;
      }
    }

    return source;
  }

  return visit(obj, 0);
}

const isAsyncFn = kindOfTest('AsyncFunction');

const isThenable = (thing) =>
  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);

// original code
// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34

const _setImmediate = ((setImmediateSupported, postMessageSupported) => {
  if (setImmediateSupported) {
    return setImmediate;
  }

  return postMessageSupported ? ((token, callbacks) => {
    _global.addEventListener("message", ({source, data}) => {
      if (source === _global && data === token) {
        callbacks.length && callbacks.shift()();
      }
    }, false);

    return (cb) => {
      callbacks.push(cb);
      _global.postMessage(token, "*");
    }
  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);
})(
  typeof setImmediate === 'function',
  isFunction(_global.postMessage)
);

const asap = typeof queueMicrotask !== 'undefined' ?
  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);

// *********************


const isIterable = (thing) => thing != null && isFunction(thing[iterator]);


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  isArray,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isBoolean,
  isObject,
  isPlainObject,
  isEmptyObject,
  isReadableStream,
  isRequest,
  isResponse,
  isHeaders,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isRegExp,
  isFunction,
  isStream,
  isURLSearchParams,
  isTypedArray,
  isFileList,
  forEach,
  merge,
  extend,
  trim,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty,
  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop,
  toFiniteNumber,
  findKey,
  global: _global,
  isContextDefined,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable,
  setImmediate: _setImmediate,
  asap,
  isIterable
});


/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = __webpack_require__.g.TYPED_ARRAY_SUPPORT !== undefined
  ? __webpack_require__.g.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}


/***/ }),

/***/ "./node_modules/emojibase-data/en/data.json":
/*!**************************************************!*\
  !*** ./node_modules/emojibase-data/en/data.json ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('[{"label":"regional indicator A","hexcode":"1F1E6","emoji":"🇦","text":"","type":1,"version":0},{"label":"regional indicator B","hexcode":"1F1E7","emoji":"🇧","text":"","type":1,"version":0},{"label":"regional indicator C","hexcode":"1F1E8","emoji":"🇨","text":"","type":1,"version":0},{"label":"regional indicator D","hexcode":"1F1E9","emoji":"🇩","text":"","type":1,"version":0},{"label":"regional indicator E","hexcode":"1F1EA","emoji":"🇪","text":"","type":1,"version":0},{"label":"regional indicator F","hexcode":"1F1EB","emoji":"🇫","text":"","type":1,"version":0},{"label":"regional indicator G","hexcode":"1F1EC","emoji":"🇬","text":"","type":1,"version":0},{"label":"regional indicator H","hexcode":"1F1ED","emoji":"🇭","text":"","type":1,"version":0},{"label":"regional indicator I","hexcode":"1F1EE","emoji":"🇮","text":"","type":1,"version":0},{"label":"regional indicator J","hexcode":"1F1EF","emoji":"🇯","text":"","type":1,"version":0},{"label":"regional indicator K","hexcode":"1F1F0","emoji":"🇰","text":"","type":1,"version":0},{"label":"regional indicator L","hexcode":"1F1F1","emoji":"🇱","text":"","type":1,"version":0},{"label":"regional indicator M","hexcode":"1F1F2","emoji":"🇲","text":"","type":1,"version":0},{"label":"regional indicator N","hexcode":"1F1F3","emoji":"🇳","text":"","type":1,"version":0},{"label":"regional indicator O","hexcode":"1F1F4","emoji":"🇴","text":"","type":1,"version":0},{"label":"regional indicator P","hexcode":"1F1F5","emoji":"🇵","text":"","type":1,"version":0},{"label":"regional indicator Q","hexcode":"1F1F6","emoji":"🇶","text":"","type":1,"version":0},{"label":"regional indicator R","hexcode":"1F1F7","emoji":"🇷","text":"","type":1,"version":0},{"label":"regional indicator S","hexcode":"1F1F8","emoji":"🇸","text":"","type":1,"version":0},{"label":"regional indicator T","hexcode":"1F1F9","emoji":"🇹","text":"","type":1,"version":0},{"label":"regional indicator U","hexcode":"1F1FA","emoji":"🇺","text":"","type":1,"version":0},{"label":"regional indicator V","hexcode":"1F1FB","emoji":"🇻","text":"","type":1,"version":0},{"label":"regional indicator W","hexcode":"1F1FC","emoji":"🇼","text":"","type":1,"version":0},{"label":"regional indicator X","hexcode":"1F1FD","emoji":"🇽","text":"","type":1,"version":0},{"label":"regional indicator Y","hexcode":"1F1FE","emoji":"🇾","text":"","type":1,"version":0},{"label":"regional indicator Z","hexcode":"1F1FF","emoji":"🇿","text":"","type":1,"version":0},{"label":"grinning face","hexcode":"1F600","tags":["cheerful","cheery","face","grin","grinning","happy","laugh","nice","smile","smiling","teeth"],"emoji":"😀","text":"","type":1,"order":1,"group":0,"subgroup":0,"version":1},{"label":"grinning face with big eyes","hexcode":"1F603","tags":["awesome","big","eyes","face","grin","grinning","happy","mouth","open","smile","smiling","teeth","yay"],"emoji":"😃","text":"","type":1,"order":2,"group":0,"subgroup":0,"version":0.6},{"label":"grinning face with smiling eyes","hexcode":"1F604","tags":["eye","eyes","face","grin","grinning","happy","laugh","lol","mouth","open","smile","smiling"],"emoji":"😄","text":"","type":1,"order":3,"group":0,"subgroup":0,"version":0.6,"emoticon":":D"},{"label":"beaming face with smiling eyes","hexcode":"1F601","tags":["beaming","eye","eyes","face","grin","grinning","happy","nice","smile","smiling","teeth"],"emoji":"😁","text":"","type":1,"order":4,"group":0,"subgroup":0,"version":0.6},{"label":"grinning squinting face","hexcode":"1F606","tags":["closed","eyes","face","grinning","haha","hahaha","happy","laugh","lol","mouth","open","rofl","smile","smiling","squinting"],"emoji":"😆","text":"","type":1,"order":5,"group":0,"subgroup":0,"version":0.6,"emoticon":["xD","XD"]},{"label":"grinning face with sweat","hexcode":"1F605","tags":["cold","dejected","excited","face","grinning","mouth","nervous","open","smile","smiling","stress","stressed","sweat"],"emoji":"😅","text":"","type":1,"order":6,"group":0,"subgroup":0,"version":0.6},{"label":"rolling on the floor laughing","hexcode":"1F923","tags":["crying","face","floor","funny","haha","happy","hehe","hilarious","joy","laugh","lmao","lol","rofl","roflmao","rolling","tear"],"emoji":"🤣","text":"","type":1,"order":7,"group":0,"subgroup":0,"version":3,"emoticon":":\'D"},{"label":"face with tears of joy","hexcode":"1F602","tags":["crying","face","feels","funny","haha","happy","hehe","hilarious","joy","laugh","lmao","lol","rofl","roflmao","tear"],"emoji":"😂","text":"","type":1,"order":8,"group":0,"subgroup":0,"version":0.6,"emoticon":":\')"},{"label":"slightly smiling face","hexcode":"1F642","tags":["face","happy","slightly","smile","smiling"],"emoji":"🙂","text":"","type":1,"order":9,"group":0,"subgroup":0,"version":1,"emoticon":":)"},{"label":"upside-down face","hexcode":"1F643","tags":["face","hehe","smile","upside-down"],"emoji":"🙃","text":"","type":1,"order":10,"group":0,"subgroup":0,"version":1},{"label":"melting face","hexcode":"1FAE0","tags":["disappear","dissolve","embarrassed","face","haha","heat","hot","liquid","lol","melt","melting","sarcasm","sarcastic"],"emoji":"🫠","text":"","type":1,"order":11,"group":0,"subgroup":0,"version":14},{"label":"winking face","hexcode":"1F609","tags":["face","flirt","heartbreaker","sexy","slide","tease","wink","winking","winks"],"emoji":"😉","text":"","type":1,"order":12,"group":0,"subgroup":0,"version":0.6,"emoticon":";)"},{"label":"smiling face with smiling eyes","hexcode":"1F60A","tags":["blush","eye","eyes","face","glad","satisfied","smile","smiling"],"emoji":"😊","text":"","type":1,"order":13,"group":0,"subgroup":0,"version":0.6,"emoticon":":>"},{"label":"smiling face with halo","hexcode":"1F607","tags":["angel","angelic","angels","blessed","face","fairy","fairytale","fantasy","halo","happy","innocent","peaceful","smile","smiling","spirit","tale"],"emoji":"😇","text":"","type":1,"order":14,"group":0,"subgroup":0,"version":1,"emoticon":["o:)","O:)"]},{"label":"smiling face with hearts","hexcode":"1F970","tags":["3","adore","crush","face","heart","hearts","ily","love","romance","smile","smiling","you"],"emoji":"🥰","text":"","type":1,"order":15,"group":0,"subgroup":1,"version":11},{"label":"smiling face with heart-eyes","hexcode":"1F60D","tags":["143","bae","eye","face","feels","heart-eyes","hearts","ily","kisses","love","romance","romantic","smile","xoxo"],"emoji":"😍","text":"","type":1,"order":16,"group":0,"subgroup":1,"version":0.6},{"label":"star-struck","hexcode":"1F929","tags":["excited","eyes","face","grinning","smile","star","starry-eyed","wow"],"emoji":"🤩","text":"","type":1,"order":17,"group":0,"subgroup":1,"version":5},{"label":"face blowing a kiss","hexcode":"1F618","tags":["adorbs","bae","blowing","face","flirt","heart","ily","kiss","love","lover","miss","muah","romantic","smooch","xoxo","you"],"emoji":"😘","text":"","type":1,"order":18,"group":0,"subgroup":1,"version":0.6,"emoticon":[":x",":X"]},{"label":"kissing face","hexcode":"1F617","tags":["143","date","dating","face","flirt","ily","kiss","love","smooch","smooches","xoxo","you"],"emoji":"😗","text":"","type":1,"order":19,"group":0,"subgroup":1,"version":1},{"label":"smiling face","hexcode":"263A","tags":["face","happy","outlined","relaxed","smile","smiling"],"emoji":"☺️","text":"☺︎","type":0,"order":21,"group":0,"subgroup":1,"version":0.6},{"label":"kissing face with closed eyes","hexcode":"1F61A","tags":["143","bae","blush","closed","date","dating","eye","eyes","face","flirt","ily","kisses","kissing","smooches","xoxo"],"emoji":"😚","text":"","type":1,"order":22,"group":0,"subgroup":1,"version":0.6,"emoticon":":*"},{"label":"kissing face with smiling eyes","hexcode":"1F619","tags":["143","closed","date","dating","eye","eyes","face","flirt","ily","kiss","kisses","kissing","love","night","smile","smiling"],"emoji":"😙","text":"","type":1,"order":23,"group":0,"subgroup":1,"version":1},{"label":"smiling face with tear","hexcode":"1F972","tags":["face","glad","grateful","happy","joy","pain","proud","relieved","smile","smiley","smiling","tear","touched"],"emoji":"🥲","text":"","type":1,"order":24,"group":0,"subgroup":1,"version":13},{"label":"face savoring food","hexcode":"1F60B","tags":["delicious","eat","face","food","full","hungry","savor","smile","smiling","tasty","um","yum","yummy"],"emoji":"😋","text":"","type":1,"order":25,"group":0,"subgroup":2,"version":0.6},{"label":"face with tongue","hexcode":"1F61B","tags":["awesome","cool","face","nice","party","stuck-out","sweet","tongue"],"emoji":"😛","text":"","type":1,"order":26,"group":0,"subgroup":2,"version":1,"emoticon":[":p",":P"]},{"label":"winking face with tongue","hexcode":"1F61C","tags":["crazy","epic","eye","face","funny","joke","loopy","nutty","party","stuck-out","tongue","wacky","weirdo","wink","winking","yolo"],"emoji":"😜","text":"","type":1,"order":27,"group":0,"subgroup":2,"version":0.6,"emoticon":[";p",";P"]},{"label":"zany face","hexcode":"1F92A","tags":["crazy","eye","eyes","face","goofy","large","small","zany"],"emoji":"🤪","text":"","type":1,"order":28,"group":0,"subgroup":2,"version":5},{"label":"squinting face with tongue","hexcode":"1F61D","tags":["closed","eye","eyes","face","gross","horrible","omg","squinting","stuck-out","taste","tongue","whatever","yolo"],"emoji":"😝","text":"","type":1,"order":29,"group":0,"subgroup":2,"version":0.6,"emoticon":["xp","xP","XP"]},{"label":"money-mouth face","hexcode":"1F911","tags":["face","money","money-mouth","mouth","paid"],"emoji":"🤑","text":"","type":1,"order":30,"group":0,"subgroup":2,"version":1},{"label":"smiling face with open hands","hexcode":"1F917","tags":["face","hands","hug","hugging","open","smiling"],"emoji":"🤗","text":"","type":1,"order":31,"group":0,"subgroup":3,"version":1},{"label":"face with hand over mouth","hexcode":"1F92D","tags":["face","giggle","giggling","hand","mouth","oops","realization","secret","shock","sudden","surprise","whoops"],"emoji":"🤭","text":"","type":1,"order":32,"group":0,"subgroup":3,"version":5},{"label":"face with open eyes and hand over mouth","hexcode":"1FAE2","tags":["amazement","awe","disbelief","embarrass","eyes","face","gasp","hand","mouth","omg","open","over","quiet","scared","shock","surprise"],"emoji":"🫢","text":"","type":1,"order":33,"group":0,"subgroup":3,"version":14},{"label":"face with peeking eye","hexcode":"1FAE3","tags":["captivated","embarrass","eye","face","hide","hiding","peek","peeking","peep","scared","shy","stare"],"emoji":"🫣","text":"","type":1,"order":34,"group":0,"subgroup":3,"version":14},{"label":"shushing face","hexcode":"1F92B","tags":["face","quiet","shh","shush","shushing"],"emoji":"🤫","text":"","type":1,"order":35,"group":0,"subgroup":3,"version":5},{"label":"thinking face","hexcode":"1F914","tags":["chin","consider","face","hmm","ponder","pondering","thinking","wondering"],"emoji":"🤔","text":"","type":1,"order":36,"group":0,"subgroup":3,"version":1,"emoticon":[":l",":L"]},{"label":"saluting face","hexcode":"1FAE1","tags":["face","good","luck","ma’am","ok","respect","salute","saluting","sir","troops","yes"],"emoji":"🫡","text":"","type":1,"order":37,"group":0,"subgroup":3,"version":14},{"label":"zipper-mouth face","hexcode":"1F910","tags":["face","keep","mouth","quiet","secret","shut","zip","zipper","zipper-mouth"],"emoji":"🤐","text":"","type":1,"order":38,"group":0,"subgroup":4,"version":1,"emoticon":[":z",":Z"]},{"label":"face with raised eyebrow","hexcode":"1F928","tags":["disapproval","disbelief","distrust","emoji","eyebrow","face","hmm","mild","raised","skeptic","skeptical","skepticism","surprise","what"],"emoji":"🤨","text":"","type":1,"order":39,"group":0,"subgroup":4,"version":5},{"label":"neutral face","hexcode":"1F610","tags":["awkward","blank","deadpan","expressionless","face","fine","jealous","meh","neutral","oh","shade","straight","unamused","unhappy","unimpressed","whatever"],"emoji":"😐️","text":"😐︎","type":1,"order":40,"group":0,"subgroup":4,"version":0.7,"emoticon":":|"},{"label":"expressionless face","hexcode":"1F611","tags":["awkward","dead","expressionless","face","fine","inexpressive","jealous","meh","not","oh","omg","straight","uh","unhappy","unimpressed","whatever"],"emoji":"😑","text":"","type":1,"order":41,"group":0,"subgroup":4,"version":1},{"label":"face without mouth","hexcode":"1F636","tags":["awkward","blank","expressionless","face","mouth","mouthless","mute","quiet","secret","silence","silent","speechless"],"emoji":"😶","text":"","type":1,"order":42,"group":0,"subgroup":4,"version":1,"emoticon":":#"},{"label":"dotted line face","hexcode":"1FAE5","tags":["depressed","disappear","dotted","face","hidden","hide","introvert","invisible","line","meh","whatever","wtv"],"emoji":"🫥","text":"","type":1,"order":43,"group":0,"subgroup":4,"version":14},{"label":"face in clouds","hexcode":"1F636-200D-1F32B-FE0F","tags":["absentminded","clouds","face","fog","head"],"emoji":"😶‍🌫️","text":"","type":1,"order":44,"group":0,"subgroup":4,"version":13.1},{"label":"smirking face","hexcode":"1F60F","tags":["boss","dapper","face","flirt","homie","kidding","leer","shade","slick","sly","smirk","smug","snicker","suave","suspicious","swag"],"emoji":"😏","text":"","type":1,"order":46,"group":0,"subgroup":4,"version":0.6,"emoticon":":j"},{"label":"unamused face","hexcode":"1F612","tags":["...","bored","face","fine","jealous","jel","jelly","pissed","smh","ugh","uhh","unamused","unhappy","weird","whatever"],"emoji":"😒","text":"","type":1,"order":47,"group":0,"subgroup":4,"version":0.6,"emoticon":":?"},{"label":"face with rolling eyes","hexcode":"1F644","tags":["eyeroll","eyes","face","rolling","shade","ugh","whatever"],"emoji":"🙄","text":"","type":1,"order":48,"group":0,"subgroup":4,"version":1},{"label":"grimacing face","hexcode":"1F62C","tags":["awk","awkward","dentist","face","grimace","grimacing","grinning","smile","smiling"],"emoji":"😬","text":"","type":1,"order":49,"group":0,"subgroup":4,"version":1,"emoticon":"8D"},{"label":"face exhaling","hexcode":"1F62E-200D-1F4A8","tags":["blow","blowing","exhale","exhaling","exhausted","face","gasp","groan","relief","sigh","smiley","smoke","whisper","whistle"],"emoji":"😮‍💨","text":"","type":1,"order":50,"group":0,"subgroup":4,"version":13.1},{"label":"lying face","hexcode":"1F925","tags":["face","liar","lie","lying","pinocchio"],"emoji":"🤥","text":"","type":1,"order":51,"group":0,"subgroup":4,"version":3},{"label":"shaking face","hexcode":"1FAE8","tags":["crazy","daze","earthquake","face","omg","panic","shaking","shock","surprise","vibrate","whoa","wow"],"emoji":"🫨","text":"","type":1,"order":52,"group":0,"subgroup":4,"version":15},{"label":"head shaking horizontally","hexcode":"1F642-200D-2194-FE0F","tags":["head","horizontally","no","shake","shaking"],"emoji":"🙂‍↔️","text":"","type":1,"order":53,"group":0,"subgroup":4,"version":15.1},{"label":"head shaking vertically","hexcode":"1F642-200D-2195-FE0F","tags":["head","nod","shaking","vertically","yes"],"emoji":"🙂‍↕️","text":"","type":1,"order":55,"group":0,"subgroup":4,"version":15.1},{"label":"relieved face","hexcode":"1F60C","tags":["calm","face","peace","relief","relieved","zen"],"emoji":"😌","text":"","type":1,"order":57,"group":0,"subgroup":5,"version":0.6},{"label":"pensive face","hexcode":"1F614","tags":["awful","bored","dejected","died","disappointed","face","losing","lost","pensive","sad","sucks"],"emoji":"😔","text":"","type":1,"order":58,"group":0,"subgroup":5,"version":0.6},{"label":"sleepy face","hexcode":"1F62A","tags":["crying","face","good","night","sad","sleep","sleeping","sleepy","tired"],"emoji":"😪","text":"","type":1,"order":59,"group":0,"subgroup":5,"version":0.6},{"label":"drooling face","hexcode":"1F924","tags":["drooling","face"],"emoji":"🤤","text":"","type":1,"order":60,"group":0,"subgroup":5,"version":3},{"label":"sleeping face","hexcode":"1F634","tags":["bed","bedtime","face","good","goodnight","nap","night","sleep","sleeping","tired","whatever","yawn","zzz"],"emoji":"😴","text":"","type":1,"order":61,"group":0,"subgroup":5,"version":1},{"label":"face with bags under eyes","hexcode":"1FAE9","tags":["bags","bored","exhausted","eyes","face","fatigued","late","sleepy","tired","weary"],"emoji":"🫩","text":"","type":1,"order":62,"group":0,"subgroup":5,"version":16},{"label":"face with medical mask","hexcode":"1F637","tags":["cold","dentist","dermatologist","doctor","dr","face","germs","mask","medical","medicine","sick"],"emoji":"😷","text":"","type":1,"order":63,"group":0,"subgroup":6,"version":0.6},{"label":"face with thermometer","hexcode":"1F912","tags":["face","ill","sick","thermometer"],"emoji":"🤒","text":"","type":1,"order":64,"group":0,"subgroup":6,"version":1},{"label":"face with head-bandage","hexcode":"1F915","tags":["bandage","face","head-bandage","hurt","injury","ouch"],"emoji":"🤕","text":"","type":1,"order":65,"group":0,"subgroup":6,"version":1},{"label":"nauseated face","hexcode":"1F922","tags":["face","gross","nasty","nauseated","sick","vomit"],"emoji":"🤢","text":"","type":1,"order":66,"group":0,"subgroup":6,"version":3,"emoticon":"%("},{"label":"face vomiting","hexcode":"1F92E","tags":["barf","ew","face","gross","puke","sick","spew","throw","up","vomit","vomiting"],"emoji":"🤮","text":"","type":1,"order":67,"group":0,"subgroup":6,"version":5},{"label":"sneezing face","hexcode":"1F927","tags":["face","fever","flu","gesundheit","sick","sneeze","sneezing"],"emoji":"🤧","text":"","type":1,"order":68,"group":0,"subgroup":6,"version":3},{"label":"hot face","hexcode":"1F975","tags":["dying","face","feverish","heat","hot","panting","red-faced","stroke","sweating","tongue"],"emoji":"🥵","text":"","type":1,"order":69,"group":0,"subgroup":6,"version":11},{"label":"cold face","hexcode":"1F976","tags":["blue","blue-faced","cold","face","freezing","frostbite","icicles","subzero","teeth"],"emoji":"🥶","text":"","type":1,"order":70,"group":0,"subgroup":6,"version":11},{"label":"woozy face","hexcode":"1F974","tags":["dizzy","drunk","eyes","face","intoxicated","mouth","tipsy","uneven","wavy","woozy"],"emoji":"🥴","text":"","type":1,"order":71,"group":0,"subgroup":6,"version":11,"emoticon":":&"},{"label":"face with crossed-out eyes","hexcode":"1F635","tags":["crossed-out","dead","dizzy","eyes","face","feels","knocked","out","sick","tired"],"emoji":"😵","text":"","type":1,"order":72,"group":0,"subgroup":6,"version":0.6,"emoticon":["xo","XO"]},{"label":"face with spiral eyes","hexcode":"1F635-200D-1F4AB","tags":["confused","dizzy","eyes","face","hypnotized","omg","smiley","spiral","trouble","whoa","woah","woozy"],"emoji":"😵‍💫","text":"","type":1,"order":73,"group":0,"subgroup":6,"version":13.1},{"label":"exploding head","hexcode":"1F92F","tags":["blown","explode","exploding","head","mind","mindblown","no","shocked","way"],"emoji":"🤯","text":"","type":1,"order":74,"group":0,"subgroup":6,"version":5},{"label":"cowboy hat face","hexcode":"1F920","tags":["cowboy","cowgirl","face","hat"],"emoji":"🤠","text":"","type":1,"order":75,"group":0,"subgroup":7,"version":3},{"label":"partying face","hexcode":"1F973","tags":["bday","birthday","celebrate","celebration","excited","face","happy","hat","hooray","horn","party","partying"],"emoji":"🥳","text":"","type":1,"order":76,"group":0,"subgroup":7,"version":11},{"label":"disguised face","hexcode":"1F978","tags":["disguise","eyebrow","face","glasses","incognito","moustache","mustache","nose","person","spy","tache","tash"],"emoji":"🥸","text":"","type":1,"order":77,"group":0,"subgroup":7,"version":13},{"label":"smiling face with sunglasses","hexcode":"1F60E","tags":["awesome","beach","bright","bro","chilling","cool","face","rad","relaxed","shades","slay","smile","style","sunglasses","swag","win"],"emoji":"😎","text":"","type":1,"order":78,"group":0,"subgroup":8,"version":1,"emoticon":"8)"},{"label":"nerd face","hexcode":"1F913","tags":["brainy","clever","expert","face","geek","gifted","glasses","intelligent","nerd","smart"],"emoji":"🤓","text":"","type":1,"order":79,"group":0,"subgroup":8,"version":1,"emoticon":":B"},{"label":"face with monocle","hexcode":"1F9D0","tags":["classy","face","fancy","monocle","rich","stuffy","wealthy"],"emoji":"🧐","text":"","type":1,"order":80,"group":0,"subgroup":8,"version":5},{"label":"confused face","hexcode":"1F615","tags":["befuddled","confused","confusing","dunno","face","frown","hm","meh","not","sad","sorry","sure"],"emoji":"😕","text":"","type":1,"order":81,"group":0,"subgroup":9,"version":1,"emoticon":":/"},{"label":"face with diagonal mouth","hexcode":"1FAE4","tags":["confused","confusion","diagonal","disappointed","doubt","doubtful","face","frustrated","frustration","meh","mouth","skeptical","unsure","whatever","wtv"],"emoji":"🫤","text":"","type":1,"order":82,"group":0,"subgroup":9,"version":14},{"label":"worried face","hexcode":"1F61F","tags":["anxious","butterflies","face","nerves","nervous","sad","stress","stressed","surprised","worried","worry"],"emoji":"😟","text":"","type":1,"order":83,"group":0,"subgroup":9,"version":1},{"label":"slightly frowning face","hexcode":"1F641","tags":["face","frown","frowning","sad","slightly"],"emoji":"🙁","text":"","type":1,"order":84,"group":0,"subgroup":9,"version":1},{"label":"frowning face","hexcode":"2639","tags":["face","frown","frowning","sad"],"emoji":"☹️","text":"☹︎","type":0,"order":86,"group":0,"subgroup":9,"version":0.7,"emoticon":":("},{"label":"face with open mouth","hexcode":"1F62E","tags":["believe","face","forgot","mouth","omg","open","shocked","surprised","sympathy","unbelievable","unreal","whoa","wow","you"],"emoji":"😮","text":"","type":1,"order":87,"group":0,"subgroup":9,"version":1},{"label":"hushed face","hexcode":"1F62F","tags":["epic","face","hushed","omg","stunned","surprised","whoa","woah"],"emoji":"😯","text":"","type":1,"order":88,"group":0,"subgroup":9,"version":1},{"label":"astonished face","hexcode":"1F632","tags":["astonished","cost","face","no","omg","shocked","totally","way"],"emoji":"😲","text":"","type":1,"order":89,"group":0,"subgroup":9,"version":0.6,"emoticon":[":o",":O"]},{"label":"flushed face","hexcode":"1F633","tags":["amazed","awkward","crazy","dazed","dead","disbelief","embarrassed","face","flushed","geez","heat","hot","impressed","jeez","what","wow"],"emoji":"😳","text":"","type":1,"order":90,"group":0,"subgroup":9,"version":0.6,"emoticon":":$"},{"label":"pleading face","hexcode":"1F97A","tags":["begging","big","eyes","face","mercy","not","pleading","please","pretty","puppy","sad","why"],"emoji":"🥺","text":"","type":1,"order":91,"group":0,"subgroup":9,"version":11},{"label":"face holding back tears","hexcode":"1F979","tags":["admiration","aww","back","cry","embarrassed","face","feelings","grateful","gratitude","holding","joy","please","proud","resist","sad","tears"],"emoji":"🥹","text":"","type":1,"order":92,"group":0,"subgroup":9,"version":14},{"label":"frowning face with open mouth","hexcode":"1F626","tags":["caught","face","frown","frowning","guard","mouth","open","scared","scary","surprise","what","wow"],"emoji":"😦","text":"","type":1,"order":93,"group":0,"subgroup":9,"version":1},{"label":"anguished face","hexcode":"1F627","tags":["anguished","face","forgot","scared","scary","stressed","surprise","unhappy","what","wow"],"emoji":"😧","text":"","type":1,"order":94,"group":0,"subgroup":9,"version":1,"emoticon":[":s",":S"]},{"label":"fearful face","hexcode":"1F628","tags":["afraid","anxious","blame","face","fear","fearful","scared","worried"],"emoji":"😨","text":"","type":1,"order":95,"group":0,"subgroup":9,"version":0.6},{"label":"anxious face with sweat","hexcode":"1F630","tags":["anxious","blue","cold","eek","face","mouth","nervous","open","rushed","scared","sweat","yikes"],"emoji":"😰","text":"","type":1,"order":96,"group":0,"subgroup":9,"version":0.6},{"label":"sad but relieved face","hexcode":"1F625","tags":["anxious","call","close","complicated","disappointed","face","not","relieved","sad","sweat","time","whew"],"emoji":"😥","text":"","type":1,"order":97,"group":0,"subgroup":9,"version":0.6},{"label":"crying face","hexcode":"1F622","tags":["awful","cry","crying","face","feels","miss","sad","tear","triste","unhappy"],"emoji":"😢","text":"","type":1,"order":98,"group":0,"subgroup":9,"version":0.6,"emoticon":":\'("},{"label":"loudly crying face","hexcode":"1F62D","tags":["bawling","cry","crying","face","loudly","sad","sob","tear","tears","unhappy"],"emoji":"😭","text":"","type":1,"order":99,"group":0,"subgroup":9,"version":0.6,"emoticon":":\'o"},{"label":"face screaming in fear","hexcode":"1F631","tags":["epic","face","fear","fearful","munch","scared","scream","screamer","screaming","shocked","surprised","woah"],"emoji":"😱","text":"","type":1,"order":100,"group":0,"subgroup":9,"version":0.6,"emoticon":"Dx"},{"label":"confounded face","hexcode":"1F616","tags":["annoyed","confounded","confused","cringe","distraught","face","feels","frustrated","mad","sad"],"emoji":"😖","text":"","type":1,"order":101,"group":0,"subgroup":9,"version":0.6,"emoticon":["x(","X("]},{"label":"persevering face","hexcode":"1F623","tags":["concentrate","concentration","face","focus","headache","persevere","persevering"],"emoji":"😣","text":"","type":1,"order":102,"group":0,"subgroup":9,"version":0.6},{"label":"disappointed face","hexcode":"1F61E","tags":["awful","blame","dejected","disappointed","face","fail","losing","sad","unhappy"],"emoji":"😞","text":"","type":1,"order":103,"group":0,"subgroup":9,"version":0.6},{"label":"downcast face with sweat","hexcode":"1F613","tags":["close","cold","downcast","face","feels","headache","nervous","sad","scared","sweat","yikes"],"emoji":"😓","text":"","type":1,"order":104,"group":0,"subgroup":9,"version":0.6,"emoticon":":<"},{"label":"weary face","hexcode":"1F629","tags":["crying","face","fail","feels","hungry","mad","nooo","sad","sleepy","tired","unhappy","weary"],"emoji":"😩","text":"","type":1,"order":105,"group":0,"subgroup":9,"version":0.6,"emoticon":"D:"},{"label":"tired face","hexcode":"1F62B","tags":["cost","face","feels","nap","sad","sneeze","tired"],"emoji":"😫","text":"","type":1,"order":106,"group":0,"subgroup":9,"version":0.6,"emoticon":[":c",":C"]},{"label":"yawning face","hexcode":"1F971","tags":["bedtime","bored","face","goodnight","nap","night","sleep","sleepy","tired","whatever","yawn","yawning","zzz"],"emoji":"🥱","text":"","type":1,"order":107,"group":0,"subgroup":9,"version":12},{"label":"face with steam from nose","hexcode":"1F624","tags":["anger","angry","face","feels","fume","fuming","furious","fury","mad","nose","steam","triumph","unhappy","won"],"emoji":"😤","text":"","type":1,"order":108,"group":0,"subgroup":10,"version":0.6},{"label":"enraged face","hexcode":"1F621","tags":["anger","angry","enraged","face","feels","mad","maddening","pouting","rage","red","shade","unhappy","upset"],"emoji":"😡","text":"","type":1,"order":109,"group":0,"subgroup":10,"version":0.6,"emoticon":">:/"},{"label":"angry face","hexcode":"1F620","tags":["anger","angry","blame","face","feels","frustrated","mad","maddening","rage","shade","unhappy","upset"],"emoji":"😠","text":"","type":1,"order":110,"group":0,"subgroup":10,"version":0.6},{"label":"face with symbols on mouth","hexcode":"1F92C","tags":["censor","cursing","cussing","face","mad","mouth","pissed","swearing","symbols"],"emoji":"🤬","text":"","type":1,"order":111,"group":0,"subgroup":10,"version":5,"emoticon":":@"},{"label":"smiling face with horns","hexcode":"1F608","tags":["demon","devil","evil","face","fairy","fairytale","fantasy","horns","purple","shade","smile","smiling","tale"],"emoji":"😈","text":"","type":1,"order":112,"group":0,"subgroup":10,"version":1,"emoticon":">:)"},{"label":"angry face with horns","hexcode":"1F47F","tags":["angry","demon","devil","evil","face","fairy","fairytale","fantasy","horns","imp","mischievous","purple","shade","tale"],"emoji":"👿","text":"","type":1,"order":113,"group":0,"subgroup":10,"version":0.6,"emoticon":">:("},{"label":"skull","hexcode":"1F480","tags":["body","dead","death","face","fairy","fairytale","i’m","lmao","monster","tale","yolo"],"emoji":"💀","text":"","type":1,"order":114,"group":0,"subgroup":10,"version":0.6},{"label":"skull and crossbones","hexcode":"2620","tags":["bone","crossbones","dead","death","face","monster","skull"],"emoji":"☠️","text":"☠︎","type":0,"order":116,"group":0,"subgroup":10,"version":1},{"label":"pile of poo","hexcode":"1F4A9","tags":["bs","comic","doo","dung","face","fml","monster","pile","poo","poop","smelly","smh","stink","stinks","stinky","turd"],"emoji":"💩","text":"","type":1,"order":117,"group":0,"subgroup":11,"version":0.6},{"label":"clown face","hexcode":"1F921","tags":["clown","face"],"emoji":"🤡","text":"","type":1,"order":118,"group":0,"subgroup":11,"version":3},{"label":"ogre","hexcode":"1F479","tags":["creature","devil","face","fairy","fairytale","fantasy","mask","monster","scary","tale"],"emoji":"👹","text":"","type":1,"order":119,"group":0,"subgroup":11,"version":0.6,"emoticon":">0)"},{"label":"goblin","hexcode":"1F47A","tags":["angry","creature","face","fairy","fairytale","fantasy","mask","mean","monster","tale"],"emoji":"👺","text":"","type":1,"order":120,"group":0,"subgroup":11,"version":0.6},{"label":"ghost","hexcode":"1F47B","tags":["boo","creature","excited","face","fairy","fairytale","fantasy","halloween","haunting","monster","scary","silly","tale"],"emoji":"👻","text":"","type":1,"order":121,"group":0,"subgroup":11,"version":0.6},{"label":"alien","hexcode":"1F47D","tags":["creature","extraterrestrial","face","fairy","fairytale","fantasy","monster","space","tale","ufo"],"emoji":"👽️","text":"👽︎","type":1,"order":122,"group":0,"subgroup":11,"version":0.6},{"label":"alien monster","hexcode":"1F47E","tags":["alien","creature","extraterrestrial","face","fairy","fairytale","fantasy","game","gamer","games","monster","pixelated","space","tale","ufo"],"emoji":"👾","text":"","type":1,"order":123,"group":0,"subgroup":11,"version":0.6},{"label":"robot","hexcode":"1F916","tags":["face","monster"],"emoji":"🤖","text":"","type":1,"order":124,"group":0,"subgroup":11,"version":1},{"label":"grinning cat","hexcode":"1F63A","tags":["animal","cat","face","grinning","mouth","open","smile","smiling"],"emoji":"😺","text":"","type":1,"order":125,"group":0,"subgroup":12,"version":0.6},{"label":"grinning cat with smiling eyes","hexcode":"1F638","tags":["animal","cat","eye","eyes","face","grin","grinning","smile","smiling"],"emoji":"😸","text":"","type":1,"order":126,"group":0,"subgroup":12,"version":0.6},{"label":"cat with tears of joy","hexcode":"1F639","tags":["animal","cat","face","joy","laugh","laughing","lol","tear","tears"],"emoji":"😹","text":"","type":1,"order":127,"group":0,"subgroup":12,"version":0.6},{"label":"smiling cat with heart-eyes","hexcode":"1F63B","tags":["animal","cat","eye","face","heart","heart-eyes","love","smile","smiling"],"emoji":"😻","text":"","type":1,"order":128,"group":0,"subgroup":12,"version":0.6},{"label":"cat with wry smile","hexcode":"1F63C","tags":["animal","cat","face","ironic","smile","wry"],"emoji":"😼","text":"","type":1,"order":129,"group":0,"subgroup":12,"version":0.6},{"label":"kissing cat","hexcode":"1F63D","tags":["animal","cat","closed","eye","eyes","face","kiss","kissing"],"emoji":"😽","text":"","type":1,"order":130,"group":0,"subgroup":12,"version":0.6,"emoticon":":3"},{"label":"weary cat","hexcode":"1F640","tags":["animal","cat","face","oh","surprised","weary"],"emoji":"🙀","text":"","type":1,"order":131,"group":0,"subgroup":12,"version":0.6},{"label":"crying cat","hexcode":"1F63F","tags":["animal","cat","cry","crying","face","sad","tear"],"emoji":"😿","text":"","type":1,"order":132,"group":0,"subgroup":12,"version":0.6},{"label":"pouting cat","hexcode":"1F63E","tags":["animal","cat","face","pouting"],"emoji":"😾","text":"","type":1,"order":133,"group":0,"subgroup":12,"version":0.6},{"label":"see-no-evil monkey","hexcode":"1F648","tags":["embarrassed","evil","face","forbidden","forgot","gesture","hide","monkey","no","omg","prohibited","scared","secret","smh","watch"],"emoji":"🙈","text":"","type":1,"order":134,"group":0,"subgroup":13,"version":0.6},{"label":"hear-no-evil monkey","hexcode":"1F649","tags":["animal","ears","evil","face","forbidden","gesture","hear","listen","monkey","no","not","prohibited","secret","shh","tmi"],"emoji":"🙉","text":"","type":1,"order":135,"group":0,"subgroup":13,"version":0.6},{"label":"speak-no-evil monkey","hexcode":"1F64A","tags":["animal","evil","face","forbidden","gesture","monkey","no","not","oops","prohibited","quiet","secret","speak","stealth"],"emoji":"🙊","text":"","type":1,"order":136,"group":0,"subgroup":13,"version":0.6},{"label":"love letter","hexcode":"1F48C","tags":["heart","letter","love","mail","romance","valentine"],"emoji":"💌","text":"","type":1,"order":137,"group":0,"subgroup":14,"version":0.6},{"label":"heart with arrow","hexcode":"1F498","tags":["143","adorbs","arrow","cupid","date","emotion","heart","ily","love","romance","valentine"],"emoji":"💘","text":"","type":1,"order":138,"group":0,"subgroup":14,"version":0.6},{"label":"heart with ribbon","hexcode":"1F49D","tags":["143","anniversary","emotion","heart","ily","kisses","ribbon","valentine","xoxo"],"emoji":"💝","text":"","type":1,"order":139,"group":0,"subgroup":14,"version":0.6},{"label":"sparkling heart","hexcode":"1F496","tags":["143","emotion","excited","good","heart","ily","kisses","morning","night","sparkle","sparkling","xoxo"],"emoji":"💖","text":"","type":1,"order":140,"group":0,"subgroup":14,"version":0.6},{"label":"growing heart","hexcode":"1F497","tags":["143","emotion","excited","growing","heart","heartpulse","ily","kisses","muah","nervous","pulse","xoxo"],"emoji":"💗","text":"","type":1,"order":141,"group":0,"subgroup":14,"version":0.6},{"label":"beating heart","hexcode":"1F493","tags":["143","beating","cardio","emotion","heart","heartbeat","ily","love","pulsating","pulse"],"emoji":"💓","text":"","type":1,"order":142,"group":0,"subgroup":14,"version":0.6},{"label":"revolving hearts","hexcode":"1F49E","tags":["143","adorbs","anniversary","emotion","heart","hearts","revolving"],"emoji":"💞","text":"","type":1,"order":143,"group":0,"subgroup":14,"version":0.6},{"label":"two hearts","hexcode":"1F495","tags":["143","anniversary","date","dating","emotion","heart","hearts","ily","kisses","love","loving","two","xoxo"],"emoji":"💕","text":"","type":1,"order":144,"group":0,"subgroup":14,"version":0.6},{"label":"heart decoration","hexcode":"1F49F","tags":["143","decoration","emotion","heart","hearth","purple","white"],"emoji":"💟","text":"","type":1,"order":145,"group":0,"subgroup":14,"version":0.6},{"label":"heart exclamation","hexcode":"2763","tags":["exclamation","heart","heavy","mark","punctuation"],"emoji":"❣️","text":"❣︎","type":0,"order":147,"group":0,"subgroup":14,"version":1},{"label":"broken heart","hexcode":"1F494","tags":["break","broken","crushed","emotion","heart","heartbroken","lonely","sad"],"emoji":"💔","text":"","type":1,"order":148,"group":0,"subgroup":14,"version":0.6,"emoticon":"</3"},{"label":"heart on fire","hexcode":"2764-FE0F-200D-1F525","tags":["burn","fire","heart","love","lust","sacred"],"emoji":"❤️‍🔥","text":"","type":1,"order":149,"group":0,"subgroup":14,"version":13.1},{"label":"mending heart","hexcode":"2764-FE0F-200D-1FA79","tags":["healthier","heart","improving","mending","recovering","recuperating","well"],"emoji":"❤️‍🩹","text":"","type":1,"order":151,"group":0,"subgroup":14,"version":13.1},{"label":"red heart","hexcode":"2764","tags":["emotion","heart","love","red"],"emoji":"❤️","text":"❤︎","type":0,"order":154,"group":0,"subgroup":14,"version":0.6,"emoticon":"<3"},{"label":"pink heart","hexcode":"1FA77","tags":["143","adorable","cute","emotion","heart","ily","like","love","pink","special","sweet"],"emoji":"🩷","text":"","type":1,"order":155,"group":0,"subgroup":14,"version":15},{"label":"orange heart","hexcode":"1F9E1","tags":["143","heart","orange"],"emoji":"🧡","text":"","type":1,"order":156,"group":0,"subgroup":14,"version":5},{"label":"yellow heart","hexcode":"1F49B","tags":["143","cardiac","emotion","heart","ily","love","yellow"],"emoji":"💛","text":"","type":1,"order":157,"group":0,"subgroup":14,"version":0.6},{"label":"green heart","hexcode":"1F49A","tags":["143","emotion","green","heart","ily","love","romantic"],"emoji":"💚","text":"","type":1,"order":158,"group":0,"subgroup":14,"version":0.6},{"label":"blue heart","hexcode":"1F499","tags":["143","blue","emotion","heart","ily","love","romance"],"emoji":"💙","text":"","type":1,"order":159,"group":0,"subgroup":14,"version":0.6},{"label":"light blue heart","hexcode":"1FA75","tags":["143","blue","cute","cyan","emotion","heart","ily","light","like","love","sky","special","teal"],"emoji":"🩵","text":"","type":1,"order":160,"group":0,"subgroup":14,"version":15},{"label":"purple heart","hexcode":"1F49C","tags":["143","bestest","emotion","heart","ily","love","purple"],"emoji":"💜","text":"","type":1,"order":161,"group":0,"subgroup":14,"version":0.6},{"label":"brown heart","hexcode":"1F90E","tags":["143","brown","heart"],"emoji":"🤎","text":"","type":1,"order":162,"group":0,"subgroup":14,"version":12},{"label":"black heart","hexcode":"1F5A4","tags":["black","evil","heart","wicked"],"emoji":"🖤","text":"","type":1,"order":163,"group":0,"subgroup":14,"version":3},{"label":"grey heart","hexcode":"1FA76","tags":["143","emotion","gray","grey","heart","ily","love","silver","slate","special"],"emoji":"🩶","text":"","type":1,"order":164,"group":0,"subgroup":14,"version":15},{"label":"white heart","hexcode":"1F90D","tags":["143","heart","white"],"emoji":"🤍","text":"","type":1,"order":165,"group":0,"subgroup":14,"version":12},{"label":"kiss mark","hexcode":"1F48B","tags":["dating","emotion","heart","kiss","kissing","lips","mark","romance","sexy"],"emoji":"💋","text":"","type":1,"order":166,"group":0,"subgroup":15,"version":0.6},{"label":"hundred points","hexcode":"1F4AF","tags":["100","a+","agree","clearly","definitely","faithful","fleek","full","hundred","keep","perfect","point","score","true","truth","yup"],"emoji":"💯","text":"","type":1,"order":167,"group":0,"subgroup":15,"version":0.6},{"label":"anger symbol","hexcode":"1F4A2","tags":["anger","angry","comic","mad","symbol","upset"],"emoji":"💢","text":"","type":1,"order":168,"group":0,"subgroup":15,"version":0.6},{"label":"collision","hexcode":"1F4A5","tags":["bomb","boom","collide","comic","explode"],"emoji":"💥","text":"","type":1,"order":169,"group":0,"subgroup":15,"version":0.6},{"label":"dizzy","hexcode":"1F4AB","tags":["comic","shining","shooting","star","stars"],"emoji":"💫","text":"","type":1,"order":170,"group":0,"subgroup":15,"version":0.6},{"label":"sweat droplets","hexcode":"1F4A6","tags":["comic","drip","droplet","droplets","drops","splashing","squirt","sweat","water","wet","work","workout"],"emoji":"💦","text":"","type":1,"order":171,"group":0,"subgroup":15,"version":0.6},{"label":"dashing away","hexcode":"1F4A8","tags":["away","cloud","comic","dash","dashing","fart","fast","go","gone","gotta","running","smoke"],"emoji":"💨","text":"","type":1,"order":172,"group":0,"subgroup":15,"version":0.6},{"label":"hole","hexcode":"1F573","tags":["hole"],"emoji":"🕳️","text":"🕳︎","type":0,"order":174,"group":0,"subgroup":15,"version":0.7},{"label":"speech balloon","hexcode":"1F4AC","tags":["balloon","bubble","comic","dialog","message","sms","speech","talk","text","typing"],"emoji":"💬","text":"","type":1,"order":175,"group":0,"subgroup":15,"version":0.6},{"label":"eye in speech bubble","hexcode":"1F441-FE0F-200D-1F5E8-FE0F","tags":["balloon","bubble","eye","speech","witness"],"emoji":"👁️‍🗨️","text":"","type":1,"order":176,"group":0,"subgroup":15,"version":2},{"label":"left speech bubble","hexcode":"1F5E8","tags":["balloon","bubble","dialog","left","speech"],"emoji":"🗨️","text":"🗨︎","type":0,"order":181,"group":0,"subgroup":15,"version":2},{"label":"right anger bubble","hexcode":"1F5EF","tags":["anger","angry","balloon","bubble","mad","right"],"emoji":"🗯️","text":"🗯︎","type":0,"order":183,"group":0,"subgroup":15,"version":0.7},{"label":"thought balloon","hexcode":"1F4AD","tags":["balloon","bubble","cartoon","cloud","comic","daydream","decisions","dream","idea","invent","invention","realize","think","thoughts","wonder"],"emoji":"💭","text":"","type":1,"order":184,"group":0,"subgroup":15,"version":1},{"label":"ZZZ","hexcode":"1F4A4","tags":["comic","good","goodnight","night","sleep","sleeping","sleepy","tired","zzz"],"emoji":"💤","text":"","type":1,"order":185,"group":0,"subgroup":15,"version":0.6},{"label":"waving hand","hexcode":"1F44B","tags":["bye","cya","g2g","greetings","gtg","hand","hello","hey","hi","later","outtie","ttfn","ttyl","wave","yo","you"],"emoji":"👋","text":"","type":1,"order":186,"group":1,"subgroup":16,"version":0.6,"skins":[{"label":"waving hand: light skin tone","hexcode":"1F44B-1F3FB","emoji":"👋🏻","text":"","type":1,"order":187,"group":1,"subgroup":16,"version":1,"tone":1},{"label":"waving hand: medium-light skin tone","hexcode":"1F44B-1F3FC","emoji":"👋🏼","text":"","type":1,"order":188,"group":1,"subgroup":16,"version":1,"tone":2},{"label":"waving hand: medium skin tone","hexcode":"1F44B-1F3FD","emoji":"👋🏽","text":"","type":1,"order":189,"group":1,"subgroup":16,"version":1,"tone":3},{"label":"waving hand: medium-dark skin tone","hexcode":"1F44B-1F3FE","emoji":"👋🏾","text":"","type":1,"order":190,"group":1,"subgroup":16,"version":1,"tone":4},{"label":"waving hand: dark skin tone","hexcode":"1F44B-1F3FF","emoji":"👋🏿","text":"","type":1,"order":191,"group":1,"subgroup":16,"version":1,"tone":5}]},{"label":"raised back of hand","hexcode":"1F91A","tags":["back","backhand","hand","raised"],"emoji":"🤚","text":"","type":1,"order":192,"group":1,"subgroup":16,"version":3,"skins":[{"label":"raised back of hand: light skin tone","hexcode":"1F91A-1F3FB","emoji":"🤚🏻","text":"","type":1,"order":193,"group":1,"subgroup":16,"version":3,"tone":1},{"label":"raised back of hand: medium-light skin tone","hexcode":"1F91A-1F3FC","emoji":"🤚🏼","text":"","type":1,"order":194,"group":1,"subgroup":16,"version":3,"tone":2},{"label":"raised back of hand: medium skin tone","hexcode":"1F91A-1F3FD","emoji":"🤚🏽","text":"","type":1,"order":195,"group":1,"subgroup":16,"version":3,"tone":3},{"label":"raised back of hand: medium-dark skin tone","hexcode":"1F91A-1F3FE","emoji":"🤚🏾","text":"","type":1,"order":196,"group":1,"subgroup":16,"version":3,"tone":4},{"label":"raised back of hand: dark skin tone","hexcode":"1F91A-1F3FF","emoji":"🤚🏿","text":"","type":1,"order":197,"group":1,"subgroup":16,"version":3,"tone":5}]},{"label":"hand with fingers splayed","hexcode":"1F590","tags":["finger","fingers","hand","raised","splayed","stop"],"emoji":"🖐️","text":"🖐︎","type":0,"order":199,"group":1,"subgroup":16,"version":0.7,"skins":[{"label":"hand with fingers splayed: light skin tone","hexcode":"1F590-1F3FB","emoji":"🖐🏻","text":"","type":1,"order":200,"group":1,"subgroup":16,"version":1,"tone":1},{"label":"hand with fingers splayed: medium-light skin tone","hexcode":"1F590-1F3FC","emoji":"🖐🏼","text":"","type":1,"order":201,"group":1,"subgroup":16,"version":1,"tone":2},{"label":"hand with fingers splayed: medium skin tone","hexcode":"1F590-1F3FD","emoji":"🖐🏽","text":"","type":1,"order":202,"group":1,"subgroup":16,"version":1,"tone":3},{"label":"hand with fingers splayed: medium-dark skin tone","hexcode":"1F590-1F3FE","emoji":"🖐🏾","text":"","type":1,"order":203,"group":1,"subgroup":16,"version":1,"tone":4},{"label":"hand with fingers splayed: dark skin tone","hexcode":"1F590-1F3FF","emoji":"🖐🏿","text":"","type":1,"order":204,"group":1,"subgroup":16,"version":1,"tone":5}]},{"label":"raised hand","hexcode":"270B","tags":["5","five","hand","high","raised","stop"],"emoji":"✋️","text":"✋︎","type":1,"order":205,"group":1,"subgroup":16,"version":0.6,"skins":[{"label":"raised hand: light skin tone","hexcode":"270B-1F3FB","emoji":"✋🏻","text":"","type":1,"order":206,"group":1,"subgroup":16,"version":1,"tone":1},{"label":"raised hand: medium-light skin tone","hexcode":"270B-1F3FC","emoji":"✋🏼","text":"","type":1,"order":207,"group":1,"subgroup":16,"version":1,"tone":2},{"label":"raised hand: medium skin tone","hexcode":"270B-1F3FD","emoji":"✋🏽","text":"","type":1,"order":208,"group":1,"subgroup":16,"version":1,"tone":3},{"label":"raised hand: medium-dark skin tone","hexcode":"270B-1F3FE","emoji":"✋🏾","text":"","type":1,"order":209,"group":1,"subgroup":16,"version":1,"tone":4},{"label":"raised hand: dark skin tone","hexcode":"270B-1F3FF","emoji":"✋🏿","text":"","type":1,"order":210,"group":1,"subgroup":16,"version":1,"tone":5}]},{"label":"vulcan salute","hexcode":"1F596","tags":["finger","hand","hands","salute","vulcan"],"emoji":"🖖","text":"","type":1,"order":211,"group":1,"subgroup":16,"version":1,"skins":[{"label":"vulcan salute: light skin tone","hexcode":"1F596-1F3FB","emoji":"🖖🏻","text":"","type":1,"order":212,"group":1,"subgroup":16,"version":1,"tone":1},{"label":"vulcan salute: medium-light skin tone","hexcode":"1F596-1F3FC","emoji":"🖖🏼","text":"","type":1,"order":213,"group":1,"subgroup":16,"version":1,"tone":2},{"label":"vulcan salute: medium skin tone","hexcode":"1F596-1F3FD","emoji":"🖖🏽","text":"","type":1,"order":214,"group":1,"subgroup":16,"version":1,"tone":3},{"label":"vulcan salute: medium-dark skin tone","hexcode":"1F596-1F3FE","emoji":"🖖🏾","text":"","type":1,"order":215,"group":1,"subgroup":16,"version":1,"tone":4},{"label":"vulcan salute: dark skin tone","hexcode":"1F596-1F3FF","emoji":"🖖🏿","text":"","type":1,"order":216,"group":1,"subgroup":16,"version":1,"tone":5}]},{"label":"rightwards hand","hexcode":"1FAF1","tags":["hand","handshake","hold","reach","right","rightward","rightwards","shake"],"emoji":"🫱","text":"","type":1,"order":217,"group":1,"subgroup":16,"version":14,"skins":[{"label":"rightwards hand: light skin tone","hexcode":"1FAF1-1F3FB","emoji":"🫱🏻","text":"","type":1,"order":218,"group":1,"subgroup":16,"version":14,"tone":1},{"label":"rightwards hand: medium-light skin tone","hexcode":"1FAF1-1F3FC","emoji":"🫱🏼","text":"","type":1,"order":219,"group":1,"subgroup":16,"version":14,"tone":2},{"label":"rightwards hand: medium skin tone","hexcode":"1FAF1-1F3FD","emoji":"🫱🏽","text":"","type":1,"order":220,"group":1,"subgroup":16,"version":14,"tone":3},{"label":"rightwards hand: medium-dark skin tone","hexcode":"1FAF1-1F3FE","emoji":"🫱🏾","text":"","type":1,"order":221,"group":1,"subgroup":16,"version":14,"tone":4},{"label":"rightwards hand: dark skin tone","hexcode":"1FAF1-1F3FF","emoji":"🫱🏿","text":"","type":1,"order":222,"group":1,"subgroup":16,"version":14,"tone":5}]},{"label":"leftwards hand","hexcode":"1FAF2","tags":["hand","handshake","hold","left","leftward","leftwards","reach","shake"],"emoji":"🫲","text":"","type":1,"order":223,"group":1,"subgroup":16,"version":14,"skins":[{"label":"leftwards hand: light skin tone","hexcode":"1FAF2-1F3FB","emoji":"🫲🏻","text":"","type":1,"order":224,"group":1,"subgroup":16,"version":14,"tone":1},{"label":"leftwards hand: medium-light skin tone","hexcode":"1FAF2-1F3FC","emoji":"🫲🏼","text":"","type":1,"order":225,"group":1,"subgroup":16,"version":14,"tone":2},{"label":"leftwards hand: medium skin tone","hexcode":"1FAF2-1F3FD","emoji":"🫲🏽","text":"","type":1,"order":226,"group":1,"subgroup":16,"version":14,"tone":3},{"label":"leftwards hand: medium-dark skin tone","hexcode":"1FAF2-1F3FE","emoji":"🫲🏾","text":"","type":1,"order":227,"group":1,"subgroup":16,"version":14,"tone":4},{"label":"leftwards hand: dark skin tone","hexcode":"1FAF2-1F3FF","emoji":"🫲🏿","text":"","type":1,"order":228,"group":1,"subgroup":16,"version":14,"tone":5}]},{"label":"palm down hand","hexcode":"1FAF3","tags":["dismiss","down","drop","dropped","hand","palm","pick","shoo","up"],"emoji":"🫳","text":"","type":1,"order":229,"group":1,"subgroup":16,"version":14,"skins":[{"label":"palm down hand: light skin tone","hexcode":"1FAF3-1F3FB","emoji":"🫳🏻","text":"","type":1,"order":230,"group":1,"subgroup":16,"version":14,"tone":1},{"label":"palm down hand: medium-light skin tone","hexcode":"1FAF3-1F3FC","emoji":"🫳🏼","text":"","type":1,"order":231,"group":1,"subgroup":16,"version":14,"tone":2},{"label":"palm down hand: medium skin tone","hexcode":"1FAF3-1F3FD","emoji":"🫳🏽","text":"","type":1,"order":232,"group":1,"subgroup":16,"version":14,"tone":3},{"label":"palm down hand: medium-dark skin tone","hexcode":"1FAF3-1F3FE","emoji":"🫳🏾","text":"","type":1,"order":233,"group":1,"subgroup":16,"version":14,"tone":4},{"label":"palm down hand: dark skin tone","hexcode":"1FAF3-1F3FF","emoji":"🫳🏿","text":"","type":1,"order":234,"group":1,"subgroup":16,"version":14,"tone":5}]},{"label":"palm up hand","hexcode":"1FAF4","tags":["beckon","catch","come","hand","hold","know","lift","me","offer","palm","tell"],"emoji":"🫴","text":"","type":1,"order":235,"group":1,"subgroup":16,"version":14,"skins":[{"label":"palm up hand: light skin tone","hexcode":"1FAF4-1F3FB","emoji":"🫴🏻","text":"","type":1,"order":236,"group":1,"subgroup":16,"version":14,"tone":1},{"label":"palm up hand: medium-light skin tone","hexcode":"1FAF4-1F3FC","emoji":"🫴🏼","text":"","type":1,"order":237,"group":1,"subgroup":16,"version":14,"tone":2},{"label":"palm up hand: medium skin tone","hexcode":"1FAF4-1F3FD","emoji":"🫴🏽","text":"","type":1,"order":238,"group":1,"subgroup":16,"version":14,"tone":3},{"label":"palm up hand: medium-dark skin tone","hexcode":"1FAF4-1F3FE","emoji":"🫴🏾","text":"","type":1,"order":239,"group":1,"subgroup":16,"version":14,"tone":4},{"label":"palm up hand: dark skin tone","hexcode":"1FAF4-1F3FF","emoji":"🫴🏿","text":"","type":1,"order":240,"group":1,"subgroup":16,"version":14,"tone":5}]},{"label":"leftwards pushing hand","hexcode":"1FAF7","tags":["block","five","halt","hand","high","hold","leftward","leftwards","pause","push","pushing","refuse","slap","stop","wait"],"emoji":"🫷","text":"","type":1,"order":241,"group":1,"subgroup":16,"version":15,"skins":[{"label":"leftwards pushing hand: light skin tone","hexcode":"1FAF7-1F3FB","emoji":"🫷🏻","text":"","type":1,"order":242,"group":1,"subgroup":16,"version":15,"tone":1},{"label":"leftwards pushing hand: medium-light skin tone","hexcode":"1FAF7-1F3FC","emoji":"🫷🏼","text":"","type":1,"order":243,"group":1,"subgroup":16,"version":15,"tone":2},{"label":"leftwards pushing hand: medium skin tone","hexcode":"1FAF7-1F3FD","emoji":"🫷🏽","text":"","type":1,"order":244,"group":1,"subgroup":16,"version":15,"tone":3},{"label":"leftwards pushing hand: medium-dark skin tone","hexcode":"1FAF7-1F3FE","emoji":"🫷🏾","text":"","type":1,"order":245,"group":1,"subgroup":16,"version":15,"tone":4},{"label":"leftwards pushing hand: dark skin tone","hexcode":"1FAF7-1F3FF","emoji":"🫷🏿","text":"","type":1,"order":246,"group":1,"subgroup":16,"version":15,"tone":5}]},{"label":"rightwards pushing hand","hexcode":"1FAF8","tags":["block","five","halt","hand","high","hold","pause","push","pushing","refuse","rightward","rightwards","slap","stop","wait"],"emoji":"🫸","text":"","type":1,"order":247,"group":1,"subgroup":16,"version":15,"skins":[{"label":"rightwards pushing hand: light skin tone","hexcode":"1FAF8-1F3FB","emoji":"🫸🏻","text":"","type":1,"order":248,"group":1,"subgroup":16,"version":15,"tone":1},{"label":"rightwards pushing hand: medium-light skin tone","hexcode":"1FAF8-1F3FC","emoji":"🫸🏼","text":"","type":1,"order":249,"group":1,"subgroup":16,"version":15,"tone":2},{"label":"rightwards pushing hand: medium skin tone","hexcode":"1FAF8-1F3FD","emoji":"🫸🏽","text":"","type":1,"order":250,"group":1,"subgroup":16,"version":15,"tone":3},{"label":"rightwards pushing hand: medium-dark skin tone","hexcode":"1FAF8-1F3FE","emoji":"🫸🏾","text":"","type":1,"order":251,"group":1,"subgroup":16,"version":15,"tone":4},{"label":"rightwards pushing hand: dark skin tone","hexcode":"1FAF8-1F3FF","emoji":"🫸🏿","text":"","type":1,"order":252,"group":1,"subgroup":16,"version":15,"tone":5}]},{"label":"OK hand","hexcode":"1F44C","tags":["awesome","bet","dope","fleek","fosho","got","gotcha","hand","legit","ok","okay","pinch","rad","sure","sweet","three"],"emoji":"👌","text":"","type":1,"order":253,"group":1,"subgroup":17,"version":0.6,"skins":[{"label":"OK hand: light skin tone","hexcode":"1F44C-1F3FB","emoji":"👌🏻","text":"","type":1,"order":254,"group":1,"subgroup":17,"version":1,"tone":1},{"label":"OK hand: medium-light skin tone","hexcode":"1F44C-1F3FC","emoji":"👌🏼","text":"","type":1,"order":255,"group":1,"subgroup":17,"version":1,"tone":2},{"label":"OK hand: medium skin tone","hexcode":"1F44C-1F3FD","emoji":"👌🏽","text":"","type":1,"order":256,"group":1,"subgroup":17,"version":1,"tone":3},{"label":"OK hand: medium-dark skin tone","hexcode":"1F44C-1F3FE","emoji":"👌🏾","text":"","type":1,"order":257,"group":1,"subgroup":17,"version":1,"tone":4},{"label":"OK hand: dark skin tone","hexcode":"1F44C-1F3FF","emoji":"👌🏿","text":"","type":1,"order":258,"group":1,"subgroup":17,"version":1,"tone":5}]},{"label":"pinched fingers","hexcode":"1F90C","tags":["fingers","gesture","hand","hold","huh","interrogation","patience","pinched","relax","sarcastic","ugh","what","zip"],"emoji":"🤌","text":"","type":1,"order":259,"group":1,"subgroup":17,"version":13,"skins":[{"label":"pinched fingers: light skin tone","hexcode":"1F90C-1F3FB","emoji":"🤌🏻","text":"","type":1,"order":260,"group":1,"subgroup":17,"version":13,"tone":1},{"label":"pinched fingers: medium-light skin tone","hexcode":"1F90C-1F3FC","emoji":"🤌🏼","text":"","type":1,"order":261,"group":1,"subgroup":17,"version":13,"tone":2},{"label":"pinched fingers: medium skin tone","hexcode":"1F90C-1F3FD","emoji":"🤌🏽","text":"","type":1,"order":262,"group":1,"subgroup":17,"version":13,"tone":3},{"label":"pinched fingers: medium-dark skin tone","hexcode":"1F90C-1F3FE","emoji":"🤌🏾","text":"","type":1,"order":263,"group":1,"subgroup":17,"version":13,"tone":4},{"label":"pinched fingers: dark skin tone","hexcode":"1F90C-1F3FF","emoji":"🤌🏿","text":"","type":1,"order":264,"group":1,"subgroup":17,"version":13,"tone":5}]},{"label":"pinching hand","hexcode":"1F90F","tags":["amount","bit","fingers","hand","little","pinching","small","sort"],"emoji":"🤏","text":"","type":1,"order":265,"group":1,"subgroup":17,"version":12,"skins":[{"label":"pinching hand: light skin tone","hexcode":"1F90F-1F3FB","emoji":"🤏🏻","text":"","type":1,"order":266,"group":1,"subgroup":17,"version":12,"tone":1},{"label":"pinching hand: medium-light skin tone","hexcode":"1F90F-1F3FC","emoji":"🤏🏼","text":"","type":1,"order":267,"group":1,"subgroup":17,"version":12,"tone":2},{"label":"pinching hand: medium skin tone","hexcode":"1F90F-1F3FD","emoji":"🤏🏽","text":"","type":1,"order":268,"group":1,"subgroup":17,"version":12,"tone":3},{"label":"pinching hand: medium-dark skin tone","hexcode":"1F90F-1F3FE","emoji":"🤏🏾","text":"","type":1,"order":269,"group":1,"subgroup":17,"version":12,"tone":4},{"label":"pinching hand: dark skin tone","hexcode":"1F90F-1F3FF","emoji":"🤏🏿","text":"","type":1,"order":270,"group":1,"subgroup":17,"version":12,"tone":5}]},{"label":"victory hand","hexcode":"270C","tags":["hand","peace","v","victory"],"emoji":"✌️","text":"✌︎","type":0,"order":272,"group":1,"subgroup":17,"version":0.6,"skins":[{"label":"victory hand: light skin tone","hexcode":"270C-1F3FB","emoji":"✌🏻","text":"","type":1,"order":273,"group":1,"subgroup":17,"version":1,"tone":1},{"label":"victory hand: medium-light skin tone","hexcode":"270C-1F3FC","emoji":"✌🏼","text":"","type":1,"order":274,"group":1,"subgroup":17,"version":1,"tone":2},{"label":"victory hand: medium skin tone","hexcode":"270C-1F3FD","emoji":"✌🏽","text":"","type":1,"order":275,"group":1,"subgroup":17,"version":1,"tone":3},{"label":"victory hand: medium-dark skin tone","hexcode":"270C-1F3FE","emoji":"✌🏾","text":"","type":1,"order":276,"group":1,"subgroup":17,"version":1,"tone":4},{"label":"victory hand: dark skin tone","hexcode":"270C-1F3FF","emoji":"✌🏿","text":"","type":1,"order":277,"group":1,"subgroup":17,"version":1,"tone":5}]},{"label":"crossed fingers","hexcode":"1F91E","tags":["cross","crossed","finger","fingers","hand","luck"],"emoji":"🤞","text":"","type":1,"order":278,"group":1,"subgroup":17,"version":3,"skins":[{"label":"crossed fingers: light skin tone","hexcode":"1F91E-1F3FB","emoji":"🤞🏻","text":"","type":1,"order":279,"group":1,"subgroup":17,"version":3,"tone":1},{"label":"crossed fingers: medium-light skin tone","hexcode":"1F91E-1F3FC","emoji":"🤞🏼","text":"","type":1,"order":280,"group":1,"subgroup":17,"version":3,"tone":2},{"label":"crossed fingers: medium skin tone","hexcode":"1F91E-1F3FD","emoji":"🤞🏽","text":"","type":1,"order":281,"group":1,"subgroup":17,"version":3,"tone":3},{"label":"crossed fingers: medium-dark skin tone","hexcode":"1F91E-1F3FE","emoji":"🤞🏾","text":"","type":1,"order":282,"group":1,"subgroup":17,"version":3,"tone":4},{"label":"crossed fingers: dark skin tone","hexcode":"1F91E-1F3FF","emoji":"🤞🏿","text":"","type":1,"order":283,"group":1,"subgroup":17,"version":3,"tone":5}]},{"label":"hand with index finger and thumb crossed","hexcode":"1FAF0","tags":["<3","crossed","expensive","finger","hand","heart","index","love","money","snap","thumb"],"emoji":"🫰","text":"","type":1,"order":284,"group":1,"subgroup":17,"version":14,"skins":[{"label":"hand with index finger and thumb crossed: light skin tone","hexcode":"1FAF0-1F3FB","emoji":"🫰🏻","text":"","type":1,"order":285,"group":1,"subgroup":17,"version":14,"tone":1},{"label":"hand with index finger and thumb crossed: medium-light skin tone","hexcode":"1FAF0-1F3FC","emoji":"🫰🏼","text":"","type":1,"order":286,"group":1,"subgroup":17,"version":14,"tone":2},{"label":"hand with index finger and thumb crossed: medium skin tone","hexcode":"1FAF0-1F3FD","emoji":"🫰🏽","text":"","type":1,"order":287,"group":1,"subgroup":17,"version":14,"tone":3},{"label":"hand with index finger and thumb crossed: medium-dark skin tone","hexcode":"1FAF0-1F3FE","emoji":"🫰🏾","text":"","type":1,"order":288,"group":1,"subgroup":17,"version":14,"tone":4},{"label":"hand with index finger and thumb crossed: dark skin tone","hexcode":"1FAF0-1F3FF","emoji":"🫰🏿","text":"","type":1,"order":289,"group":1,"subgroup":17,"version":14,"tone":5}]},{"label":"love-you gesture","hexcode":"1F91F","tags":["fingers","gesture","hand","ily","love","love-you","three","you"],"emoji":"🤟","text":"","type":1,"order":290,"group":1,"subgroup":17,"version":5,"skins":[{"label":"love-you gesture: light skin tone","hexcode":"1F91F-1F3FB","emoji":"🤟🏻","text":"","type":1,"order":291,"group":1,"subgroup":17,"version":5,"tone":1},{"label":"love-you gesture: medium-light skin tone","hexcode":"1F91F-1F3FC","emoji":"🤟🏼","text":"","type":1,"order":292,"group":1,"subgroup":17,"version":5,"tone":2},{"label":"love-you gesture: medium skin tone","hexcode":"1F91F-1F3FD","emoji":"🤟🏽","text":"","type":1,"order":293,"group":1,"subgroup":17,"version":5,"tone":3},{"label":"love-you gesture: medium-dark skin tone","hexcode":"1F91F-1F3FE","emoji":"🤟🏾","text":"","type":1,"order":294,"group":1,"subgroup":17,"version":5,"tone":4},{"label":"love-you gesture: dark skin tone","hexcode":"1F91F-1F3FF","emoji":"🤟🏿","text":"","type":1,"order":295,"group":1,"subgroup":17,"version":5,"tone":5}]},{"label":"sign of the horns","hexcode":"1F918","tags":["finger","hand","horns","rock-on","sign"],"emoji":"🤘","text":"","type":1,"order":296,"group":1,"subgroup":17,"version":1,"emoticon":["\\\\m/","\\\\M/"],"skins":[{"label":"sign of the horns: light skin tone","hexcode":"1F918-1F3FB","emoji":"🤘🏻","text":"","type":1,"order":297,"group":1,"subgroup":17,"version":1,"tone":1},{"label":"sign of the horns: medium-light skin tone","hexcode":"1F918-1F3FC","emoji":"🤘🏼","text":"","type":1,"order":298,"group":1,"subgroup":17,"version":1,"tone":2},{"label":"sign of the horns: medium skin tone","hexcode":"1F918-1F3FD","emoji":"🤘🏽","text":"","type":1,"order":299,"group":1,"subgroup":17,"version":1,"tone":3},{"label":"sign of the horns: medium-dark skin tone","hexcode":"1F918-1F3FE","emoji":"🤘🏾","text":"","type":1,"order":300,"group":1,"subgroup":17,"version":1,"tone":4},{"label":"sign of the horns: dark skin tone","hexcode":"1F918-1F3FF","emoji":"🤘🏿","text":"","type":1,"order":301,"group":1,"subgroup":17,"version":1,"tone":5}]},{"label":"call me hand","hexcode":"1F919","tags":["call","hand","hang","loose","me","shaka"],"emoji":"🤙","text":"","type":1,"order":302,"group":1,"subgroup":17,"version":3,"skins":[{"label":"call me hand: light skin tone","hexcode":"1F919-1F3FB","emoji":"🤙🏻","text":"","type":1,"order":303,"group":1,"subgroup":17,"version":3,"tone":1},{"label":"call me hand: medium-light skin tone","hexcode":"1F919-1F3FC","emoji":"🤙🏼","text":"","type":1,"order":304,"group":1,"subgroup":17,"version":3,"tone":2},{"label":"call me hand: medium skin tone","hexcode":"1F919-1F3FD","emoji":"🤙🏽","text":"","type":1,"order":305,"group":1,"subgroup":17,"version":3,"tone":3},{"label":"call me hand: medium-dark skin tone","hexcode":"1F919-1F3FE","emoji":"🤙🏾","text":"","type":1,"order":306,"group":1,"subgroup":17,"version":3,"tone":4},{"label":"call me hand: dark skin tone","hexcode":"1F919-1F3FF","emoji":"🤙🏿","text":"","type":1,"order":307,"group":1,"subgroup":17,"version":3,"tone":5}]},{"label":"backhand index pointing left","hexcode":"1F448","tags":["backhand","finger","hand","index","left","point","pointing"],"emoji":"👈️","text":"👈︎","type":1,"order":308,"group":1,"subgroup":18,"version":0.6,"skins":[{"label":"backhand index pointing left: light skin tone","hexcode":"1F448-1F3FB","emoji":"👈🏻","text":"","type":1,"order":309,"group":1,"subgroup":18,"version":1,"tone":1},{"label":"backhand index pointing left: medium-light skin tone","hexcode":"1F448-1F3FC","emoji":"👈🏼","text":"","type":1,"order":310,"group":1,"subgroup":18,"version":1,"tone":2},{"label":"backhand index pointing left: medium skin tone","hexcode":"1F448-1F3FD","emoji":"👈🏽","text":"","type":1,"order":311,"group":1,"subgroup":18,"version":1,"tone":3},{"label":"backhand index pointing left: medium-dark skin tone","hexcode":"1F448-1F3FE","emoji":"👈🏾","text":"","type":1,"order":312,"group":1,"subgroup":18,"version":1,"tone":4},{"label":"backhand index pointing left: dark skin tone","hexcode":"1F448-1F3FF","emoji":"👈🏿","text":"","type":1,"order":313,"group":1,"subgroup":18,"version":1,"tone":5}]},{"label":"backhand index pointing right","hexcode":"1F449","tags":["backhand","finger","hand","index","point","pointing","right"],"emoji":"👉️","text":"👉︎","type":1,"order":314,"group":1,"subgroup":18,"version":0.6,"skins":[{"label":"backhand index pointing right: light skin tone","hexcode":"1F449-1F3FB","emoji":"👉🏻","text":"","type":1,"order":315,"group":1,"subgroup":18,"version":1,"tone":1},{"label":"backhand index pointing right: medium-light skin tone","hexcode":"1F449-1F3FC","emoji":"👉🏼","text":"","type":1,"order":316,"group":1,"subgroup":18,"version":1,"tone":2},{"label":"backhand index pointing right: medium skin tone","hexcode":"1F449-1F3FD","emoji":"👉🏽","text":"","type":1,"order":317,"group":1,"subgroup":18,"version":1,"tone":3},{"label":"backhand index pointing right: medium-dark skin tone","hexcode":"1F449-1F3FE","emoji":"👉🏾","text":"","type":1,"order":318,"group":1,"subgroup":18,"version":1,"tone":4},{"label":"backhand index pointing right: dark skin tone","hexcode":"1F449-1F3FF","emoji":"👉🏿","text":"","type":1,"order":319,"group":1,"subgroup":18,"version":1,"tone":5}]},{"label":"backhand index pointing up","hexcode":"1F446","tags":["backhand","finger","hand","index","point","pointing","up"],"emoji":"👆️","text":"👆︎","type":1,"order":320,"group":1,"subgroup":18,"version":0.6,"skins":[{"label":"backhand index pointing up: light skin tone","hexcode":"1F446-1F3FB","emoji":"👆🏻","text":"","type":1,"order":321,"group":1,"subgroup":18,"version":1,"tone":1},{"label":"backhand index pointing up: medium-light skin tone","hexcode":"1F446-1F3FC","emoji":"👆🏼","text":"","type":1,"order":322,"group":1,"subgroup":18,"version":1,"tone":2},{"label":"backhand index pointing up: medium skin tone","hexcode":"1F446-1F3FD","emoji":"👆🏽","text":"","type":1,"order":323,"group":1,"subgroup":18,"version":1,"tone":3},{"label":"backhand index pointing up: medium-dark skin tone","hexcode":"1F446-1F3FE","emoji":"👆🏾","text":"","type":1,"order":324,"group":1,"subgroup":18,"version":1,"tone":4},{"label":"backhand index pointing up: dark skin tone","hexcode":"1F446-1F3FF","emoji":"👆🏿","text":"","type":1,"order":325,"group":1,"subgroup":18,"version":1,"tone":5}]},{"label":"middle finger","hexcode":"1F595","tags":["finger","hand","middle"],"emoji":"🖕","text":"","type":1,"order":326,"group":1,"subgroup":18,"version":1,"skins":[{"label":"middle finger: light skin tone","hexcode":"1F595-1F3FB","emoji":"🖕🏻","text":"","type":1,"order":327,"group":1,"subgroup":18,"version":1,"tone":1},{"label":"middle finger: medium-light skin tone","hexcode":"1F595-1F3FC","emoji":"🖕🏼","text":"","type":1,"order":328,"group":1,"subgroup":18,"version":1,"tone":2},{"label":"middle finger: medium skin tone","hexcode":"1F595-1F3FD","emoji":"🖕🏽","text":"","type":1,"order":329,"group":1,"subgroup":18,"version":1,"tone":3},{"label":"middle finger: medium-dark skin tone","hexcode":"1F595-1F3FE","emoji":"🖕🏾","text":"","type":1,"order":330,"group":1,"subgroup":18,"version":1,"tone":4},{"label":"middle finger: dark skin tone","hexcode":"1F595-1F3FF","emoji":"🖕🏿","text":"","type":1,"order":331,"group":1,"subgroup":18,"version":1,"tone":5}]},{"label":"backhand index pointing down","hexcode":"1F447","tags":["backhand","down","finger","hand","index","point","pointing"],"emoji":"👇️","text":"👇︎","type":1,"order":332,"group":1,"subgroup":18,"version":0.6,"skins":[{"label":"backhand index pointing down: light skin tone","hexcode":"1F447-1F3FB","emoji":"👇🏻","text":"","type":1,"order":333,"group":1,"subgroup":18,"version":1,"tone":1},{"label":"backhand index pointing down: medium-light skin tone","hexcode":"1F447-1F3FC","emoji":"👇🏼","text":"","type":1,"order":334,"group":1,"subgroup":18,"version":1,"tone":2},{"label":"backhand index pointing down: medium skin tone","hexcode":"1F447-1F3FD","emoji":"👇🏽","text":"","type":1,"order":335,"group":1,"subgroup":18,"version":1,"tone":3},{"label":"backhand index pointing down: medium-dark skin tone","hexcode":"1F447-1F3FE","emoji":"👇🏾","text":"","type":1,"order":336,"group":1,"subgroup":18,"version":1,"tone":4},{"label":"backhand index pointing down: dark skin tone","hexcode":"1F447-1F3FF","emoji":"👇🏿","text":"","type":1,"order":337,"group":1,"subgroup":18,"version":1,"tone":5}]},{"label":"index pointing up","hexcode":"261D","tags":["finger","hand","index","point","pointing","this","up"],"emoji":"☝️","text":"☝︎","type":0,"order":339,"group":1,"subgroup":18,"version":0.6,"skins":[{"label":"index pointing up: light skin tone","hexcode":"261D-1F3FB","emoji":"☝🏻","text":"","type":1,"order":340,"group":1,"subgroup":18,"version":1,"tone":1},{"label":"index pointing up: medium-light skin tone","hexcode":"261D-1F3FC","emoji":"☝🏼","text":"","type":1,"order":341,"group":1,"subgroup":18,"version":1,"tone":2},{"label":"index pointing up: medium skin tone","hexcode":"261D-1F3FD","emoji":"☝🏽","text":"","type":1,"order":342,"group":1,"subgroup":18,"version":1,"tone":3},{"label":"index pointing up: medium-dark skin tone","hexcode":"261D-1F3FE","emoji":"☝🏾","text":"","type":1,"order":343,"group":1,"subgroup":18,"version":1,"tone":4},{"label":"index pointing up: dark skin tone","hexcode":"261D-1F3FF","emoji":"☝🏿","text":"","type":1,"order":344,"group":1,"subgroup":18,"version":1,"tone":5}]},{"label":"index pointing at the viewer","hexcode":"1FAF5","tags":["at","finger","hand","index","pointing","poke","viewer","you"],"emoji":"🫵","text":"","type":1,"order":345,"group":1,"subgroup":18,"version":14,"skins":[{"label":"index pointing at the viewer: light skin tone","hexcode":"1FAF5-1F3FB","emoji":"🫵🏻","text":"","type":1,"order":346,"group":1,"subgroup":18,"version":14,"tone":1},{"label":"index pointing at the viewer: medium-light skin tone","hexcode":"1FAF5-1F3FC","emoji":"🫵🏼","text":"","type":1,"order":347,"group":1,"subgroup":18,"version":14,"tone":2},{"label":"index pointing at the viewer: medium skin tone","hexcode":"1FAF5-1F3FD","emoji":"🫵🏽","text":"","type":1,"order":348,"group":1,"subgroup":18,"version":14,"tone":3},{"label":"index pointing at the viewer: medium-dark skin tone","hexcode":"1FAF5-1F3FE","emoji":"🫵🏾","text":"","type":1,"order":349,"group":1,"subgroup":18,"version":14,"tone":4},{"label":"index pointing at the viewer: dark skin tone","hexcode":"1FAF5-1F3FF","emoji":"🫵🏿","text":"","type":1,"order":350,"group":1,"subgroup":18,"version":14,"tone":5}]},{"label":"thumbs up","hexcode":"1F44D","tags":["+1","good","hand","like","thumb","up","yes"],"emoji":"👍️","text":"👍︎","type":1,"order":351,"group":1,"subgroup":19,"version":0.6,"skins":[{"label":"thumbs up: light skin tone","hexcode":"1F44D-1F3FB","emoji":"👍🏻","text":"","type":1,"order":352,"group":1,"subgroup":19,"version":1,"tone":1},{"label":"thumbs up: medium-light skin tone","hexcode":"1F44D-1F3FC","emoji":"👍🏼","text":"","type":1,"order":353,"group":1,"subgroup":19,"version":1,"tone":2},{"label":"thumbs up: medium skin tone","hexcode":"1F44D-1F3FD","emoji":"👍🏽","text":"","type":1,"order":354,"group":1,"subgroup":19,"version":1,"tone":3},{"label":"thumbs up: medium-dark skin tone","hexcode":"1F44D-1F3FE","emoji":"👍🏾","text":"","type":1,"order":355,"group":1,"subgroup":19,"version":1,"tone":4},{"label":"thumbs up: dark skin tone","hexcode":"1F44D-1F3FF","emoji":"👍🏿","text":"","type":1,"order":356,"group":1,"subgroup":19,"version":1,"tone":5}]},{"label":"thumbs down","hexcode":"1F44E","tags":["-1","bad","dislike","down","good","hand","no","nope","thumb","thumbs"],"emoji":"👎️","text":"👎︎","type":1,"order":357,"group":1,"subgroup":19,"version":0.6,"skins":[{"label":"thumbs down: light skin tone","hexcode":"1F44E-1F3FB","emoji":"👎🏻","text":"","type":1,"order":358,"group":1,"subgroup":19,"version":1,"tone":1},{"label":"thumbs down: medium-light skin tone","hexcode":"1F44E-1F3FC","emoji":"👎🏼","text":"","type":1,"order":359,"group":1,"subgroup":19,"version":1,"tone":2},{"label":"thumbs down: medium skin tone","hexcode":"1F44E-1F3FD","emoji":"👎🏽","text":"","type":1,"order":360,"group":1,"subgroup":19,"version":1,"tone":3},{"label":"thumbs down: medium-dark skin tone","hexcode":"1F44E-1F3FE","emoji":"👎🏾","text":"","type":1,"order":361,"group":1,"subgroup":19,"version":1,"tone":4},{"label":"thumbs down: dark skin tone","hexcode":"1F44E-1F3FF","emoji":"👎🏿","text":"","type":1,"order":362,"group":1,"subgroup":19,"version":1,"tone":5}]},{"label":"raised fist","hexcode":"270A","tags":["clenched","fist","hand","punch","raised","solidarity"],"emoji":"✊️","text":"✊︎","type":1,"order":363,"group":1,"subgroup":19,"version":0.6,"skins":[{"label":"raised fist: light skin tone","hexcode":"270A-1F3FB","emoji":"✊🏻","text":"","type":1,"order":364,"group":1,"subgroup":19,"version":1,"tone":1},{"label":"raised fist: medium-light skin tone","hexcode":"270A-1F3FC","emoji":"✊🏼","text":"","type":1,"order":365,"group":1,"subgroup":19,"version":1,"tone":2},{"label":"raised fist: medium skin tone","hexcode":"270A-1F3FD","emoji":"✊🏽","text":"","type":1,"order":366,"group":1,"subgroup":19,"version":1,"tone":3},{"label":"raised fist: medium-dark skin tone","hexcode":"270A-1F3FE","emoji":"✊🏾","text":"","type":1,"order":367,"group":1,"subgroup":19,"version":1,"tone":4},{"label":"raised fist: dark skin tone","hexcode":"270A-1F3FF","emoji":"✊🏿","text":"","type":1,"order":368,"group":1,"subgroup":19,"version":1,"tone":5}]},{"label":"oncoming fist","hexcode":"1F44A","tags":["absolutely","agree","boom","bro","bruh","bump","clenched","correct","fist","hand","knuckle","oncoming","pound","punch","rock","ttyl"],"emoji":"👊","text":"","type":1,"order":369,"group":1,"subgroup":19,"version":0.6,"skins":[{"label":"oncoming fist: light skin tone","hexcode":"1F44A-1F3FB","emoji":"👊🏻","text":"","type":1,"order":370,"group":1,"subgroup":19,"version":1,"tone":1},{"label":"oncoming fist: medium-light skin tone","hexcode":"1F44A-1F3FC","emoji":"👊🏼","text":"","type":1,"order":371,"group":1,"subgroup":19,"version":1,"tone":2},{"label":"oncoming fist: medium skin tone","hexcode":"1F44A-1F3FD","emoji":"👊🏽","text":"","type":1,"order":372,"group":1,"subgroup":19,"version":1,"tone":3},{"label":"oncoming fist: medium-dark skin tone","hexcode":"1F44A-1F3FE","emoji":"👊🏾","text":"","type":1,"order":373,"group":1,"subgroup":19,"version":1,"tone":4},{"label":"oncoming fist: dark skin tone","hexcode":"1F44A-1F3FF","emoji":"👊🏿","text":"","type":1,"order":374,"group":1,"subgroup":19,"version":1,"tone":5}]},{"label":"left-facing fist","hexcode":"1F91B","tags":["fist","left-facing","leftwards"],"emoji":"🤛","text":"","type":1,"order":375,"group":1,"subgroup":19,"version":3,"skins":[{"label":"left-facing fist: light skin tone","hexcode":"1F91B-1F3FB","emoji":"🤛🏻","text":"","type":1,"order":376,"group":1,"subgroup":19,"version":3,"tone":1},{"label":"left-facing fist: medium-light skin tone","hexcode":"1F91B-1F3FC","emoji":"🤛🏼","text":"","type":1,"order":377,"group":1,"subgroup":19,"version":3,"tone":2},{"label":"left-facing fist: medium skin tone","hexcode":"1F91B-1F3FD","emoji":"🤛🏽","text":"","type":1,"order":378,"group":1,"subgroup":19,"version":3,"tone":3},{"label":"left-facing fist: medium-dark skin tone","hexcode":"1F91B-1F3FE","emoji":"🤛🏾","text":"","type":1,"order":379,"group":1,"subgroup":19,"version":3,"tone":4},{"label":"left-facing fist: dark skin tone","hexcode":"1F91B-1F3FF","emoji":"🤛🏿","text":"","type":1,"order":380,"group":1,"subgroup":19,"version":3,"tone":5}]},{"label":"right-facing fist","hexcode":"1F91C","tags":["fist","right-facing","rightwards"],"emoji":"🤜","text":"","type":1,"order":381,"group":1,"subgroup":19,"version":3,"skins":[{"label":"right-facing fist: light skin tone","hexcode":"1F91C-1F3FB","emoji":"🤜🏻","text":"","type":1,"order":382,"group":1,"subgroup":19,"version":3,"tone":1},{"label":"right-facing fist: medium-light skin tone","hexcode":"1F91C-1F3FC","emoji":"🤜🏼","text":"","type":1,"order":383,"group":1,"subgroup":19,"version":3,"tone":2},{"label":"right-facing fist: medium skin tone","hexcode":"1F91C-1F3FD","emoji":"🤜🏽","text":"","type":1,"order":384,"group":1,"subgroup":19,"version":3,"tone":3},{"label":"right-facing fist: medium-dark skin tone","hexcode":"1F91C-1F3FE","emoji":"🤜🏾","text":"","type":1,"order":385,"group":1,"subgroup":19,"version":3,"tone":4},{"label":"right-facing fist: dark skin tone","hexcode":"1F91C-1F3FF","emoji":"🤜🏿","text":"","type":1,"order":386,"group":1,"subgroup":19,"version":3,"tone":5}]},{"label":"clapping hands","hexcode":"1F44F","tags":["applause","approval","awesome","clap","congrats","congratulations","excited","good","great","hand","homie","job","nice","prayed","well","yay"],"emoji":"👏","text":"","type":1,"order":387,"group":1,"subgroup":20,"version":0.6,"skins":[{"label":"clapping hands: light skin tone","hexcode":"1F44F-1F3FB","emoji":"👏🏻","text":"","type":1,"order":388,"group":1,"subgroup":20,"version":1,"tone":1},{"label":"clapping hands: medium-light skin tone","hexcode":"1F44F-1F3FC","emoji":"👏🏼","text":"","type":1,"order":389,"group":1,"subgroup":20,"version":1,"tone":2},{"label":"clapping hands: medium skin tone","hexcode":"1F44F-1F3FD","emoji":"👏🏽","text":"","type":1,"order":390,"group":1,"subgroup":20,"version":1,"tone":3},{"label":"clapping hands: medium-dark skin tone","hexcode":"1F44F-1F3FE","emoji":"👏🏾","text":"","type":1,"order":391,"group":1,"subgroup":20,"version":1,"tone":4},{"label":"clapping hands: dark skin tone","hexcode":"1F44F-1F3FF","emoji":"👏🏿","text":"","type":1,"order":392,"group":1,"subgroup":20,"version":1,"tone":5}]},{"label":"raising hands","hexcode":"1F64C","tags":["celebration","gesture","hand","hands","hooray","praise","raised","raising"],"emoji":"🙌","text":"","type":1,"order":393,"group":1,"subgroup":20,"version":0.6,"skins":[{"label":"raising hands: light skin tone","hexcode":"1F64C-1F3FB","emoji":"🙌🏻","text":"","type":1,"order":394,"group":1,"subgroup":20,"version":1,"tone":1},{"label":"raising hands: medium-light skin tone","hexcode":"1F64C-1F3FC","emoji":"🙌🏼","text":"","type":1,"order":395,"group":1,"subgroup":20,"version":1,"tone":2},{"label":"raising hands: medium skin tone","hexcode":"1F64C-1F3FD","emoji":"🙌🏽","text":"","type":1,"order":396,"group":1,"subgroup":20,"version":1,"tone":3},{"label":"raising hands: medium-dark skin tone","hexcode":"1F64C-1F3FE","emoji":"🙌🏾","text":"","type":1,"order":397,"group":1,"subgroup":20,"version":1,"tone":4},{"label":"raising hands: dark skin tone","hexcode":"1F64C-1F3FF","emoji":"🙌🏿","text":"","type":1,"order":398,"group":1,"subgroup":20,"version":1,"tone":5}]},{"label":"heart hands","hexcode":"1FAF6","tags":["<3","hands","heart","love","you"],"emoji":"🫶","text":"","type":1,"order":399,"group":1,"subgroup":20,"version":14,"skins":[{"label":"heart hands: light skin tone","hexcode":"1FAF6-1F3FB","emoji":"🫶🏻","text":"","type":1,"order":400,"group":1,"subgroup":20,"version":14,"tone":1},{"label":"heart hands: medium-light skin tone","hexcode":"1FAF6-1F3FC","emoji":"🫶🏼","text":"","type":1,"order":401,"group":1,"subgroup":20,"version":14,"tone":2},{"label":"heart hands: medium skin tone","hexcode":"1FAF6-1F3FD","emoji":"🫶🏽","text":"","type":1,"order":402,"group":1,"subgroup":20,"version":14,"tone":3},{"label":"heart hands: medium-dark skin tone","hexcode":"1FAF6-1F3FE","emoji":"🫶🏾","text":"","type":1,"order":403,"group":1,"subgroup":20,"version":14,"tone":4},{"label":"heart hands: dark skin tone","hexcode":"1FAF6-1F3FF","emoji":"🫶🏿","text":"","type":1,"order":404,"group":1,"subgroup":20,"version":14,"tone":5}]},{"label":"open hands","hexcode":"1F450","tags":["hand","hands","hug","jazz","open","swerve"],"emoji":"👐","text":"","type":1,"order":405,"group":1,"subgroup":20,"version":0.6,"skins":[{"label":"open hands: light skin tone","hexcode":"1F450-1F3FB","emoji":"👐🏻","text":"","type":1,"order":406,"group":1,"subgroup":20,"version":1,"tone":1},{"label":"open hands: medium-light skin tone","hexcode":"1F450-1F3FC","emoji":"👐🏼","text":"","type":1,"order":407,"group":1,"subgroup":20,"version":1,"tone":2},{"label":"open hands: medium skin tone","hexcode":"1F450-1F3FD","emoji":"👐🏽","text":"","type":1,"order":408,"group":1,"subgroup":20,"version":1,"tone":3},{"label":"open hands: medium-dark skin tone","hexcode":"1F450-1F3FE","emoji":"👐🏾","text":"","type":1,"order":409,"group":1,"subgroup":20,"version":1,"tone":4},{"label":"open hands: dark skin tone","hexcode":"1F450-1F3FF","emoji":"👐🏿","text":"","type":1,"order":410,"group":1,"subgroup":20,"version":1,"tone":5}]},{"label":"palms up together","hexcode":"1F932","tags":["cupped","dua","hands","palms","pray","prayer","together","up","wish"],"emoji":"🤲","text":"","type":1,"order":411,"group":1,"subgroup":20,"version":5,"skins":[{"label":"palms up together: light skin tone","hexcode":"1F932-1F3FB","emoji":"🤲🏻","text":"","type":1,"order":412,"group":1,"subgroup":20,"version":5,"tone":1},{"label":"palms up together: medium-light skin tone","hexcode":"1F932-1F3FC","emoji":"🤲🏼","text":"","type":1,"order":413,"group":1,"subgroup":20,"version":5,"tone":2},{"label":"palms up together: medium skin tone","hexcode":"1F932-1F3FD","emoji":"🤲🏽","text":"","type":1,"order":414,"group":1,"subgroup":20,"version":5,"tone":3},{"label":"palms up together: medium-dark skin tone","hexcode":"1F932-1F3FE","emoji":"🤲🏾","text":"","type":1,"order":415,"group":1,"subgroup":20,"version":5,"tone":4},{"label":"palms up together: dark skin tone","hexcode":"1F932-1F3FF","emoji":"🤲🏿","text":"","type":1,"order":416,"group":1,"subgroup":20,"version":5,"tone":5}]},{"label":"handshake","hexcode":"1F91D","tags":["agreement","deal","hand","meeting","shake"],"emoji":"🤝","text":"","type":1,"order":417,"group":1,"subgroup":20,"version":3,"skins":[{"label":"handshake: light skin tone","hexcode":"1F91D-1F3FB","emoji":"🤝🏻","text":"","type":1,"order":418,"group":1,"subgroup":20,"version":14,"tone":1},{"label":"handshake: medium-light skin tone","hexcode":"1F91D-1F3FC","emoji":"🤝🏼","text":"","type":1,"order":419,"group":1,"subgroup":20,"version":14,"tone":2},{"label":"handshake: medium skin tone","hexcode":"1F91D-1F3FD","emoji":"🤝🏽","text":"","type":1,"order":420,"group":1,"subgroup":20,"version":14,"tone":3},{"label":"handshake: medium-dark skin tone","hexcode":"1F91D-1F3FE","emoji":"🤝🏾","text":"","type":1,"order":421,"group":1,"subgroup":20,"version":14,"tone":4},{"label":"handshake: dark skin tone","hexcode":"1F91D-1F3FF","emoji":"🤝🏿","text":"","type":1,"order":422,"group":1,"subgroup":20,"version":14,"tone":5},{"label":"handshake: light skin tone, medium-light skin tone","hexcode":"1FAF1-1F3FB-200D-1FAF2-1F3FC","emoji":"🫱🏻‍🫲🏼","text":"","type":1,"order":423,"group":1,"subgroup":20,"version":14,"tone":[1,2]},{"label":"handshake: light skin tone, medium skin tone","hexcode":"1FAF1-1F3FB-200D-1FAF2-1F3FD","emoji":"🫱🏻‍🫲🏽","text":"","type":1,"order":424,"group":1,"subgroup":20,"version":14,"tone":[1,3]},{"label":"handshake: light skin tone, medium-dark skin tone","hexcode":"1FAF1-1F3FB-200D-1FAF2-1F3FE","emoji":"🫱🏻‍🫲🏾","text":"","type":1,"order":425,"group":1,"subgroup":20,"version":14,"tone":[1,4]},{"label":"handshake: light skin tone, dark skin tone","hexcode":"1FAF1-1F3FB-200D-1FAF2-1F3FF","emoji":"🫱🏻‍🫲🏿","text":"","type":1,"order":426,"group":1,"subgroup":20,"version":14,"tone":[1,5]},{"label":"handshake: medium-light skin tone, light skin tone","hexcode":"1FAF1-1F3FC-200D-1FAF2-1F3FB","emoji":"🫱🏼‍🫲🏻","text":"","type":1,"order":427,"group":1,"subgroup":20,"version":14,"tone":[2,1]},{"label":"handshake: medium-light skin tone, medium skin tone","hexcode":"1FAF1-1F3FC-200D-1FAF2-1F3FD","emoji":"🫱🏼‍🫲🏽","text":"","type":1,"order":428,"group":1,"subgroup":20,"version":14,"tone":[2,3]},{"label":"handshake: medium-light skin tone, medium-dark skin tone","hexcode":"1FAF1-1F3FC-200D-1FAF2-1F3FE","emoji":"🫱🏼‍🫲🏾","text":"","type":1,"order":429,"group":1,"subgroup":20,"version":14,"tone":[2,4]},{"label":"handshake: medium-light skin tone, dark skin tone","hexcode":"1FAF1-1F3FC-200D-1FAF2-1F3FF","emoji":"🫱🏼‍🫲🏿","text":"","type":1,"order":430,"group":1,"subgroup":20,"version":14,"tone":[2,5]},{"label":"handshake: medium skin tone, light skin tone","hexcode":"1FAF1-1F3FD-200D-1FAF2-1F3FB","emoji":"🫱🏽‍🫲🏻","text":"","type":1,"order":431,"group":1,"subgroup":20,"version":14,"tone":[3,1]},{"label":"handshake: medium skin tone, medium-light skin tone","hexcode":"1FAF1-1F3FD-200D-1FAF2-1F3FC","emoji":"🫱🏽‍🫲🏼","text":"","type":1,"order":432,"group":1,"subgroup":20,"version":14,"tone":[3,2]},{"label":"handshake: medium skin tone, medium-dark skin tone","hexcode":"1FAF1-1F3FD-200D-1FAF2-1F3FE","emoji":"🫱🏽‍🫲🏾","text":"","type":1,"order":433,"group":1,"subgroup":20,"version":14,"tone":[3,4]},{"label":"handshake: medium skin tone, dark skin tone","hexcode":"1FAF1-1F3FD-200D-1FAF2-1F3FF","emoji":"🫱🏽‍🫲🏿","text":"","type":1,"order":434,"group":1,"subgroup":20,"version":14,"tone":[3,5]},{"label":"handshake: medium-dark skin tone, light skin tone","hexcode":"1FAF1-1F3FE-200D-1FAF2-1F3FB","emoji":"🫱🏾‍🫲🏻","text":"","type":1,"order":435,"group":1,"subgroup":20,"version":14,"tone":[4,1]},{"label":"handshake: medium-dark skin tone, medium-light skin tone","hexcode":"1FAF1-1F3FE-200D-1FAF2-1F3FC","emoji":"🫱🏾‍🫲🏼","text":"","type":1,"order":436,"group":1,"subgroup":20,"version":14,"tone":[4,2]},{"label":"handshake: medium-dark skin tone, medium skin tone","hexcode":"1FAF1-1F3FE-200D-1FAF2-1F3FD","emoji":"🫱🏾‍🫲🏽","text":"","type":1,"order":437,"group":1,"subgroup":20,"version":14,"tone":[4,3]},{"label":"handshake: medium-dark skin tone, dark skin tone","hexcode":"1FAF1-1F3FE-200D-1FAF2-1F3FF","emoji":"🫱🏾‍🫲🏿","text":"","type":1,"order":438,"group":1,"subgroup":20,"version":14,"tone":[4,5]},{"label":"handshake: dark skin tone, light skin tone","hexcode":"1FAF1-1F3FF-200D-1FAF2-1F3FB","emoji":"🫱🏿‍🫲🏻","text":"","type":1,"order":439,"group":1,"subgroup":20,"version":14,"tone":[5,1]},{"label":"handshake: dark skin tone, medium-light skin tone","hexcode":"1FAF1-1F3FF-200D-1FAF2-1F3FC","emoji":"🫱🏿‍🫲🏼","text":"","type":1,"order":440,"group":1,"subgroup":20,"version":14,"tone":[5,2]},{"label":"handshake: dark skin tone, medium skin tone","hexcode":"1FAF1-1F3FF-200D-1FAF2-1F3FD","emoji":"🫱🏿‍🫲🏽","text":"","type":1,"order":441,"group":1,"subgroup":20,"version":14,"tone":[5,3]},{"label":"handshake: dark skin tone, medium-dark skin tone","hexcode":"1FAF1-1F3FF-200D-1FAF2-1F3FE","emoji":"🫱🏿‍🫲🏾","text":"","type":1,"order":442,"group":1,"subgroup":20,"version":14,"tone":[5,4]}]},{"label":"folded hands","hexcode":"1F64F","tags":["appreciate","ask","beg","blessed","bow","cmon","five","folded","gesture","hand","high","please","pray","thanks","thx"],"emoji":"🙏","text":"","type":1,"order":443,"group":1,"subgroup":20,"version":0.6,"skins":[{"label":"folded hands: light skin tone","hexcode":"1F64F-1F3FB","emoji":"🙏🏻","text":"","type":1,"order":444,"group":1,"subgroup":20,"version":1,"tone":1},{"label":"folded hands: medium-light skin tone","hexcode":"1F64F-1F3FC","emoji":"🙏🏼","text":"","type":1,"order":445,"group":1,"subgroup":20,"version":1,"tone":2},{"label":"folded hands: medium skin tone","hexcode":"1F64F-1F3FD","emoji":"🙏🏽","text":"","type":1,"order":446,"group":1,"subgroup":20,"version":1,"tone":3},{"label":"folded hands: medium-dark skin tone","hexcode":"1F64F-1F3FE","emoji":"🙏🏾","text":"","type":1,"order":447,"group":1,"subgroup":20,"version":1,"tone":4},{"label":"folded hands: dark skin tone","hexcode":"1F64F-1F3FF","emoji":"🙏🏿","text":"","type":1,"order":448,"group":1,"subgroup":20,"version":1,"tone":5}]},{"label":"writing hand","hexcode":"270D","tags":["hand","write","writing"],"emoji":"✍️","text":"✍︎","type":0,"order":450,"group":1,"subgroup":21,"version":0.7,"skins":[{"label":"writing hand: light skin tone","hexcode":"270D-1F3FB","emoji":"✍🏻","text":"","type":1,"order":451,"group":1,"subgroup":21,"version":1,"tone":1},{"label":"writing hand: medium-light skin tone","hexcode":"270D-1F3FC","emoji":"✍🏼","text":"","type":1,"order":452,"group":1,"subgroup":21,"version":1,"tone":2},{"label":"writing hand: medium skin tone","hexcode":"270D-1F3FD","emoji":"✍🏽","text":"","type":1,"order":453,"group":1,"subgroup":21,"version":1,"tone":3},{"label":"writing hand: medium-dark skin tone","hexcode":"270D-1F3FE","emoji":"✍🏾","text":"","type":1,"order":454,"group":1,"subgroup":21,"version":1,"tone":4},{"label":"writing hand: dark skin tone","hexcode":"270D-1F3FF","emoji":"✍🏿","text":"","type":1,"order":455,"group":1,"subgroup":21,"version":1,"tone":5}]},{"label":"nail polish","hexcode":"1F485","tags":["bored","care","cosmetics","done","makeup","manicure","nail","polish","whatever"],"emoji":"💅","text":"","type":1,"order":456,"group":1,"subgroup":21,"version":0.6,"skins":[{"label":"nail polish: light skin tone","hexcode":"1F485-1F3FB","emoji":"💅🏻","text":"","type":1,"order":457,"group":1,"subgroup":21,"version":1,"tone":1},{"label":"nail polish: medium-light skin tone","hexcode":"1F485-1F3FC","emoji":"💅🏼","text":"","type":1,"order":458,"group":1,"subgroup":21,"version":1,"tone":2},{"label":"nail polish: medium skin tone","hexcode":"1F485-1F3FD","emoji":"💅🏽","text":"","type":1,"order":459,"group":1,"subgroup":21,"version":1,"tone":3},{"label":"nail polish: medium-dark skin tone","hexcode":"1F485-1F3FE","emoji":"💅🏾","text":"","type":1,"order":460,"group":1,"subgroup":21,"version":1,"tone":4},{"label":"nail polish: dark skin tone","hexcode":"1F485-1F3FF","emoji":"💅🏿","text":"","type":1,"order":461,"group":1,"subgroup":21,"version":1,"tone":5}]},{"label":"selfie","hexcode":"1F933","tags":["camera","phone"],"emoji":"🤳","text":"","type":1,"order":462,"group":1,"subgroup":21,"version":3,"skins":[{"label":"selfie: light skin tone","hexcode":"1F933-1F3FB","emoji":"🤳🏻","text":"","type":1,"order":463,"group":1,"subgroup":21,"version":3,"tone":1},{"label":"selfie: medium-light skin tone","hexcode":"1F933-1F3FC","emoji":"🤳🏼","text":"","type":1,"order":464,"group":1,"subgroup":21,"version":3,"tone":2},{"label":"selfie: medium skin tone","hexcode":"1F933-1F3FD","emoji":"🤳🏽","text":"","type":1,"order":465,"group":1,"subgroup":21,"version":3,"tone":3},{"label":"selfie: medium-dark skin tone","hexcode":"1F933-1F3FE","emoji":"🤳🏾","text":"","type":1,"order":466,"group":1,"subgroup":21,"version":3,"tone":4},{"label":"selfie: dark skin tone","hexcode":"1F933-1F3FF","emoji":"🤳🏿","text":"","type":1,"order":467,"group":1,"subgroup":21,"version":3,"tone":5}]},{"label":"flexed biceps","hexcode":"1F4AA","tags":["arm","beast","bench","biceps","bodybuilder","bro","curls","flex","gains","gym","jacked","muscle","press","ripped","strong","weightlift"],"emoji":"💪","text":"","type":1,"order":468,"group":1,"subgroup":22,"version":0.6,"skins":[{"label":"flexed biceps: light skin tone","hexcode":"1F4AA-1F3FB","emoji":"💪🏻","text":"","type":1,"order":469,"group":1,"subgroup":22,"version":1,"tone":1},{"label":"flexed biceps: medium-light skin tone","hexcode":"1F4AA-1F3FC","emoji":"💪🏼","text":"","type":1,"order":470,"group":1,"subgroup":22,"version":1,"tone":2},{"label":"flexed biceps: medium skin tone","hexcode":"1F4AA-1F3FD","emoji":"💪🏽","text":"","type":1,"order":471,"group":1,"subgroup":22,"version":1,"tone":3},{"label":"flexed biceps: medium-dark skin tone","hexcode":"1F4AA-1F3FE","emoji":"💪🏾","text":"","type":1,"order":472,"group":1,"subgroup":22,"version":1,"tone":4},{"label":"flexed biceps: dark skin tone","hexcode":"1F4AA-1F3FF","emoji":"💪🏿","text":"","type":1,"order":473,"group":1,"subgroup":22,"version":1,"tone":5}]},{"label":"mechanical arm","hexcode":"1F9BE","tags":["accessibility","arm","mechanical","prosthetic"],"emoji":"🦾","text":"","type":1,"order":474,"group":1,"subgroup":22,"version":12},{"label":"mechanical leg","hexcode":"1F9BF","tags":["accessibility","leg","mechanical","prosthetic"],"emoji":"🦿","text":"","type":1,"order":475,"group":1,"subgroup":22,"version":12},{"label":"leg","hexcode":"1F9B5","tags":["bent","foot","kick","knee","limb"],"emoji":"🦵","text":"","type":1,"order":476,"group":1,"subgroup":22,"version":11,"skins":[{"label":"leg: light skin tone","hexcode":"1F9B5-1F3FB","emoji":"🦵🏻","text":"","type":1,"order":477,"group":1,"subgroup":22,"version":11,"tone":1},{"label":"leg: medium-light skin tone","hexcode":"1F9B5-1F3FC","emoji":"🦵🏼","text":"","type":1,"order":478,"group":1,"subgroup":22,"version":11,"tone":2},{"label":"leg: medium skin tone","hexcode":"1F9B5-1F3FD","emoji":"🦵🏽","text":"","type":1,"order":479,"group":1,"subgroup":22,"version":11,"tone":3},{"label":"leg: medium-dark skin tone","hexcode":"1F9B5-1F3FE","emoji":"🦵🏾","text":"","type":1,"order":480,"group":1,"subgroup":22,"version":11,"tone":4},{"label":"leg: dark skin tone","hexcode":"1F9B5-1F3FF","emoji":"🦵🏿","text":"","type":1,"order":481,"group":1,"subgroup":22,"version":11,"tone":5}]},{"label":"foot","hexcode":"1F9B6","tags":["ankle","feet","kick","stomp"],"emoji":"🦶","text":"","type":1,"order":482,"group":1,"subgroup":22,"version":11,"skins":[{"label":"foot: light skin tone","hexcode":"1F9B6-1F3FB","emoji":"🦶🏻","text":"","type":1,"order":483,"group":1,"subgroup":22,"version":11,"tone":1},{"label":"foot: medium-light skin tone","hexcode":"1F9B6-1F3FC","emoji":"🦶🏼","text":"","type":1,"order":484,"group":1,"subgroup":22,"version":11,"tone":2},{"label":"foot: medium skin tone","hexcode":"1F9B6-1F3FD","emoji":"🦶🏽","text":"","type":1,"order":485,"group":1,"subgroup":22,"version":11,"tone":3},{"label":"foot: medium-dark skin tone","hexcode":"1F9B6-1F3FE","emoji":"🦶🏾","text":"","type":1,"order":486,"group":1,"subgroup":22,"version":11,"tone":4},{"label":"foot: dark skin tone","hexcode":"1F9B6-1F3FF","emoji":"🦶🏿","text":"","type":1,"order":487,"group":1,"subgroup":22,"version":11,"tone":5}]},{"label":"ear","hexcode":"1F442","tags":["body","ears","hear","hearing","listen","listening","sound"],"emoji":"👂️","text":"👂︎","type":1,"order":488,"group":1,"subgroup":22,"version":0.6,"skins":[{"label":"ear: light skin tone","hexcode":"1F442-1F3FB","emoji":"👂🏻","text":"","type":1,"order":489,"group":1,"subgroup":22,"version":1,"tone":1},{"label":"ear: medium-light skin tone","hexcode":"1F442-1F3FC","emoji":"👂🏼","text":"","type":1,"order":490,"group":1,"subgroup":22,"version":1,"tone":2},{"label":"ear: medium skin tone","hexcode":"1F442-1F3FD","emoji":"👂🏽","text":"","type":1,"order":491,"group":1,"subgroup":22,"version":1,"tone":3},{"label":"ear: medium-dark skin tone","hexcode":"1F442-1F3FE","emoji":"👂🏾","text":"","type":1,"order":492,"group":1,"subgroup":22,"version":1,"tone":4},{"label":"ear: dark skin tone","hexcode":"1F442-1F3FF","emoji":"👂🏿","text":"","type":1,"order":493,"group":1,"subgroup":22,"version":1,"tone":5}]},{"label":"ear with hearing aid","hexcode":"1F9BB","tags":["accessibility","aid","ear","hard","hearing"],"emoji":"🦻","text":"","type":1,"order":494,"group":1,"subgroup":22,"version":12,"skins":[{"label":"ear with hearing aid: light skin tone","hexcode":"1F9BB-1F3FB","emoji":"🦻🏻","text":"","type":1,"order":495,"group":1,"subgroup":22,"version":12,"tone":1},{"label":"ear with hearing aid: medium-light skin tone","hexcode":"1F9BB-1F3FC","emoji":"🦻🏼","text":"","type":1,"order":496,"group":1,"subgroup":22,"version":12,"tone":2},{"label":"ear with hearing aid: medium skin tone","hexcode":"1F9BB-1F3FD","emoji":"🦻🏽","text":"","type":1,"order":497,"group":1,"subgroup":22,"version":12,"tone":3},{"label":"ear with hearing aid: medium-dark skin tone","hexcode":"1F9BB-1F3FE","emoji":"🦻🏾","text":"","type":1,"order":498,"group":1,"subgroup":22,"version":12,"tone":4},{"label":"ear with hearing aid: dark skin tone","hexcode":"1F9BB-1F3FF","emoji":"🦻🏿","text":"","type":1,"order":499,"group":1,"subgroup":22,"version":12,"tone":5}]},{"label":"nose","hexcode":"1F443","tags":["body","noses","nosey","odor","smell","smells"],"emoji":"👃","text":"","type":1,"order":500,"group":1,"subgroup":22,"version":0.6,"skins":[{"label":"nose: light skin tone","hexcode":"1F443-1F3FB","emoji":"👃🏻","text":"","type":1,"order":501,"group":1,"subgroup":22,"version":1,"tone":1},{"label":"nose: medium-light skin tone","hexcode":"1F443-1F3FC","emoji":"👃🏼","text":"","type":1,"order":502,"group":1,"subgroup":22,"version":1,"tone":2},{"label":"nose: medium skin tone","hexcode":"1F443-1F3FD","emoji":"👃🏽","text":"","type":1,"order":503,"group":1,"subgroup":22,"version":1,"tone":3},{"label":"nose: medium-dark skin tone","hexcode":"1F443-1F3FE","emoji":"👃🏾","text":"","type":1,"order":504,"group":1,"subgroup":22,"version":1,"tone":4},{"label":"nose: dark skin tone","hexcode":"1F443-1F3FF","emoji":"👃🏿","text":"","type":1,"order":505,"group":1,"subgroup":22,"version":1,"tone":5}]},{"label":"brain","hexcode":"1F9E0","tags":["intelligent","smart"],"emoji":"🧠","text":"","type":1,"order":506,"group":1,"subgroup":22,"version":5},{"label":"anatomical heart","hexcode":"1FAC0","tags":["anatomical","beat","cardiology","heart","heartbeat","organ","pulse","real","red"],"emoji":"🫀","text":"","type":1,"order":507,"group":1,"subgroup":22,"version":13},{"label":"lungs","hexcode":"1FAC1","tags":["breath","breathe","exhalation","inhalation","lung","organ","respiration"],"emoji":"🫁","text":"","type":1,"order":508,"group":1,"subgroup":22,"version":13},{"label":"tooth","hexcode":"1F9B7","tags":["dentist","pearly","teeth","white"],"emoji":"🦷","text":"","type":1,"order":509,"group":1,"subgroup":22,"version":11},{"label":"bone","hexcode":"1F9B4","tags":["bones","dog","skeleton","wishbone"],"emoji":"🦴","text":"","type":1,"order":510,"group":1,"subgroup":22,"version":11},{"label":"eyes","hexcode":"1F440","tags":["body","eye","face","googly","look","looking","omg","peep","see","seeing"],"emoji":"👀","text":"","type":1,"order":511,"group":1,"subgroup":22,"version":0.6},{"label":"eye","hexcode":"1F441","tags":["1","body","one"],"emoji":"👁️","text":"👁︎","type":0,"order":513,"group":1,"subgroup":22,"version":0.7},{"label":"tongue","hexcode":"1F445","tags":["body","lick","slurp"],"emoji":"👅","text":"","type":1,"order":514,"group":1,"subgroup":22,"version":0.6},{"label":"mouth","hexcode":"1F444","tags":["beauty","body","kiss","kissing","lips","lipstick"],"emoji":"👄","text":"","type":1,"order":515,"group":1,"subgroup":22,"version":0.6},{"label":"biting lip","hexcode":"1FAE6","tags":["anxious","bite","biting","fear","flirt","flirting","kiss","lip","lipstick","nervous","sexy","uncomfortable","worried","worry"],"emoji":"🫦","text":"","type":1,"order":516,"group":1,"subgroup":22,"version":14},{"label":"baby","hexcode":"1F476","tags":["babies","children","goo","infant","newborn","pregnant","young"],"emoji":"👶","text":"","type":1,"order":517,"group":1,"subgroup":23,"version":0.6,"skins":[{"label":"baby: light skin tone","hexcode":"1F476-1F3FB","emoji":"👶🏻","text":"","type":1,"order":518,"group":1,"subgroup":23,"version":1,"tone":1},{"label":"baby: medium-light skin tone","hexcode":"1F476-1F3FC","emoji":"👶🏼","text":"","type":1,"order":519,"group":1,"subgroup":23,"version":1,"tone":2},{"label":"baby: medium skin tone","hexcode":"1F476-1F3FD","emoji":"👶🏽","text":"","type":1,"order":520,"group":1,"subgroup":23,"version":1,"tone":3},{"label":"baby: medium-dark skin tone","hexcode":"1F476-1F3FE","emoji":"👶🏾","text":"","type":1,"order":521,"group":1,"subgroup":23,"version":1,"tone":4},{"label":"baby: dark skin tone","hexcode":"1F476-1F3FF","emoji":"👶🏿","text":"","type":1,"order":522,"group":1,"subgroup":23,"version":1,"tone":5}]},{"label":"child","hexcode":"1F9D2","tags":["bright-eyed","grandchild","kid","young","younger"],"emoji":"🧒","text":"","type":1,"order":523,"group":1,"subgroup":23,"version":5,"skins":[{"label":"child: light skin tone","hexcode":"1F9D2-1F3FB","emoji":"🧒🏻","text":"","type":1,"order":524,"group":1,"subgroup":23,"version":5,"tone":1},{"label":"child: medium-light skin tone","hexcode":"1F9D2-1F3FC","emoji":"🧒🏼","text":"","type":1,"order":525,"group":1,"subgroup":23,"version":5,"tone":2},{"label":"child: medium skin tone","hexcode":"1F9D2-1F3FD","emoji":"🧒🏽","text":"","type":1,"order":526,"group":1,"subgroup":23,"version":5,"tone":3},{"label":"child: medium-dark skin tone","hexcode":"1F9D2-1F3FE","emoji":"🧒🏾","text":"","type":1,"order":527,"group":1,"subgroup":23,"version":5,"tone":4},{"label":"child: dark skin tone","hexcode":"1F9D2-1F3FF","emoji":"🧒🏿","text":"","type":1,"order":528,"group":1,"subgroup":23,"version":5,"tone":5}]},{"label":"boy","hexcode":"1F466","tags":["bright-eyed","child","grandson","kid","son","young","younger"],"emoji":"👦","text":"","type":1,"order":529,"group":1,"subgroup":23,"version":0.6,"skins":[{"label":"boy: light skin tone","hexcode":"1F466-1F3FB","emoji":"👦🏻","text":"","type":1,"order":530,"group":1,"subgroup":23,"version":1,"tone":1},{"label":"boy: medium-light skin tone","hexcode":"1F466-1F3FC","emoji":"👦🏼","text":"","type":1,"order":531,"group":1,"subgroup":23,"version":1,"tone":2},{"label":"boy: medium skin tone","hexcode":"1F466-1F3FD","emoji":"👦🏽","text":"","type":1,"order":532,"group":1,"subgroup":23,"version":1,"tone":3},{"label":"boy: medium-dark skin tone","hexcode":"1F466-1F3FE","emoji":"👦🏾","text":"","type":1,"order":533,"group":1,"subgroup":23,"version":1,"tone":4},{"label":"boy: dark skin tone","hexcode":"1F466-1F3FF","emoji":"👦🏿","text":"","type":1,"order":534,"group":1,"subgroup":23,"version":1,"tone":5}]},{"label":"girl","hexcode":"1F467","tags":["bright-eyed","child","daughter","granddaughter","kid","virgo","young","younger","zodiac"],"emoji":"👧","text":"","type":1,"order":535,"group":1,"subgroup":23,"version":0.6,"skins":[{"label":"girl: light skin tone","hexcode":"1F467-1F3FB","emoji":"👧🏻","text":"","type":1,"order":536,"group":1,"subgroup":23,"version":1,"tone":1},{"label":"girl: medium-light skin tone","hexcode":"1F467-1F3FC","emoji":"👧🏼","text":"","type":1,"order":537,"group":1,"subgroup":23,"version":1,"tone":2},{"label":"girl: medium skin tone","hexcode":"1F467-1F3FD","emoji":"👧🏽","text":"","type":1,"order":538,"group":1,"subgroup":23,"version":1,"tone":3},{"label":"girl: medium-dark skin tone","hexcode":"1F467-1F3FE","emoji":"👧🏾","text":"","type":1,"order":539,"group":1,"subgroup":23,"version":1,"tone":4},{"label":"girl: dark skin tone","hexcode":"1F467-1F3FF","emoji":"👧🏿","text":"","type":1,"order":540,"group":1,"subgroup":23,"version":1,"tone":5}]},{"label":"person","hexcode":"1F9D1","tags":["adult"],"emoji":"🧑","text":"","type":1,"order":541,"group":1,"subgroup":23,"version":5,"skins":[{"label":"person: light skin tone","hexcode":"1F9D1-1F3FB","emoji":"🧑🏻","text":"","type":1,"order":542,"group":1,"subgroup":23,"version":5,"tone":1},{"label":"person: medium-light skin tone","hexcode":"1F9D1-1F3FC","emoji":"🧑🏼","text":"","type":1,"order":543,"group":1,"subgroup":23,"version":5,"tone":2},{"label":"person: medium skin tone","hexcode":"1F9D1-1F3FD","emoji":"🧑🏽","text":"","type":1,"order":544,"group":1,"subgroup":23,"version":5,"tone":3},{"label":"person: medium-dark skin tone","hexcode":"1F9D1-1F3FE","emoji":"🧑🏾","text":"","type":1,"order":545,"group":1,"subgroup":23,"version":5,"tone":4},{"label":"person: dark skin tone","hexcode":"1F9D1-1F3FF","emoji":"🧑🏿","text":"","type":1,"order":546,"group":1,"subgroup":23,"version":5,"tone":5}]},{"label":"person: blond hair","hexcode":"1F471","tags":["blond","blond-haired","human","person"],"emoji":"👱","text":"","type":1,"order":547,"group":1,"subgroup":23,"version":0.6,"skins":[{"label":"person: light skin tone, blond hair","hexcode":"1F471-1F3FB","emoji":"👱🏻","text":"","type":1,"order":548,"group":1,"subgroup":23,"version":1,"tone":1},{"label":"person: medium-light skin tone, blond hair","hexcode":"1F471-1F3FC","emoji":"👱🏼","text":"","type":1,"order":549,"group":1,"subgroup":23,"version":1,"tone":2},{"label":"person: medium skin tone, blond hair","hexcode":"1F471-1F3FD","emoji":"👱🏽","text":"","type":1,"order":550,"group":1,"subgroup":23,"version":1,"tone":3},{"label":"person: medium-dark skin tone, blond hair","hexcode":"1F471-1F3FE","emoji":"👱🏾","text":"","type":1,"order":551,"group":1,"subgroup":23,"version":1,"tone":4},{"label":"person: dark skin tone, blond hair","hexcode":"1F471-1F3FF","emoji":"👱🏿","text":"","type":1,"order":552,"group":1,"subgroup":23,"version":1,"tone":5}]},{"label":"man","hexcode":"1F468","tags":["adult","bro"],"emoji":"👨","text":"","type":1,"order":553,"group":1,"subgroup":23,"version":0.6,"skins":[{"label":"man: light skin tone","hexcode":"1F468-1F3FB","emoji":"👨🏻","text":"","type":1,"order":554,"group":1,"subgroup":23,"version":1,"tone":1},{"label":"man: medium-light skin tone","hexcode":"1F468-1F3FC","emoji":"👨🏼","text":"","type":1,"order":555,"group":1,"subgroup":23,"version":1,"tone":2},{"label":"man: medium skin tone","hexcode":"1F468-1F3FD","emoji":"👨🏽","text":"","type":1,"order":556,"group":1,"subgroup":23,"version":1,"tone":3},{"label":"man: medium-dark skin tone","hexcode":"1F468-1F3FE","emoji":"👨🏾","text":"","type":1,"order":557,"group":1,"subgroup":23,"version":1,"tone":4},{"label":"man: dark skin tone","hexcode":"1F468-1F3FF","emoji":"👨🏿","text":"","type":1,"order":558,"group":1,"subgroup":23,"version":1,"tone":5}]},{"label":"person: beard","hexcode":"1F9D4","tags":["beard","bearded","person","whiskers"],"emoji":"🧔","text":"","type":1,"order":559,"group":1,"subgroup":23,"version":5,"skins":[{"label":"person: light skin tone, beard","hexcode":"1F9D4-1F3FB","emoji":"🧔🏻","text":"","type":1,"order":560,"group":1,"subgroup":23,"version":5,"tone":1},{"label":"person: medium-light skin tone, beard","hexcode":"1F9D4-1F3FC","emoji":"🧔🏼","text":"","type":1,"order":561,"group":1,"subgroup":23,"version":5,"tone":2},{"label":"person: medium skin tone, beard","hexcode":"1F9D4-1F3FD","emoji":"🧔🏽","text":"","type":1,"order":562,"group":1,"subgroup":23,"version":5,"tone":3},{"label":"person: medium-dark skin tone, beard","hexcode":"1F9D4-1F3FE","emoji":"🧔🏾","text":"","type":1,"order":563,"group":1,"subgroup":23,"version":5,"tone":4},{"label":"person: dark skin tone, beard","hexcode":"1F9D4-1F3FF","emoji":"🧔🏿","text":"","type":1,"order":564,"group":1,"subgroup":23,"version":5,"tone":5}]},{"label":"man: beard","hexcode":"1F9D4-200D-2642-FE0F","tags":["beard","bearded","man","whiskers"],"emoji":"🧔‍♂️","text":"","type":1,"order":565,"group":1,"subgroup":23,"version":13.1,"gender":1,"skins":[{"label":"man: light skin tone, beard","hexcode":"1F9D4-1F3FB-200D-2642-FE0F","emoji":"🧔🏻‍♂️","text":"","type":1,"order":567,"group":1,"subgroup":23,"version":13.1,"gender":1,"tone":1},{"label":"man: medium-light skin tone, beard","hexcode":"1F9D4-1F3FC-200D-2642-FE0F","emoji":"🧔🏼‍♂️","text":"","type":1,"order":569,"group":1,"subgroup":23,"version":13.1,"gender":1,"tone":2},{"label":"man: medium skin tone, beard","hexcode":"1F9D4-1F3FD-200D-2642-FE0F","emoji":"🧔🏽‍♂️","text":"","type":1,"order":571,"group":1,"subgroup":23,"version":13.1,"gender":1,"tone":3},{"label":"man: medium-dark skin tone, beard","hexcode":"1F9D4-1F3FE-200D-2642-FE0F","emoji":"🧔🏾‍♂️","text":"","type":1,"order":573,"group":1,"subgroup":23,"version":13.1,"gender":1,"tone":4},{"label":"man: dark skin tone, beard","hexcode":"1F9D4-1F3FF-200D-2642-FE0F","emoji":"🧔🏿‍♂️","text":"","type":1,"order":575,"group":1,"subgroup":23,"version":13.1,"gender":1,"tone":5}]},{"label":"woman: beard","hexcode":"1F9D4-200D-2640-FE0F","tags":["beard","bearded","whiskers","woman"],"emoji":"🧔‍♀️","text":"","type":1,"order":577,"group":1,"subgroup":23,"version":13.1,"gender":0,"skins":[{"label":"woman: light skin tone, beard","hexcode":"1F9D4-1F3FB-200D-2640-FE0F","emoji":"🧔🏻‍♀️","text":"","type":1,"order":579,"group":1,"subgroup":23,"version":13.1,"gender":0,"tone":1},{"label":"woman: medium-light skin tone, beard","hexcode":"1F9D4-1F3FC-200D-2640-FE0F","emoji":"🧔🏼‍♀️","text":"","type":1,"order":581,"group":1,"subgroup":23,"version":13.1,"gender":0,"tone":2},{"label":"woman: medium skin tone, beard","hexcode":"1F9D4-1F3FD-200D-2640-FE0F","emoji":"🧔🏽‍♀️","text":"","type":1,"order":583,"group":1,"subgroup":23,"version":13.1,"gender":0,"tone":3},{"label":"woman: medium-dark skin tone, beard","hexcode":"1F9D4-1F3FE-200D-2640-FE0F","emoji":"🧔🏾‍♀️","text":"","type":1,"order":585,"group":1,"subgroup":23,"version":13.1,"gender":0,"tone":4},{"label":"woman: dark skin tone, beard","hexcode":"1F9D4-1F3FF-200D-2640-FE0F","emoji":"🧔🏿‍♀️","text":"","type":1,"order":587,"group":1,"subgroup":23,"version":13.1,"gender":0,"tone":5}]},{"label":"man: red hair","hexcode":"1F468-200D-1F9B0","tags":["adult","bro","man","red hair"],"emoji":"👨‍🦰","text":"","type":1,"order":589,"group":1,"subgroup":23,"version":11,"skins":[{"label":"man: light skin tone, red hair","hexcode":"1F468-1F3FB-200D-1F9B0","emoji":"👨🏻‍🦰","text":"","type":1,"order":590,"group":1,"subgroup":23,"version":11,"tone":1},{"label":"man: medium-light skin tone, red hair","hexcode":"1F468-1F3FC-200D-1F9B0","emoji":"👨🏼‍🦰","text":"","type":1,"order":591,"group":1,"subgroup":23,"version":11,"tone":2},{"label":"man: medium skin tone, red hair","hexcode":"1F468-1F3FD-200D-1F9B0","emoji":"👨🏽‍🦰","text":"","type":1,"order":592,"group":1,"subgroup":23,"version":11,"tone":3},{"label":"man: medium-dark skin tone, red hair","hexcode":"1F468-1F3FE-200D-1F9B0","emoji":"👨🏾‍🦰","text":"","type":1,"order":593,"group":1,"subgroup":23,"version":11,"tone":4},{"label":"man: dark skin tone, red hair","hexcode":"1F468-1F3FF-200D-1F9B0","emoji":"👨🏿‍🦰","text":"","type":1,"order":594,"group":1,"subgroup":23,"version":11,"tone":5}]},{"label":"man: curly hair","hexcode":"1F468-200D-1F9B1","tags":["adult","bro","curly hair","man"],"emoji":"👨‍🦱","text":"","type":1,"order":595,"group":1,"subgroup":23,"version":11,"skins":[{"label":"man: light skin tone, curly hair","hexcode":"1F468-1F3FB-200D-1F9B1","emoji":"👨🏻‍🦱","text":"","type":1,"order":596,"group":1,"subgroup":23,"version":11,"tone":1},{"label":"man: medium-light skin tone, curly hair","hexcode":"1F468-1F3FC-200D-1F9B1","emoji":"👨🏼‍🦱","text":"","type":1,"order":597,"group":1,"subgroup":23,"version":11,"tone":2},{"label":"man: medium skin tone, curly hair","hexcode":"1F468-1F3FD-200D-1F9B1","emoji":"👨🏽‍🦱","text":"","type":1,"order":598,"group":1,"subgroup":23,"version":11,"tone":3},{"label":"man: medium-dark skin tone, curly hair","hexcode":"1F468-1F3FE-200D-1F9B1","emoji":"👨🏾‍🦱","text":"","type":1,"order":599,"group":1,"subgroup":23,"version":11,"tone":4},{"label":"man: dark skin tone, curly hair","hexcode":"1F468-1F3FF-200D-1F9B1","emoji":"👨🏿‍🦱","text":"","type":1,"order":600,"group":1,"subgroup":23,"version":11,"tone":5}]},{"label":"man: white hair","hexcode":"1F468-200D-1F9B3","tags":["adult","bro","man","white hair"],"emoji":"👨‍🦳","text":"","type":1,"order":601,"group":1,"subgroup":23,"version":11,"skins":[{"label":"man: light skin tone, white hair","hexcode":"1F468-1F3FB-200D-1F9B3","emoji":"👨🏻‍🦳","text":"","type":1,"order":602,"group":1,"subgroup":23,"version":11,"tone":1},{"label":"man: medium-light skin tone, white hair","hexcode":"1F468-1F3FC-200D-1F9B3","emoji":"👨🏼‍🦳","text":"","type":1,"order":603,"group":1,"subgroup":23,"version":11,"tone":2},{"label":"man: medium skin tone, white hair","hexcode":"1F468-1F3FD-200D-1F9B3","emoji":"👨🏽‍🦳","text":"","type":1,"order":604,"group":1,"subgroup":23,"version":11,"tone":3},{"label":"man: medium-dark skin tone, white hair","hexcode":"1F468-1F3FE-200D-1F9B3","emoji":"👨🏾‍🦳","text":"","type":1,"order":605,"group":1,"subgroup":23,"version":11,"tone":4},{"label":"man: dark skin tone, white hair","hexcode":"1F468-1F3FF-200D-1F9B3","emoji":"👨🏿‍🦳","text":"","type":1,"order":606,"group":1,"subgroup":23,"version":11,"tone":5}]},{"label":"man: bald","hexcode":"1F468-200D-1F9B2","tags":["adult","bald","bro","man"],"emoji":"👨‍🦲","text":"","type":1,"order":607,"group":1,"subgroup":23,"version":11,"skins":[{"label":"man: light skin tone, bald","hexcode":"1F468-1F3FB-200D-1F9B2","emoji":"👨🏻‍🦲","text":"","type":1,"order":608,"group":1,"subgroup":23,"version":11,"tone":1},{"label":"man: medium-light skin tone, bald","hexcode":"1F468-1F3FC-200D-1F9B2","emoji":"👨🏼‍🦲","text":"","type":1,"order":609,"group":1,"subgroup":23,"version":11,"tone":2},{"label":"man: medium skin tone, bald","hexcode":"1F468-1F3FD-200D-1F9B2","emoji":"👨🏽‍🦲","text":"","type":1,"order":610,"group":1,"subgroup":23,"version":11,"tone":3},{"label":"man: medium-dark skin tone, bald","hexcode":"1F468-1F3FE-200D-1F9B2","emoji":"👨🏾‍🦲","text":"","type":1,"order":611,"group":1,"subgroup":23,"version":11,"tone":4},{"label":"man: dark skin tone, bald","hexcode":"1F468-1F3FF-200D-1F9B2","emoji":"👨🏿‍🦲","text":"","type":1,"order":612,"group":1,"subgroup":23,"version":11,"tone":5}]},{"label":"woman","hexcode":"1F469","tags":["adult","lady"],"emoji":"👩","text":"","type":1,"order":613,"group":1,"subgroup":23,"version":0.6,"skins":[{"label":"woman: light skin tone","hexcode":"1F469-1F3FB","emoji":"👩🏻","text":"","type":1,"order":614,"group":1,"subgroup":23,"version":1,"tone":1},{"label":"woman: medium-light skin tone","hexcode":"1F469-1F3FC","emoji":"👩🏼","text":"","type":1,"order":615,"group":1,"subgroup":23,"version":1,"tone":2},{"label":"woman: medium skin tone","hexcode":"1F469-1F3FD","emoji":"👩🏽","text":"","type":1,"order":616,"group":1,"subgroup":23,"version":1,"tone":3},{"label":"woman: medium-dark skin tone","hexcode":"1F469-1F3FE","emoji":"👩🏾","text":"","type":1,"order":617,"group":1,"subgroup":23,"version":1,"tone":4},{"label":"woman: dark skin tone","hexcode":"1F469-1F3FF","emoji":"👩🏿","text":"","type":1,"order":618,"group":1,"subgroup":23,"version":1,"tone":5}]},{"label":"woman: red hair","hexcode":"1F469-200D-1F9B0","tags":["adult","lady","red hair","woman"],"emoji":"👩‍🦰","text":"","type":1,"order":619,"group":1,"subgroup":23,"version":11,"skins":[{"label":"woman: light skin tone, red hair","hexcode":"1F469-1F3FB-200D-1F9B0","emoji":"👩🏻‍🦰","text":"","type":1,"order":620,"group":1,"subgroup":23,"version":11,"tone":1},{"label":"woman: medium-light skin tone, red hair","hexcode":"1F469-1F3FC-200D-1F9B0","emoji":"👩🏼‍🦰","text":"","type":1,"order":621,"group":1,"subgroup":23,"version":11,"tone":2},{"label":"woman: medium skin tone, red hair","hexcode":"1F469-1F3FD-200D-1F9B0","emoji":"👩🏽‍🦰","text":"","type":1,"order":622,"group":1,"subgroup":23,"version":11,"tone":3},{"label":"woman: medium-dark skin tone, red hair","hexcode":"1F469-1F3FE-200D-1F9B0","emoji":"👩🏾‍🦰","text":"","type":1,"order":623,"group":1,"subgroup":23,"version":11,"tone":4},{"label":"woman: dark skin tone, red hair","hexcode":"1F469-1F3FF-200D-1F9B0","emoji":"👩🏿‍🦰","text":"","type":1,"order":624,"group":1,"subgroup":23,"version":11,"tone":5}]},{"label":"person: red hair","hexcode":"1F9D1-200D-1F9B0","tags":["adult","person","red hair"],"emoji":"🧑‍🦰","text":"","type":1,"order":625,"group":1,"subgroup":23,"version":12.1,"skins":[{"label":"person: light skin tone, red hair","hexcode":"1F9D1-1F3FB-200D-1F9B0","emoji":"🧑🏻‍🦰","text":"","type":1,"order":626,"group":1,"subgroup":23,"version":12.1,"tone":1},{"label":"person: medium-light skin tone, red hair","hexcode":"1F9D1-1F3FC-200D-1F9B0","emoji":"🧑🏼‍🦰","text":"","type":1,"order":627,"group":1,"subgroup":23,"version":12.1,"tone":2},{"label":"person: medium skin tone, red hair","hexcode":"1F9D1-1F3FD-200D-1F9B0","emoji":"🧑🏽‍🦰","text":"","type":1,"order":628,"group":1,"subgroup":23,"version":12.1,"tone":3},{"label":"person: medium-dark skin tone, red hair","hexcode":"1F9D1-1F3FE-200D-1F9B0","emoji":"🧑🏾‍🦰","text":"","type":1,"order":629,"group":1,"subgroup":23,"version":12.1,"tone":4},{"label":"person: dark skin tone, red hair","hexcode":"1F9D1-1F3FF-200D-1F9B0","emoji":"🧑🏿‍🦰","text":"","type":1,"order":630,"group":1,"subgroup":23,"version":12.1,"tone":5}]},{"label":"woman: curly hair","hexcode":"1F469-200D-1F9B1","tags":["adult","curly hair","lady","woman"],"emoji":"👩‍🦱","text":"","type":1,"order":631,"group":1,"subgroup":23,"version":11,"skins":[{"label":"woman: light skin tone, curly hair","hexcode":"1F469-1F3FB-200D-1F9B1","emoji":"👩🏻‍🦱","text":"","type":1,"order":632,"group":1,"subgroup":23,"version":11,"tone":1},{"label":"woman: medium-light skin tone, curly hair","hexcode":"1F469-1F3FC-200D-1F9B1","emoji":"👩🏼‍🦱","text":"","type":1,"order":633,"group":1,"subgroup":23,"version":11,"tone":2},{"label":"woman: medium skin tone, curly hair","hexcode":"1F469-1F3FD-200D-1F9B1","emoji":"👩🏽‍🦱","text":"","type":1,"order":634,"group":1,"subgroup":23,"version":11,"tone":3},{"label":"woman: medium-dark skin tone, curly hair","hexcode":"1F469-1F3FE-200D-1F9B1","emoji":"👩🏾‍🦱","text":"","type":1,"order":635,"group":1,"subgroup":23,"version":11,"tone":4},{"label":"woman: dark skin tone, curly hair","hexcode":"1F469-1F3FF-200D-1F9B1","emoji":"👩🏿‍🦱","text":"","type":1,"order":636,"group":1,"subgroup":23,"version":11,"tone":5}]},{"label":"person: curly hair","hexcode":"1F9D1-200D-1F9B1","tags":["adult","curly hair","person"],"emoji":"🧑‍🦱","text":"","type":1,"order":637,"group":1,"subgroup":23,"version":12.1,"skins":[{"label":"person: light skin tone, curly hair","hexcode":"1F9D1-1F3FB-200D-1F9B1","emoji":"🧑🏻‍🦱","text":"","type":1,"order":638,"group":1,"subgroup":23,"version":12.1,"tone":1},{"label":"person: medium-light skin tone, curly hair","hexcode":"1F9D1-1F3FC-200D-1F9B1","emoji":"🧑🏼‍🦱","text":"","type":1,"order":639,"group":1,"subgroup":23,"version":12.1,"tone":2},{"label":"person: medium skin tone, curly hair","hexcode":"1F9D1-1F3FD-200D-1F9B1","emoji":"🧑🏽‍🦱","text":"","type":1,"order":640,"group":1,"subgroup":23,"version":12.1,"tone":3},{"label":"person: medium-dark skin tone, curly hair","hexcode":"1F9D1-1F3FE-200D-1F9B1","emoji":"🧑🏾‍🦱","text":"","type":1,"order":641,"group":1,"subgroup":23,"version":12.1,"tone":4},{"label":"person: dark skin tone, curly hair","hexcode":"1F9D1-1F3FF-200D-1F9B1","emoji":"🧑🏿‍🦱","text":"","type":1,"order":642,"group":1,"subgroup":23,"version":12.1,"tone":5}]},{"label":"woman: white hair","hexcode":"1F469-200D-1F9B3","tags":["adult","lady","white hair","woman"],"emoji":"👩‍🦳","text":"","type":1,"order":643,"group":1,"subgroup":23,"version":11,"skins":[{"label":"woman: light skin tone, white hair","hexcode":"1F469-1F3FB-200D-1F9B3","emoji":"👩🏻‍🦳","text":"","type":1,"order":644,"group":1,"subgroup":23,"version":11,"tone":1},{"label":"woman: medium-light skin tone, white hair","hexcode":"1F469-1F3FC-200D-1F9B3","emoji":"👩🏼‍🦳","text":"","type":1,"order":645,"group":1,"subgroup":23,"version":11,"tone":2},{"label":"woman: medium skin tone, white hair","hexcode":"1F469-1F3FD-200D-1F9B3","emoji":"👩🏽‍🦳","text":"","type":1,"order":646,"group":1,"subgroup":23,"version":11,"tone":3},{"label":"woman: medium-dark skin tone, white hair","hexcode":"1F469-1F3FE-200D-1F9B3","emoji":"👩🏾‍🦳","text":"","type":1,"order":647,"group":1,"subgroup":23,"version":11,"tone":4},{"label":"woman: dark skin tone, white hair","hexcode":"1F469-1F3FF-200D-1F9B3","emoji":"👩🏿‍🦳","text":"","type":1,"order":648,"group":1,"subgroup":23,"version":11,"tone":5}]},{"label":"person: white hair","hexcode":"1F9D1-200D-1F9B3","tags":["adult","person","white hair"],"emoji":"🧑‍🦳","text":"","type":1,"order":649,"group":1,"subgroup":23,"version":12.1,"skins":[{"label":"person: light skin tone, white hair","hexcode":"1F9D1-1F3FB-200D-1F9B3","emoji":"🧑🏻‍🦳","text":"","type":1,"order":650,"group":1,"subgroup":23,"version":12.1,"tone":1},{"label":"person: medium-light skin tone, white hair","hexcode":"1F9D1-1F3FC-200D-1F9B3","emoji":"🧑🏼‍🦳","text":"","type":1,"order":651,"group":1,"subgroup":23,"version":12.1,"tone":2},{"label":"person: medium skin tone, white hair","hexcode":"1F9D1-1F3FD-200D-1F9B3","emoji":"🧑🏽‍🦳","text":"","type":1,"order":652,"group":1,"subgroup":23,"version":12.1,"tone":3},{"label":"person: medium-dark skin tone, white hair","hexcode":"1F9D1-1F3FE-200D-1F9B3","emoji":"🧑🏾‍🦳","text":"","type":1,"order":653,"group":1,"subgroup":23,"version":12.1,"tone":4},{"label":"person: dark skin tone, white hair","hexcode":"1F9D1-1F3FF-200D-1F9B3","emoji":"🧑🏿‍🦳","text":"","type":1,"order":654,"group":1,"subgroup":23,"version":12.1,"tone":5}]},{"label":"woman: bald","hexcode":"1F469-200D-1F9B2","tags":["adult","bald","lady","woman"],"emoji":"👩‍🦲","text":"","type":1,"order":655,"group":1,"subgroup":23,"version":11,"skins":[{"label":"woman: light skin tone, bald","hexcode":"1F469-1F3FB-200D-1F9B2","emoji":"👩🏻‍🦲","text":"","type":1,"order":656,"group":1,"subgroup":23,"version":11,"tone":1},{"label":"woman: medium-light skin tone, bald","hexcode":"1F469-1F3FC-200D-1F9B2","emoji":"👩🏼‍🦲","text":"","type":1,"order":657,"group":1,"subgroup":23,"version":11,"tone":2},{"label":"woman: medium skin tone, bald","hexcode":"1F469-1F3FD-200D-1F9B2","emoji":"👩🏽‍🦲","text":"","type":1,"order":658,"group":1,"subgroup":23,"version":11,"tone":3},{"label":"woman: medium-dark skin tone, bald","hexcode":"1F469-1F3FE-200D-1F9B2","emoji":"👩🏾‍🦲","text":"","type":1,"order":659,"group":1,"subgroup":23,"version":11,"tone":4},{"label":"woman: dark skin tone, bald","hexcode":"1F469-1F3FF-200D-1F9B2","emoji":"👩🏿‍🦲","text":"","type":1,"order":660,"group":1,"subgroup":23,"version":11,"tone":5}]},{"label":"person: bald","hexcode":"1F9D1-200D-1F9B2","tags":["adult","bald","person"],"emoji":"🧑‍🦲","text":"","type":1,"order":661,"group":1,"subgroup":23,"version":12.1,"skins":[{"label":"person: light skin tone, bald","hexcode":"1F9D1-1F3FB-200D-1F9B2","emoji":"🧑🏻‍🦲","text":"","type":1,"order":662,"group":1,"subgroup":23,"version":12.1,"tone":1},{"label":"person: medium-light skin tone, bald","hexcode":"1F9D1-1F3FC-200D-1F9B2","emoji":"🧑🏼‍🦲","text":"","type":1,"order":663,"group":1,"subgroup":23,"version":12.1,"tone":2},{"label":"person: medium skin tone, bald","hexcode":"1F9D1-1F3FD-200D-1F9B2","emoji":"🧑🏽‍🦲","text":"","type":1,"order":664,"group":1,"subgroup":23,"version":12.1,"tone":3},{"label":"person: medium-dark skin tone, bald","hexcode":"1F9D1-1F3FE-200D-1F9B2","emoji":"🧑🏾‍🦲","text":"","type":1,"order":665,"group":1,"subgroup":23,"version":12.1,"tone":4},{"label":"person: dark skin tone, bald","hexcode":"1F9D1-1F3FF-200D-1F9B2","emoji":"🧑🏿‍🦲","text":"","type":1,"order":666,"group":1,"subgroup":23,"version":12.1,"tone":5}]},{"label":"woman: blond hair","hexcode":"1F471-200D-2640-FE0F","tags":["blond","blond-haired","blonde","hair","woman"],"emoji":"👱‍♀️","text":"","type":1,"order":667,"group":1,"subgroup":23,"version":4,"gender":0,"skins":[{"label":"woman: light skin tone, blond hair","hexcode":"1F471-1F3FB-200D-2640-FE0F","emoji":"👱🏻‍♀️","text":"","type":1,"order":669,"group":1,"subgroup":23,"version":4,"gender":0,"tone":1},{"label":"woman: medium-light skin tone, blond hair","hexcode":"1F471-1F3FC-200D-2640-FE0F","emoji":"👱🏼‍♀️","text":"","type":1,"order":671,"group":1,"subgroup":23,"version":4,"gender":0,"tone":2},{"label":"woman: medium skin tone, blond hair","hexcode":"1F471-1F3FD-200D-2640-FE0F","emoji":"👱🏽‍♀️","text":"","type":1,"order":673,"group":1,"subgroup":23,"version":4,"gender":0,"tone":3},{"label":"woman: medium-dark skin tone, blond hair","hexcode":"1F471-1F3FE-200D-2640-FE0F","emoji":"👱🏾‍♀️","text":"","type":1,"order":675,"group":1,"subgroup":23,"version":4,"gender":0,"tone":4},{"label":"woman: dark skin tone, blond hair","hexcode":"1F471-1F3FF-200D-2640-FE0F","emoji":"👱🏿‍♀️","text":"","type":1,"order":677,"group":1,"subgroup":23,"version":4,"gender":0,"tone":5}]},{"label":"man: blond hair","hexcode":"1F471-200D-2642-FE0F","tags":["blond","blond-haired","hair","man"],"emoji":"👱‍♂️","text":"","type":1,"order":679,"group":1,"subgroup":23,"version":4,"gender":1,"skins":[{"label":"man: light skin tone, blond hair","hexcode":"1F471-1F3FB-200D-2642-FE0F","emoji":"👱🏻‍♂️","text":"","type":1,"order":681,"group":1,"subgroup":23,"version":4,"gender":1,"tone":1},{"label":"man: medium-light skin tone, blond hair","hexcode":"1F471-1F3FC-200D-2642-FE0F","emoji":"👱🏼‍♂️","text":"","type":1,"order":683,"group":1,"subgroup":23,"version":4,"gender":1,"tone":2},{"label":"man: medium skin tone, blond hair","hexcode":"1F471-1F3FD-200D-2642-FE0F","emoji":"👱🏽‍♂️","text":"","type":1,"order":685,"group":1,"subgroup":23,"version":4,"gender":1,"tone":3},{"label":"man: medium-dark skin tone, blond hair","hexcode":"1F471-1F3FE-200D-2642-FE0F","emoji":"👱🏾‍♂️","text":"","type":1,"order":687,"group":1,"subgroup":23,"version":4,"gender":1,"tone":4},{"label":"man: dark skin tone, blond hair","hexcode":"1F471-1F3FF-200D-2642-FE0F","emoji":"👱🏿‍♂️","text":"","type":1,"order":689,"group":1,"subgroup":23,"version":4,"gender":1,"tone":5}]},{"label":"older person","hexcode":"1F9D3","tags":["adult","elderly","grandparent","old","person","wise"],"emoji":"🧓","text":"","type":1,"order":691,"group":1,"subgroup":23,"version":5,"skins":[{"label":"older person: light skin tone","hexcode":"1F9D3-1F3FB","emoji":"🧓🏻","text":"","type":1,"order":692,"group":1,"subgroup":23,"version":5,"tone":1},{"label":"older person: medium-light skin tone","hexcode":"1F9D3-1F3FC","emoji":"🧓🏼","text":"","type":1,"order":693,"group":1,"subgroup":23,"version":5,"tone":2},{"label":"older person: medium skin tone","hexcode":"1F9D3-1F3FD","emoji":"🧓🏽","text":"","type":1,"order":694,"group":1,"subgroup":23,"version":5,"tone":3},{"label":"older person: medium-dark skin tone","hexcode":"1F9D3-1F3FE","emoji":"🧓🏾","text":"","type":1,"order":695,"group":1,"subgroup":23,"version":5,"tone":4},{"label":"older person: dark skin tone","hexcode":"1F9D3-1F3FF","emoji":"🧓🏿","text":"","type":1,"order":696,"group":1,"subgroup":23,"version":5,"tone":5}]},{"label":"old man","hexcode":"1F474","tags":["adult","bald","elderly","gramps","grandfather","grandpa","man","old","wise"],"emoji":"👴","text":"","type":1,"order":697,"group":1,"subgroup":23,"version":0.6,"skins":[{"label":"old man: light skin tone","hexcode":"1F474-1F3FB","emoji":"👴🏻","text":"","type":1,"order":698,"group":1,"subgroup":23,"version":1,"tone":1},{"label":"old man: medium-light skin tone","hexcode":"1F474-1F3FC","emoji":"👴🏼","text":"","type":1,"order":699,"group":1,"subgroup":23,"version":1,"tone":2},{"label":"old man: medium skin tone","hexcode":"1F474-1F3FD","emoji":"👴🏽","text":"","type":1,"order":700,"group":1,"subgroup":23,"version":1,"tone":3},{"label":"old man: medium-dark skin tone","hexcode":"1F474-1F3FE","emoji":"👴🏾","text":"","type":1,"order":701,"group":1,"subgroup":23,"version":1,"tone":4},{"label":"old man: dark skin tone","hexcode":"1F474-1F3FF","emoji":"👴🏿","text":"","type":1,"order":702,"group":1,"subgroup":23,"version":1,"tone":5}]},{"label":"old woman","hexcode":"1F475","tags":["adult","elderly","grandma","grandmother","granny","lady","old","wise","woman"],"emoji":"👵","text":"","type":1,"order":703,"group":1,"subgroup":23,"version":0.6,"skins":[{"label":"old woman: light skin tone","hexcode":"1F475-1F3FB","emoji":"👵🏻","text":"","type":1,"order":704,"group":1,"subgroup":23,"version":1,"tone":1},{"label":"old woman: medium-light skin tone","hexcode":"1F475-1F3FC","emoji":"👵🏼","text":"","type":1,"order":705,"group":1,"subgroup":23,"version":1,"tone":2},{"label":"old woman: medium skin tone","hexcode":"1F475-1F3FD","emoji":"👵🏽","text":"","type":1,"order":706,"group":1,"subgroup":23,"version":1,"tone":3},{"label":"old woman: medium-dark skin tone","hexcode":"1F475-1F3FE","emoji":"👵🏾","text":"","type":1,"order":707,"group":1,"subgroup":23,"version":1,"tone":4},{"label":"old woman: dark skin tone","hexcode":"1F475-1F3FF","emoji":"👵🏿","text":"","type":1,"order":708,"group":1,"subgroup":23,"version":1,"tone":5}]},{"label":"person frowning","hexcode":"1F64D","tags":["annoyed","disappointed","disgruntled","disturbed","frown","frowning","frustrated","gesture","irritated","person","upset"],"emoji":"🙍","text":"","type":1,"order":709,"group":1,"subgroup":24,"version":0.6,"skins":[{"label":"person frowning: light skin tone","hexcode":"1F64D-1F3FB","emoji":"🙍🏻","text":"","type":1,"order":710,"group":1,"subgroup":24,"version":1,"tone":1},{"label":"person frowning: medium-light skin tone","hexcode":"1F64D-1F3FC","emoji":"🙍🏼","text":"","type":1,"order":711,"group":1,"subgroup":24,"version":1,"tone":2},{"label":"person frowning: medium skin tone","hexcode":"1F64D-1F3FD","emoji":"🙍🏽","text":"","type":1,"order":712,"group":1,"subgroup":24,"version":1,"tone":3},{"label":"person frowning: medium-dark skin tone","hexcode":"1F64D-1F3FE","emoji":"🙍🏾","text":"","type":1,"order":713,"group":1,"subgroup":24,"version":1,"tone":4},{"label":"person frowning: dark skin tone","hexcode":"1F64D-1F3FF","emoji":"🙍🏿","text":"","type":1,"order":714,"group":1,"subgroup":24,"version":1,"tone":5}]},{"label":"man frowning","hexcode":"1F64D-200D-2642-FE0F","tags":["annoyed","disappointed","disgruntled","disturbed","frown","frowning","frustrated","gesture","irritated","man","upset"],"emoji":"🙍‍♂️","text":"","type":1,"order":715,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man frowning: light skin tone","hexcode":"1F64D-1F3FB-200D-2642-FE0F","emoji":"🙍🏻‍♂️","text":"","type":1,"order":717,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man frowning: medium-light skin tone","hexcode":"1F64D-1F3FC-200D-2642-FE0F","emoji":"🙍🏼‍♂️","text":"","type":1,"order":719,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man frowning: medium skin tone","hexcode":"1F64D-1F3FD-200D-2642-FE0F","emoji":"🙍🏽‍♂️","text":"","type":1,"order":721,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man frowning: medium-dark skin tone","hexcode":"1F64D-1F3FE-200D-2642-FE0F","emoji":"🙍🏾‍♂️","text":"","type":1,"order":723,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man frowning: dark skin tone","hexcode":"1F64D-1F3FF-200D-2642-FE0F","emoji":"🙍🏿‍♂️","text":"","type":1,"order":725,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman frowning","hexcode":"1F64D-200D-2640-FE0F","tags":["annoyed","disappointed","disgruntled","disturbed","frown","frowning","frustrated","gesture","irritated","upset","woman"],"emoji":"🙍‍♀️","text":"","type":1,"order":727,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman frowning: light skin tone","hexcode":"1F64D-1F3FB-200D-2640-FE0F","emoji":"🙍🏻‍♀️","text":"","type":1,"order":729,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman frowning: medium-light skin tone","hexcode":"1F64D-1F3FC-200D-2640-FE0F","emoji":"🙍🏼‍♀️","text":"","type":1,"order":731,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman frowning: medium skin tone","hexcode":"1F64D-1F3FD-200D-2640-FE0F","emoji":"🙍🏽‍♀️","text":"","type":1,"order":733,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman frowning: medium-dark skin tone","hexcode":"1F64D-1F3FE-200D-2640-FE0F","emoji":"🙍🏾‍♀️","text":"","type":1,"order":735,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman frowning: dark skin tone","hexcode":"1F64D-1F3FF-200D-2640-FE0F","emoji":"🙍🏿‍♀️","text":"","type":1,"order":737,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"person pouting","hexcode":"1F64E","tags":["disappointed","downtrodden","frown","grimace","person","pouting","scowl","sulk","upset","whine"],"emoji":"🙎","text":"","type":1,"order":739,"group":1,"subgroup":24,"version":0.6,"skins":[{"label":"person pouting: light skin tone","hexcode":"1F64E-1F3FB","emoji":"🙎🏻","text":"","type":1,"order":740,"group":1,"subgroup":24,"version":1,"tone":1},{"label":"person pouting: medium-light skin tone","hexcode":"1F64E-1F3FC","emoji":"🙎🏼","text":"","type":1,"order":741,"group":1,"subgroup":24,"version":1,"tone":2},{"label":"person pouting: medium skin tone","hexcode":"1F64E-1F3FD","emoji":"🙎🏽","text":"","type":1,"order":742,"group":1,"subgroup":24,"version":1,"tone":3},{"label":"person pouting: medium-dark skin tone","hexcode":"1F64E-1F3FE","emoji":"🙎🏾","text":"","type":1,"order":743,"group":1,"subgroup":24,"version":1,"tone":4},{"label":"person pouting: dark skin tone","hexcode":"1F64E-1F3FF","emoji":"🙎🏿","text":"","type":1,"order":744,"group":1,"subgroup":24,"version":1,"tone":5}]},{"label":"man pouting","hexcode":"1F64E-200D-2642-FE0F","tags":["disappointed","downtrodden","frown","grimace","man","pouting","scowl","sulk","upset","whine"],"emoji":"🙎‍♂️","text":"","type":1,"order":745,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man pouting: light skin tone","hexcode":"1F64E-1F3FB-200D-2642-FE0F","emoji":"🙎🏻‍♂️","text":"","type":1,"order":747,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man pouting: medium-light skin tone","hexcode":"1F64E-1F3FC-200D-2642-FE0F","emoji":"🙎🏼‍♂️","text":"","type":1,"order":749,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man pouting: medium skin tone","hexcode":"1F64E-1F3FD-200D-2642-FE0F","emoji":"🙎🏽‍♂️","text":"","type":1,"order":751,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man pouting: medium-dark skin tone","hexcode":"1F64E-1F3FE-200D-2642-FE0F","emoji":"🙎🏾‍♂️","text":"","type":1,"order":753,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man pouting: dark skin tone","hexcode":"1F64E-1F3FF-200D-2642-FE0F","emoji":"🙎🏿‍♂️","text":"","type":1,"order":755,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman pouting","hexcode":"1F64E-200D-2640-FE0F","tags":["disappointed","downtrodden","frown","grimace","pouting","scowl","sulk","upset","whine","woman"],"emoji":"🙎‍♀️","text":"","type":1,"order":757,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman pouting: light skin tone","hexcode":"1F64E-1F3FB-200D-2640-FE0F","emoji":"🙎🏻‍♀️","text":"","type":1,"order":759,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman pouting: medium-light skin tone","hexcode":"1F64E-1F3FC-200D-2640-FE0F","emoji":"🙎🏼‍♀️","text":"","type":1,"order":761,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman pouting: medium skin tone","hexcode":"1F64E-1F3FD-200D-2640-FE0F","emoji":"🙎🏽‍♀️","text":"","type":1,"order":763,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman pouting: medium-dark skin tone","hexcode":"1F64E-1F3FE-200D-2640-FE0F","emoji":"🙎🏾‍♀️","text":"","type":1,"order":765,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman pouting: dark skin tone","hexcode":"1F64E-1F3FF-200D-2640-FE0F","emoji":"🙎🏿‍♀️","text":"","type":1,"order":767,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"person gesturing NO","hexcode":"1F645","tags":["forbidden","gesture","hand","no","not","person","prohibit"],"emoji":"🙅","text":"","type":1,"order":769,"group":1,"subgroup":24,"version":0.6,"skins":[{"label":"person gesturing NO: light skin tone","hexcode":"1F645-1F3FB","emoji":"🙅🏻","text":"","type":1,"order":770,"group":1,"subgroup":24,"version":1,"tone":1},{"label":"person gesturing NO: medium-light skin tone","hexcode":"1F645-1F3FC","emoji":"🙅🏼","text":"","type":1,"order":771,"group":1,"subgroup":24,"version":1,"tone":2},{"label":"person gesturing NO: medium skin tone","hexcode":"1F645-1F3FD","emoji":"🙅🏽","text":"","type":1,"order":772,"group":1,"subgroup":24,"version":1,"tone":3},{"label":"person gesturing NO: medium-dark skin tone","hexcode":"1F645-1F3FE","emoji":"🙅🏾","text":"","type":1,"order":773,"group":1,"subgroup":24,"version":1,"tone":4},{"label":"person gesturing NO: dark skin tone","hexcode":"1F645-1F3FF","emoji":"🙅🏿","text":"","type":1,"order":774,"group":1,"subgroup":24,"version":1,"tone":5}]},{"label":"man gesturing NO","hexcode":"1F645-200D-2642-FE0F","tags":["forbidden","gesture","hand","man","no","not","prohibit"],"emoji":"🙅‍♂️","text":"","type":1,"order":775,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man gesturing NO: light skin tone","hexcode":"1F645-1F3FB-200D-2642-FE0F","emoji":"🙅🏻‍♂️","text":"","type":1,"order":777,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man gesturing NO: medium-light skin tone","hexcode":"1F645-1F3FC-200D-2642-FE0F","emoji":"🙅🏼‍♂️","text":"","type":1,"order":779,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man gesturing NO: medium skin tone","hexcode":"1F645-1F3FD-200D-2642-FE0F","emoji":"🙅🏽‍♂️","text":"","type":1,"order":781,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man gesturing NO: medium-dark skin tone","hexcode":"1F645-1F3FE-200D-2642-FE0F","emoji":"🙅🏾‍♂️","text":"","type":1,"order":783,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man gesturing NO: dark skin tone","hexcode":"1F645-1F3FF-200D-2642-FE0F","emoji":"🙅🏿‍♂️","text":"","type":1,"order":785,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman gesturing NO","hexcode":"1F645-200D-2640-FE0F","tags":["forbidden","gesture","hand","no","not","prohibit","woman"],"emoji":"🙅‍♀️","text":"","type":1,"order":787,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman gesturing NO: light skin tone","hexcode":"1F645-1F3FB-200D-2640-FE0F","emoji":"🙅🏻‍♀️","text":"","type":1,"order":789,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman gesturing NO: medium-light skin tone","hexcode":"1F645-1F3FC-200D-2640-FE0F","emoji":"🙅🏼‍♀️","text":"","type":1,"order":791,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman gesturing NO: medium skin tone","hexcode":"1F645-1F3FD-200D-2640-FE0F","emoji":"🙅🏽‍♀️","text":"","type":1,"order":793,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman gesturing NO: medium-dark skin tone","hexcode":"1F645-1F3FE-200D-2640-FE0F","emoji":"🙅🏾‍♀️","text":"","type":1,"order":795,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman gesturing NO: dark skin tone","hexcode":"1F645-1F3FF-200D-2640-FE0F","emoji":"🙅🏿‍♀️","text":"","type":1,"order":797,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"person gesturing OK","hexcode":"1F646","tags":["exercise","gesture","gesturing","hand","ok","omg","person"],"emoji":"🙆","text":"","type":1,"order":799,"group":1,"subgroup":24,"version":0.6,"skins":[{"label":"person gesturing OK: light skin tone","hexcode":"1F646-1F3FB","emoji":"🙆🏻","text":"","type":1,"order":800,"group":1,"subgroup":24,"version":1,"tone":1},{"label":"person gesturing OK: medium-light skin tone","hexcode":"1F646-1F3FC","emoji":"🙆🏼","text":"","type":1,"order":801,"group":1,"subgroup":24,"version":1,"tone":2},{"label":"person gesturing OK: medium skin tone","hexcode":"1F646-1F3FD","emoji":"🙆🏽","text":"","type":1,"order":802,"group":1,"subgroup":24,"version":1,"tone":3},{"label":"person gesturing OK: medium-dark skin tone","hexcode":"1F646-1F3FE","emoji":"🙆🏾","text":"","type":1,"order":803,"group":1,"subgroup":24,"version":1,"tone":4},{"label":"person gesturing OK: dark skin tone","hexcode":"1F646-1F3FF","emoji":"🙆🏿","text":"","type":1,"order":804,"group":1,"subgroup":24,"version":1,"tone":5}]},{"label":"man gesturing OK","hexcode":"1F646-200D-2642-FE0F","tags":["exercise","gesture","gesturing","hand","man","ok","omg"],"emoji":"🙆‍♂️","text":"","type":1,"order":805,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man gesturing OK: light skin tone","hexcode":"1F646-1F3FB-200D-2642-FE0F","emoji":"🙆🏻‍♂️","text":"","type":1,"order":807,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man gesturing OK: medium-light skin tone","hexcode":"1F646-1F3FC-200D-2642-FE0F","emoji":"🙆🏼‍♂️","text":"","type":1,"order":809,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man gesturing OK: medium skin tone","hexcode":"1F646-1F3FD-200D-2642-FE0F","emoji":"🙆🏽‍♂️","text":"","type":1,"order":811,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man gesturing OK: medium-dark skin tone","hexcode":"1F646-1F3FE-200D-2642-FE0F","emoji":"🙆🏾‍♂️","text":"","type":1,"order":813,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man gesturing OK: dark skin tone","hexcode":"1F646-1F3FF-200D-2642-FE0F","emoji":"🙆🏿‍♂️","text":"","type":1,"order":815,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman gesturing OK","hexcode":"1F646-200D-2640-FE0F","tags":["exercise","gesture","gesturing","hand","ok","omg","woman"],"emoji":"🙆‍♀️","text":"","type":1,"order":817,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman gesturing OK: light skin tone","hexcode":"1F646-1F3FB-200D-2640-FE0F","emoji":"🙆🏻‍♀️","text":"","type":1,"order":819,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman gesturing OK: medium-light skin tone","hexcode":"1F646-1F3FC-200D-2640-FE0F","emoji":"🙆🏼‍♀️","text":"","type":1,"order":821,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman gesturing OK: medium skin tone","hexcode":"1F646-1F3FD-200D-2640-FE0F","emoji":"🙆🏽‍♀️","text":"","type":1,"order":823,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman gesturing OK: medium-dark skin tone","hexcode":"1F646-1F3FE-200D-2640-FE0F","emoji":"🙆🏾‍♀️","text":"","type":1,"order":825,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman gesturing OK: dark skin tone","hexcode":"1F646-1F3FF-200D-2640-FE0F","emoji":"🙆🏿‍♀️","text":"","type":1,"order":827,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"person tipping hand","hexcode":"1F481","tags":["fetch","flick","flip","gossip","hand","person","sarcasm","sarcastic","sassy","seriously","tipping","whatever"],"emoji":"💁","text":"","type":1,"order":829,"group":1,"subgroup":24,"version":0.6,"skins":[{"label":"person tipping hand: light skin tone","hexcode":"1F481-1F3FB","emoji":"💁🏻","text":"","type":1,"order":830,"group":1,"subgroup":24,"version":1,"tone":1},{"label":"person tipping hand: medium-light skin tone","hexcode":"1F481-1F3FC","emoji":"💁🏼","text":"","type":1,"order":831,"group":1,"subgroup":24,"version":1,"tone":2},{"label":"person tipping hand: medium skin tone","hexcode":"1F481-1F3FD","emoji":"💁🏽","text":"","type":1,"order":832,"group":1,"subgroup":24,"version":1,"tone":3},{"label":"person tipping hand: medium-dark skin tone","hexcode":"1F481-1F3FE","emoji":"💁🏾","text":"","type":1,"order":833,"group":1,"subgroup":24,"version":1,"tone":4},{"label":"person tipping hand: dark skin tone","hexcode":"1F481-1F3FF","emoji":"💁🏿","text":"","type":1,"order":834,"group":1,"subgroup":24,"version":1,"tone":5}]},{"label":"man tipping hand","hexcode":"1F481-200D-2642-FE0F","tags":["fetch","flick","flip","gossip","hand","man","sarcasm","sarcastic","sassy","seriously","tipping","whatever"],"emoji":"💁‍♂️","text":"","type":1,"order":835,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man tipping hand: light skin tone","hexcode":"1F481-1F3FB-200D-2642-FE0F","emoji":"💁🏻‍♂️","text":"","type":1,"order":837,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man tipping hand: medium-light skin tone","hexcode":"1F481-1F3FC-200D-2642-FE0F","emoji":"💁🏼‍♂️","text":"","type":1,"order":839,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man tipping hand: medium skin tone","hexcode":"1F481-1F3FD-200D-2642-FE0F","emoji":"💁🏽‍♂️","text":"","type":1,"order":841,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man tipping hand: medium-dark skin tone","hexcode":"1F481-1F3FE-200D-2642-FE0F","emoji":"💁🏾‍♂️","text":"","type":1,"order":843,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man tipping hand: dark skin tone","hexcode":"1F481-1F3FF-200D-2642-FE0F","emoji":"💁🏿‍♂️","text":"","type":1,"order":845,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman tipping hand","hexcode":"1F481-200D-2640-FE0F","tags":["fetch","flick","flip","gossip","hand","sarcasm","sarcastic","sassy","seriously","tipping","whatever","woman"],"emoji":"💁‍♀️","text":"","type":1,"order":847,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman tipping hand: light skin tone","hexcode":"1F481-1F3FB-200D-2640-FE0F","emoji":"💁🏻‍♀️","text":"","type":1,"order":849,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman tipping hand: medium-light skin tone","hexcode":"1F481-1F3FC-200D-2640-FE0F","emoji":"💁🏼‍♀️","text":"","type":1,"order":851,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman tipping hand: medium skin tone","hexcode":"1F481-1F3FD-200D-2640-FE0F","emoji":"💁🏽‍♀️","text":"","type":1,"order":853,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman tipping hand: medium-dark skin tone","hexcode":"1F481-1F3FE-200D-2640-FE0F","emoji":"💁🏾‍♀️","text":"","type":1,"order":855,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman tipping hand: dark skin tone","hexcode":"1F481-1F3FF-200D-2640-FE0F","emoji":"💁🏿‍♀️","text":"","type":1,"order":857,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"person raising hand","hexcode":"1F64B","tags":["gesture","hand","here","know","me","person","pick","question","raise","raising"],"emoji":"🙋","text":"","type":1,"order":859,"group":1,"subgroup":24,"version":0.6,"skins":[{"label":"person raising hand: light skin tone","hexcode":"1F64B-1F3FB","emoji":"🙋🏻","text":"","type":1,"order":860,"group":1,"subgroup":24,"version":1,"tone":1},{"label":"person raising hand: medium-light skin tone","hexcode":"1F64B-1F3FC","emoji":"🙋🏼","text":"","type":1,"order":861,"group":1,"subgroup":24,"version":1,"tone":2},{"label":"person raising hand: medium skin tone","hexcode":"1F64B-1F3FD","emoji":"🙋🏽","text":"","type":1,"order":862,"group":1,"subgroup":24,"version":1,"tone":3},{"label":"person raising hand: medium-dark skin tone","hexcode":"1F64B-1F3FE","emoji":"🙋🏾","text":"","type":1,"order":863,"group":1,"subgroup":24,"version":1,"tone":4},{"label":"person raising hand: dark skin tone","hexcode":"1F64B-1F3FF","emoji":"🙋🏿","text":"","type":1,"order":864,"group":1,"subgroup":24,"version":1,"tone":5}]},{"label":"man raising hand","hexcode":"1F64B-200D-2642-FE0F","tags":["gesture","hand","here","know","man","me","pick","question","raise","raising"],"emoji":"🙋‍♂️","text":"","type":1,"order":865,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man raising hand: light skin tone","hexcode":"1F64B-1F3FB-200D-2642-FE0F","emoji":"🙋🏻‍♂️","text":"","type":1,"order":867,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man raising hand: medium-light skin tone","hexcode":"1F64B-1F3FC-200D-2642-FE0F","emoji":"🙋🏼‍♂️","text":"","type":1,"order":869,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man raising hand: medium skin tone","hexcode":"1F64B-1F3FD-200D-2642-FE0F","emoji":"🙋🏽‍♂️","text":"","type":1,"order":871,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man raising hand: medium-dark skin tone","hexcode":"1F64B-1F3FE-200D-2642-FE0F","emoji":"🙋🏾‍♂️","text":"","type":1,"order":873,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man raising hand: dark skin tone","hexcode":"1F64B-1F3FF-200D-2642-FE0F","emoji":"🙋🏿‍♂️","text":"","type":1,"order":875,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman raising hand","hexcode":"1F64B-200D-2640-FE0F","tags":["gesture","hand","here","know","me","pick","question","raise","raising","woman"],"emoji":"🙋‍♀️","text":"","type":1,"order":877,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman raising hand: light skin tone","hexcode":"1F64B-1F3FB-200D-2640-FE0F","emoji":"🙋🏻‍♀️","text":"","type":1,"order":879,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman raising hand: medium-light skin tone","hexcode":"1F64B-1F3FC-200D-2640-FE0F","emoji":"🙋🏼‍♀️","text":"","type":1,"order":881,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman raising hand: medium skin tone","hexcode":"1F64B-1F3FD-200D-2640-FE0F","emoji":"🙋🏽‍♀️","text":"","type":1,"order":883,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman raising hand: medium-dark skin tone","hexcode":"1F64B-1F3FE-200D-2640-FE0F","emoji":"🙋🏾‍♀️","text":"","type":1,"order":885,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman raising hand: dark skin tone","hexcode":"1F64B-1F3FF-200D-2640-FE0F","emoji":"🙋🏿‍♀️","text":"","type":1,"order":887,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"deaf person","hexcode":"1F9CF","tags":["accessibility","deaf","ear","gesture","hear","person"],"emoji":"🧏","text":"","type":1,"order":889,"group":1,"subgroup":24,"version":12,"skins":[{"label":"deaf person: light skin tone","hexcode":"1F9CF-1F3FB","emoji":"🧏🏻","text":"","type":1,"order":890,"group":1,"subgroup":24,"version":12,"tone":1},{"label":"deaf person: medium-light skin tone","hexcode":"1F9CF-1F3FC","emoji":"🧏🏼","text":"","type":1,"order":891,"group":1,"subgroup":24,"version":12,"tone":2},{"label":"deaf person: medium skin tone","hexcode":"1F9CF-1F3FD","emoji":"🧏🏽","text":"","type":1,"order":892,"group":1,"subgroup":24,"version":12,"tone":3},{"label":"deaf person: medium-dark skin tone","hexcode":"1F9CF-1F3FE","emoji":"🧏🏾","text":"","type":1,"order":893,"group":1,"subgroup":24,"version":12,"tone":4},{"label":"deaf person: dark skin tone","hexcode":"1F9CF-1F3FF","emoji":"🧏🏿","text":"","type":1,"order":894,"group":1,"subgroup":24,"version":12,"tone":5}]},{"label":"deaf man","hexcode":"1F9CF-200D-2642-FE0F","tags":["accessibility","deaf","ear","gesture","hear","man"],"emoji":"🧏‍♂️","text":"","type":1,"order":895,"group":1,"subgroup":24,"version":12,"gender":1,"skins":[{"label":"deaf man: light skin tone","hexcode":"1F9CF-1F3FB-200D-2642-FE0F","emoji":"🧏🏻‍♂️","text":"","type":1,"order":897,"group":1,"subgroup":24,"version":12,"gender":1,"tone":1},{"label":"deaf man: medium-light skin tone","hexcode":"1F9CF-1F3FC-200D-2642-FE0F","emoji":"🧏🏼‍♂️","text":"","type":1,"order":899,"group":1,"subgroup":24,"version":12,"gender":1,"tone":2},{"label":"deaf man: medium skin tone","hexcode":"1F9CF-1F3FD-200D-2642-FE0F","emoji":"🧏🏽‍♂️","text":"","type":1,"order":901,"group":1,"subgroup":24,"version":12,"gender":1,"tone":3},{"label":"deaf man: medium-dark skin tone","hexcode":"1F9CF-1F3FE-200D-2642-FE0F","emoji":"🧏🏾‍♂️","text":"","type":1,"order":903,"group":1,"subgroup":24,"version":12,"gender":1,"tone":4},{"label":"deaf man: dark skin tone","hexcode":"1F9CF-1F3FF-200D-2642-FE0F","emoji":"🧏🏿‍♂️","text":"","type":1,"order":905,"group":1,"subgroup":24,"version":12,"gender":1,"tone":5}]},{"label":"deaf woman","hexcode":"1F9CF-200D-2640-FE0F","tags":["accessibility","deaf","ear","gesture","hear","woman"],"emoji":"🧏‍♀️","text":"","type":1,"order":907,"group":1,"subgroup":24,"version":12,"gender":0,"skins":[{"label":"deaf woman: light skin tone","hexcode":"1F9CF-1F3FB-200D-2640-FE0F","emoji":"🧏🏻‍♀️","text":"","type":1,"order":909,"group":1,"subgroup":24,"version":12,"gender":0,"tone":1},{"label":"deaf woman: medium-light skin tone","hexcode":"1F9CF-1F3FC-200D-2640-FE0F","emoji":"🧏🏼‍♀️","text":"","type":1,"order":911,"group":1,"subgroup":24,"version":12,"gender":0,"tone":2},{"label":"deaf woman: medium skin tone","hexcode":"1F9CF-1F3FD-200D-2640-FE0F","emoji":"🧏🏽‍♀️","text":"","type":1,"order":913,"group":1,"subgroup":24,"version":12,"gender":0,"tone":3},{"label":"deaf woman: medium-dark skin tone","hexcode":"1F9CF-1F3FE-200D-2640-FE0F","emoji":"🧏🏾‍♀️","text":"","type":1,"order":915,"group":1,"subgroup":24,"version":12,"gender":0,"tone":4},{"label":"deaf woman: dark skin tone","hexcode":"1F9CF-1F3FF-200D-2640-FE0F","emoji":"🧏🏿‍♀️","text":"","type":1,"order":917,"group":1,"subgroup":24,"version":12,"gender":0,"tone":5}]},{"label":"person bowing","hexcode":"1F647","tags":["apology","ask","beg","bow","bowing","favor","forgive","gesture","meditate","meditation","person","pity","regret","sorry"],"emoji":"🙇","text":"","type":1,"order":919,"group":1,"subgroup":24,"version":0.6,"skins":[{"label":"person bowing: light skin tone","hexcode":"1F647-1F3FB","emoji":"🙇🏻","text":"","type":1,"order":920,"group":1,"subgroup":24,"version":1,"tone":1},{"label":"person bowing: medium-light skin tone","hexcode":"1F647-1F3FC","emoji":"🙇🏼","text":"","type":1,"order":921,"group":1,"subgroup":24,"version":1,"tone":2},{"label":"person bowing: medium skin tone","hexcode":"1F647-1F3FD","emoji":"🙇🏽","text":"","type":1,"order":922,"group":1,"subgroup":24,"version":1,"tone":3},{"label":"person bowing: medium-dark skin tone","hexcode":"1F647-1F3FE","emoji":"🙇🏾","text":"","type":1,"order":923,"group":1,"subgroup":24,"version":1,"tone":4},{"label":"person bowing: dark skin tone","hexcode":"1F647-1F3FF","emoji":"🙇🏿","text":"","type":1,"order":924,"group":1,"subgroup":24,"version":1,"tone":5}]},{"label":"man bowing","hexcode":"1F647-200D-2642-FE0F","tags":["apology","ask","beg","bow","bowing","favor","forgive","gesture","man","meditate","meditation","pity","regret","sorry"],"emoji":"🙇‍♂️","text":"","type":1,"order":925,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man bowing: light skin tone","hexcode":"1F647-1F3FB-200D-2642-FE0F","emoji":"🙇🏻‍♂️","text":"","type":1,"order":927,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man bowing: medium-light skin tone","hexcode":"1F647-1F3FC-200D-2642-FE0F","emoji":"🙇🏼‍♂️","text":"","type":1,"order":929,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man bowing: medium skin tone","hexcode":"1F647-1F3FD-200D-2642-FE0F","emoji":"🙇🏽‍♂️","text":"","type":1,"order":931,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man bowing: medium-dark skin tone","hexcode":"1F647-1F3FE-200D-2642-FE0F","emoji":"🙇🏾‍♂️","text":"","type":1,"order":933,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man bowing: dark skin tone","hexcode":"1F647-1F3FF-200D-2642-FE0F","emoji":"🙇🏿‍♂️","text":"","type":1,"order":935,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman bowing","hexcode":"1F647-200D-2640-FE0F","tags":["apology","ask","beg","bow","bowing","favor","forgive","gesture","meditate","meditation","pity","regret","sorry","woman"],"emoji":"🙇‍♀️","text":"","type":1,"order":937,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman bowing: light skin tone","hexcode":"1F647-1F3FB-200D-2640-FE0F","emoji":"🙇🏻‍♀️","text":"","type":1,"order":939,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman bowing: medium-light skin tone","hexcode":"1F647-1F3FC-200D-2640-FE0F","emoji":"🙇🏼‍♀️","text":"","type":1,"order":941,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman bowing: medium skin tone","hexcode":"1F647-1F3FD-200D-2640-FE0F","emoji":"🙇🏽‍♀️","text":"","type":1,"order":943,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman bowing: medium-dark skin tone","hexcode":"1F647-1F3FE-200D-2640-FE0F","emoji":"🙇🏾‍♀️","text":"","type":1,"order":945,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman bowing: dark skin tone","hexcode":"1F647-1F3FF-200D-2640-FE0F","emoji":"🙇🏿‍♀️","text":"","type":1,"order":947,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"person facepalming","hexcode":"1F926","tags":["again","bewilder","disbelief","exasperation","facepalm","no","not","oh","omg","person","shock","smh"],"emoji":"🤦","text":"","type":1,"order":949,"group":1,"subgroup":24,"version":3,"skins":[{"label":"person facepalming: light skin tone","hexcode":"1F926-1F3FB","emoji":"🤦🏻","text":"","type":1,"order":950,"group":1,"subgroup":24,"version":3,"tone":1},{"label":"person facepalming: medium-light skin tone","hexcode":"1F926-1F3FC","emoji":"🤦🏼","text":"","type":1,"order":951,"group":1,"subgroup":24,"version":3,"tone":2},{"label":"person facepalming: medium skin tone","hexcode":"1F926-1F3FD","emoji":"🤦🏽","text":"","type":1,"order":952,"group":1,"subgroup":24,"version":3,"tone":3},{"label":"person facepalming: medium-dark skin tone","hexcode":"1F926-1F3FE","emoji":"🤦🏾","text":"","type":1,"order":953,"group":1,"subgroup":24,"version":3,"tone":4},{"label":"person facepalming: dark skin tone","hexcode":"1F926-1F3FF","emoji":"🤦🏿","text":"","type":1,"order":954,"group":1,"subgroup":24,"version":3,"tone":5}]},{"label":"man facepalming","hexcode":"1F926-200D-2642-FE0F","tags":["again","bewilder","disbelief","exasperation","facepalm","man","no","not","oh","omg","shock","smh"],"emoji":"🤦‍♂️","text":"","type":1,"order":955,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man facepalming: light skin tone","hexcode":"1F926-1F3FB-200D-2642-FE0F","emoji":"🤦🏻‍♂️","text":"","type":1,"order":957,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man facepalming: medium-light skin tone","hexcode":"1F926-1F3FC-200D-2642-FE0F","emoji":"🤦🏼‍♂️","text":"","type":1,"order":959,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man facepalming: medium skin tone","hexcode":"1F926-1F3FD-200D-2642-FE0F","emoji":"🤦🏽‍♂️","text":"","type":1,"order":961,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man facepalming: medium-dark skin tone","hexcode":"1F926-1F3FE-200D-2642-FE0F","emoji":"🤦🏾‍♂️","text":"","type":1,"order":963,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man facepalming: dark skin tone","hexcode":"1F926-1F3FF-200D-2642-FE0F","emoji":"🤦🏿‍♂️","text":"","type":1,"order":965,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman facepalming","hexcode":"1F926-200D-2640-FE0F","tags":["again","bewilder","disbelief","exasperation","facepalm","no","not","oh","omg","shock","smh","woman"],"emoji":"🤦‍♀️","text":"","type":1,"order":967,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman facepalming: light skin tone","hexcode":"1F926-1F3FB-200D-2640-FE0F","emoji":"🤦🏻‍♀️","text":"","type":1,"order":969,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman facepalming: medium-light skin tone","hexcode":"1F926-1F3FC-200D-2640-FE0F","emoji":"🤦🏼‍♀️","text":"","type":1,"order":971,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman facepalming: medium skin tone","hexcode":"1F926-1F3FD-200D-2640-FE0F","emoji":"🤦🏽‍♀️","text":"","type":1,"order":973,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman facepalming: medium-dark skin tone","hexcode":"1F926-1F3FE-200D-2640-FE0F","emoji":"🤦🏾‍♀️","text":"","type":1,"order":975,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman facepalming: dark skin tone","hexcode":"1F926-1F3FF-200D-2640-FE0F","emoji":"🤦🏿‍♀️","text":"","type":1,"order":977,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"person shrugging","hexcode":"1F937","tags":["doubt","dunno","guess","idk","ignorance","indifference","knows","maybe","person","shrug","shrugging","whatever","who"],"emoji":"🤷","text":"","type":1,"order":979,"group":1,"subgroup":24,"version":3,"skins":[{"label":"person shrugging: light skin tone","hexcode":"1F937-1F3FB","emoji":"🤷🏻","text":"","type":1,"order":980,"group":1,"subgroup":24,"version":3,"tone":1},{"label":"person shrugging: medium-light skin tone","hexcode":"1F937-1F3FC","emoji":"🤷🏼","text":"","type":1,"order":981,"group":1,"subgroup":24,"version":3,"tone":2},{"label":"person shrugging: medium skin tone","hexcode":"1F937-1F3FD","emoji":"🤷🏽","text":"","type":1,"order":982,"group":1,"subgroup":24,"version":3,"tone":3},{"label":"person shrugging: medium-dark skin tone","hexcode":"1F937-1F3FE","emoji":"🤷🏾","text":"","type":1,"order":983,"group":1,"subgroup":24,"version":3,"tone":4},{"label":"person shrugging: dark skin tone","hexcode":"1F937-1F3FF","emoji":"🤷🏿","text":"","type":1,"order":984,"group":1,"subgroup":24,"version":3,"tone":5}]},{"label":"man shrugging","hexcode":"1F937-200D-2642-FE0F","tags":["doubt","dunno","guess","idk","ignorance","indifference","knows","man","maybe","shrug","shrugging","whatever","who"],"emoji":"🤷‍♂️","text":"","type":1,"order":985,"group":1,"subgroup":24,"version":4,"gender":1,"skins":[{"label":"man shrugging: light skin tone","hexcode":"1F937-1F3FB-200D-2642-FE0F","emoji":"🤷🏻‍♂️","text":"","type":1,"order":987,"group":1,"subgroup":24,"version":4,"gender":1,"tone":1},{"label":"man shrugging: medium-light skin tone","hexcode":"1F937-1F3FC-200D-2642-FE0F","emoji":"🤷🏼‍♂️","text":"","type":1,"order":989,"group":1,"subgroup":24,"version":4,"gender":1,"tone":2},{"label":"man shrugging: medium skin tone","hexcode":"1F937-1F3FD-200D-2642-FE0F","emoji":"🤷🏽‍♂️","text":"","type":1,"order":991,"group":1,"subgroup":24,"version":4,"gender":1,"tone":3},{"label":"man shrugging: medium-dark skin tone","hexcode":"1F937-1F3FE-200D-2642-FE0F","emoji":"🤷🏾‍♂️","text":"","type":1,"order":993,"group":1,"subgroup":24,"version":4,"gender":1,"tone":4},{"label":"man shrugging: dark skin tone","hexcode":"1F937-1F3FF-200D-2642-FE0F","emoji":"🤷🏿‍♂️","text":"","type":1,"order":995,"group":1,"subgroup":24,"version":4,"gender":1,"tone":5}]},{"label":"woman shrugging","hexcode":"1F937-200D-2640-FE0F","tags":["doubt","dunno","guess","idk","ignorance","indifference","knows","maybe","shrug","shrugging","whatever","who","woman"],"emoji":"🤷‍♀️","text":"","type":1,"order":997,"group":1,"subgroup":24,"version":4,"gender":0,"skins":[{"label":"woman shrugging: light skin tone","hexcode":"1F937-1F3FB-200D-2640-FE0F","emoji":"🤷🏻‍♀️","text":"","type":1,"order":999,"group":1,"subgroup":24,"version":4,"gender":0,"tone":1},{"label":"woman shrugging: medium-light skin tone","hexcode":"1F937-1F3FC-200D-2640-FE0F","emoji":"🤷🏼‍♀️","text":"","type":1,"order":1001,"group":1,"subgroup":24,"version":4,"gender":0,"tone":2},{"label":"woman shrugging: medium skin tone","hexcode":"1F937-1F3FD-200D-2640-FE0F","emoji":"🤷🏽‍♀️","text":"","type":1,"order":1003,"group":1,"subgroup":24,"version":4,"gender":0,"tone":3},{"label":"woman shrugging: medium-dark skin tone","hexcode":"1F937-1F3FE-200D-2640-FE0F","emoji":"🤷🏾‍♀️","text":"","type":1,"order":1005,"group":1,"subgroup":24,"version":4,"gender":0,"tone":4},{"label":"woman shrugging: dark skin tone","hexcode":"1F937-1F3FF-200D-2640-FE0F","emoji":"🤷🏿‍♀️","text":"","type":1,"order":1007,"group":1,"subgroup":24,"version":4,"gender":0,"tone":5}]},{"label":"health worker","hexcode":"1F9D1-200D-2695-FE0F","tags":["doctor","health","healthcare","nurse","therapist","worker"],"emoji":"🧑‍⚕️","text":"","type":1,"order":1009,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"health worker: light skin tone","hexcode":"1F9D1-1F3FB-200D-2695-FE0F","emoji":"🧑🏻‍⚕️","text":"","type":1,"order":1011,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"health worker: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-2695-FE0F","emoji":"🧑🏼‍⚕️","text":"","type":1,"order":1013,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"health worker: medium skin tone","hexcode":"1F9D1-1F3FD-200D-2695-FE0F","emoji":"🧑🏽‍⚕️","text":"","type":1,"order":1015,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"health worker: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-2695-FE0F","emoji":"🧑🏾‍⚕️","text":"","type":1,"order":1017,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"health worker: dark skin tone","hexcode":"1F9D1-1F3FF-200D-2695-FE0F","emoji":"🧑🏿‍⚕️","text":"","type":1,"order":1019,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man health worker","hexcode":"1F468-200D-2695-FE0F","tags":["doctor","health","healthcare","man","nurse","therapist","worker"],"emoji":"👨‍⚕️","text":"","type":1,"order":1021,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man health worker: light skin tone","hexcode":"1F468-1F3FB-200D-2695-FE0F","emoji":"👨🏻‍⚕️","text":"","type":1,"order":1023,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man health worker: medium-light skin tone","hexcode":"1F468-1F3FC-200D-2695-FE0F","emoji":"👨🏼‍⚕️","text":"","type":1,"order":1025,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man health worker: medium skin tone","hexcode":"1F468-1F3FD-200D-2695-FE0F","emoji":"👨🏽‍⚕️","text":"","type":1,"order":1027,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man health worker: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-2695-FE0F","emoji":"👨🏾‍⚕️","text":"","type":1,"order":1029,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man health worker: dark skin tone","hexcode":"1F468-1F3FF-200D-2695-FE0F","emoji":"👨🏿‍⚕️","text":"","type":1,"order":1031,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman health worker","hexcode":"1F469-200D-2695-FE0F","tags":["doctor","health","healthcare","nurse","therapist","woman","worker"],"emoji":"👩‍⚕️","text":"","type":1,"order":1033,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman health worker: light skin tone","hexcode":"1F469-1F3FB-200D-2695-FE0F","emoji":"👩🏻‍⚕️","text":"","type":1,"order":1035,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman health worker: medium-light skin tone","hexcode":"1F469-1F3FC-200D-2695-FE0F","emoji":"👩🏼‍⚕️","text":"","type":1,"order":1037,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman health worker: medium skin tone","hexcode":"1F469-1F3FD-200D-2695-FE0F","emoji":"👩🏽‍⚕️","text":"","type":1,"order":1039,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman health worker: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-2695-FE0F","emoji":"👩🏾‍⚕️","text":"","type":1,"order":1041,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman health worker: dark skin tone","hexcode":"1F469-1F3FF-200D-2695-FE0F","emoji":"👩🏿‍⚕️","text":"","type":1,"order":1043,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"student","hexcode":"1F9D1-200D-1F393","tags":["graduate"],"emoji":"🧑‍🎓","text":"","type":1,"order":1045,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"student: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F393","emoji":"🧑🏻‍🎓","text":"","type":1,"order":1046,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"student: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F393","emoji":"🧑🏼‍🎓","text":"","type":1,"order":1047,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"student: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F393","emoji":"🧑🏽‍🎓","text":"","type":1,"order":1048,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"student: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F393","emoji":"🧑🏾‍🎓","text":"","type":1,"order":1049,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"student: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F393","emoji":"🧑🏿‍🎓","text":"","type":1,"order":1050,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man student","hexcode":"1F468-200D-1F393","tags":["graduate","man","student"],"emoji":"👨‍🎓","text":"","type":1,"order":1051,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man student: light skin tone","hexcode":"1F468-1F3FB-200D-1F393","emoji":"👨🏻‍🎓","text":"","type":1,"order":1052,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man student: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F393","emoji":"👨🏼‍🎓","text":"","type":1,"order":1053,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man student: medium skin tone","hexcode":"1F468-1F3FD-200D-1F393","emoji":"👨🏽‍🎓","text":"","type":1,"order":1054,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man student: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F393","emoji":"👨🏾‍🎓","text":"","type":1,"order":1055,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man student: dark skin tone","hexcode":"1F468-1F3FF-200D-1F393","emoji":"👨🏿‍🎓","text":"","type":1,"order":1056,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman student","hexcode":"1F469-200D-1F393","tags":["graduate","student","woman"],"emoji":"👩‍🎓","text":"","type":1,"order":1057,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman student: light skin tone","hexcode":"1F469-1F3FB-200D-1F393","emoji":"👩🏻‍🎓","text":"","type":1,"order":1058,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman student: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F393","emoji":"👩🏼‍🎓","text":"","type":1,"order":1059,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman student: medium skin tone","hexcode":"1F469-1F3FD-200D-1F393","emoji":"👩🏽‍🎓","text":"","type":1,"order":1060,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman student: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F393","emoji":"👩🏾‍🎓","text":"","type":1,"order":1061,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman student: dark skin tone","hexcode":"1F469-1F3FF-200D-1F393","emoji":"👩🏿‍🎓","text":"","type":1,"order":1062,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"teacher","hexcode":"1F9D1-200D-1F3EB","tags":["instructor","lecturer","professor"],"emoji":"🧑‍🏫","text":"","type":1,"order":1063,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"teacher: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F3EB","emoji":"🧑🏻‍🏫","text":"","type":1,"order":1064,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"teacher: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F3EB","emoji":"🧑🏼‍🏫","text":"","type":1,"order":1065,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"teacher: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F3EB","emoji":"🧑🏽‍🏫","text":"","type":1,"order":1066,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"teacher: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F3EB","emoji":"🧑🏾‍🏫","text":"","type":1,"order":1067,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"teacher: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F3EB","emoji":"🧑🏿‍🏫","text":"","type":1,"order":1068,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man teacher","hexcode":"1F468-200D-1F3EB","tags":["instructor","lecturer","man","professor","teacher"],"emoji":"👨‍🏫","text":"","type":1,"order":1069,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man teacher: light skin tone","hexcode":"1F468-1F3FB-200D-1F3EB","emoji":"👨🏻‍🏫","text":"","type":1,"order":1070,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man teacher: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F3EB","emoji":"👨🏼‍🏫","text":"","type":1,"order":1071,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man teacher: medium skin tone","hexcode":"1F468-1F3FD-200D-1F3EB","emoji":"👨🏽‍🏫","text":"","type":1,"order":1072,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man teacher: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F3EB","emoji":"👨🏾‍🏫","text":"","type":1,"order":1073,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man teacher: dark skin tone","hexcode":"1F468-1F3FF-200D-1F3EB","emoji":"👨🏿‍🏫","text":"","type":1,"order":1074,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman teacher","hexcode":"1F469-200D-1F3EB","tags":["instructor","lecturer","professor","teacher","woman"],"emoji":"👩‍🏫","text":"","type":1,"order":1075,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman teacher: light skin tone","hexcode":"1F469-1F3FB-200D-1F3EB","emoji":"👩🏻‍🏫","text":"","type":1,"order":1076,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman teacher: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F3EB","emoji":"👩🏼‍🏫","text":"","type":1,"order":1077,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman teacher: medium skin tone","hexcode":"1F469-1F3FD-200D-1F3EB","emoji":"👩🏽‍🏫","text":"","type":1,"order":1078,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman teacher: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F3EB","emoji":"👩🏾‍🏫","text":"","type":1,"order":1079,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman teacher: dark skin tone","hexcode":"1F469-1F3FF-200D-1F3EB","emoji":"👩🏿‍🏫","text":"","type":1,"order":1080,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"judge","hexcode":"1F9D1-200D-2696-FE0F","tags":["justice","law","scales"],"emoji":"🧑‍⚖️","text":"","type":1,"order":1081,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"judge: light skin tone","hexcode":"1F9D1-1F3FB-200D-2696-FE0F","emoji":"🧑🏻‍⚖️","text":"","type":1,"order":1083,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"judge: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-2696-FE0F","emoji":"🧑🏼‍⚖️","text":"","type":1,"order":1085,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"judge: medium skin tone","hexcode":"1F9D1-1F3FD-200D-2696-FE0F","emoji":"🧑🏽‍⚖️","text":"","type":1,"order":1087,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"judge: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-2696-FE0F","emoji":"🧑🏾‍⚖️","text":"","type":1,"order":1089,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"judge: dark skin tone","hexcode":"1F9D1-1F3FF-200D-2696-FE0F","emoji":"🧑🏿‍⚖️","text":"","type":1,"order":1091,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man judge","hexcode":"1F468-200D-2696-FE0F","tags":["judge","justice","law","man","scales"],"emoji":"👨‍⚖️","text":"","type":1,"order":1093,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man judge: light skin tone","hexcode":"1F468-1F3FB-200D-2696-FE0F","emoji":"👨🏻‍⚖️","text":"","type":1,"order":1095,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man judge: medium-light skin tone","hexcode":"1F468-1F3FC-200D-2696-FE0F","emoji":"👨🏼‍⚖️","text":"","type":1,"order":1097,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man judge: medium skin tone","hexcode":"1F468-1F3FD-200D-2696-FE0F","emoji":"👨🏽‍⚖️","text":"","type":1,"order":1099,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man judge: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-2696-FE0F","emoji":"👨🏾‍⚖️","text":"","type":1,"order":1101,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man judge: dark skin tone","hexcode":"1F468-1F3FF-200D-2696-FE0F","emoji":"👨🏿‍⚖️","text":"","type":1,"order":1103,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman judge","hexcode":"1F469-200D-2696-FE0F","tags":["judge","justice","law","scales","woman"],"emoji":"👩‍⚖️","text":"","type":1,"order":1105,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman judge: light skin tone","hexcode":"1F469-1F3FB-200D-2696-FE0F","emoji":"👩🏻‍⚖️","text":"","type":1,"order":1107,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman judge: medium-light skin tone","hexcode":"1F469-1F3FC-200D-2696-FE0F","emoji":"👩🏼‍⚖️","text":"","type":1,"order":1109,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman judge: medium skin tone","hexcode":"1F469-1F3FD-200D-2696-FE0F","emoji":"👩🏽‍⚖️","text":"","type":1,"order":1111,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman judge: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-2696-FE0F","emoji":"👩🏾‍⚖️","text":"","type":1,"order":1113,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman judge: dark skin tone","hexcode":"1F469-1F3FF-200D-2696-FE0F","emoji":"👩🏿‍⚖️","text":"","type":1,"order":1115,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"farmer","hexcode":"1F9D1-200D-1F33E","tags":["gardener","rancher"],"emoji":"🧑‍🌾","text":"","type":1,"order":1117,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"farmer: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F33E","emoji":"🧑🏻‍🌾","text":"","type":1,"order":1118,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"farmer: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F33E","emoji":"🧑🏼‍🌾","text":"","type":1,"order":1119,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"farmer: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F33E","emoji":"🧑🏽‍🌾","text":"","type":1,"order":1120,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"farmer: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F33E","emoji":"🧑🏾‍🌾","text":"","type":1,"order":1121,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"farmer: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F33E","emoji":"🧑🏿‍🌾","text":"","type":1,"order":1122,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man farmer","hexcode":"1F468-200D-1F33E","tags":["farmer","gardener","man","rancher"],"emoji":"👨‍🌾","text":"","type":1,"order":1123,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man farmer: light skin tone","hexcode":"1F468-1F3FB-200D-1F33E","emoji":"👨🏻‍🌾","text":"","type":1,"order":1124,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man farmer: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F33E","emoji":"👨🏼‍🌾","text":"","type":1,"order":1125,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man farmer: medium skin tone","hexcode":"1F468-1F3FD-200D-1F33E","emoji":"👨🏽‍🌾","text":"","type":1,"order":1126,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man farmer: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F33E","emoji":"👨🏾‍🌾","text":"","type":1,"order":1127,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man farmer: dark skin tone","hexcode":"1F468-1F3FF-200D-1F33E","emoji":"👨🏿‍🌾","text":"","type":1,"order":1128,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman farmer","hexcode":"1F469-200D-1F33E","tags":["farmer","gardener","rancher","woman"],"emoji":"👩‍🌾","text":"","type":1,"order":1129,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman farmer: light skin tone","hexcode":"1F469-1F3FB-200D-1F33E","emoji":"👩🏻‍🌾","text":"","type":1,"order":1130,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman farmer: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F33E","emoji":"👩🏼‍🌾","text":"","type":1,"order":1131,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman farmer: medium skin tone","hexcode":"1F469-1F3FD-200D-1F33E","emoji":"👩🏽‍🌾","text":"","type":1,"order":1132,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman farmer: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F33E","emoji":"👩🏾‍🌾","text":"","type":1,"order":1133,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman farmer: dark skin tone","hexcode":"1F469-1F3FF-200D-1F33E","emoji":"👩🏿‍🌾","text":"","type":1,"order":1134,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"cook","hexcode":"1F9D1-200D-1F373","tags":["chef"],"emoji":"🧑‍🍳","text":"","type":1,"order":1135,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"cook: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F373","emoji":"🧑🏻‍🍳","text":"","type":1,"order":1136,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"cook: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F373","emoji":"🧑🏼‍🍳","text":"","type":1,"order":1137,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"cook: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F373","emoji":"🧑🏽‍🍳","text":"","type":1,"order":1138,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"cook: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F373","emoji":"🧑🏾‍🍳","text":"","type":1,"order":1139,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"cook: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F373","emoji":"🧑🏿‍🍳","text":"","type":1,"order":1140,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man cook","hexcode":"1F468-200D-1F373","tags":["chef","cook","man"],"emoji":"👨‍🍳","text":"","type":1,"order":1141,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man cook: light skin tone","hexcode":"1F468-1F3FB-200D-1F373","emoji":"👨🏻‍🍳","text":"","type":1,"order":1142,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man cook: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F373","emoji":"👨🏼‍🍳","text":"","type":1,"order":1143,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man cook: medium skin tone","hexcode":"1F468-1F3FD-200D-1F373","emoji":"👨🏽‍🍳","text":"","type":1,"order":1144,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man cook: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F373","emoji":"👨🏾‍🍳","text":"","type":1,"order":1145,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man cook: dark skin tone","hexcode":"1F468-1F3FF-200D-1F373","emoji":"👨🏿‍🍳","text":"","type":1,"order":1146,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman cook","hexcode":"1F469-200D-1F373","tags":["chef","cook","woman"],"emoji":"👩‍🍳","text":"","type":1,"order":1147,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman cook: light skin tone","hexcode":"1F469-1F3FB-200D-1F373","emoji":"👩🏻‍🍳","text":"","type":1,"order":1148,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman cook: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F373","emoji":"👩🏼‍🍳","text":"","type":1,"order":1149,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman cook: medium skin tone","hexcode":"1F469-1F3FD-200D-1F373","emoji":"👩🏽‍🍳","text":"","type":1,"order":1150,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman cook: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F373","emoji":"👩🏾‍🍳","text":"","type":1,"order":1151,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman cook: dark skin tone","hexcode":"1F469-1F3FF-200D-1F373","emoji":"👩🏿‍🍳","text":"","type":1,"order":1152,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"mechanic","hexcode":"1F9D1-200D-1F527","tags":["electrician","plumber","tradesperson"],"emoji":"🧑‍🔧","text":"","type":1,"order":1153,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"mechanic: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F527","emoji":"🧑🏻‍🔧","text":"","type":1,"order":1154,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"mechanic: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F527","emoji":"🧑🏼‍🔧","text":"","type":1,"order":1155,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"mechanic: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F527","emoji":"🧑🏽‍🔧","text":"","type":1,"order":1156,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"mechanic: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F527","emoji":"🧑🏾‍🔧","text":"","type":1,"order":1157,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"mechanic: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F527","emoji":"🧑🏿‍🔧","text":"","type":1,"order":1158,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man mechanic","hexcode":"1F468-200D-1F527","tags":["electrician","man","mechanic","plumber","tradesperson"],"emoji":"👨‍🔧","text":"","type":1,"order":1159,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man mechanic: light skin tone","hexcode":"1F468-1F3FB-200D-1F527","emoji":"👨🏻‍🔧","text":"","type":1,"order":1160,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man mechanic: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F527","emoji":"👨🏼‍🔧","text":"","type":1,"order":1161,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man mechanic: medium skin tone","hexcode":"1F468-1F3FD-200D-1F527","emoji":"👨🏽‍🔧","text":"","type":1,"order":1162,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man mechanic: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F527","emoji":"👨🏾‍🔧","text":"","type":1,"order":1163,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man mechanic: dark skin tone","hexcode":"1F468-1F3FF-200D-1F527","emoji":"👨🏿‍🔧","text":"","type":1,"order":1164,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman mechanic","hexcode":"1F469-200D-1F527","tags":["electrician","mechanic","plumber","tradesperson","woman"],"emoji":"👩‍🔧","text":"","type":1,"order":1165,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman mechanic: light skin tone","hexcode":"1F469-1F3FB-200D-1F527","emoji":"👩🏻‍🔧","text":"","type":1,"order":1166,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman mechanic: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F527","emoji":"👩🏼‍🔧","text":"","type":1,"order":1167,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman mechanic: medium skin tone","hexcode":"1F469-1F3FD-200D-1F527","emoji":"👩🏽‍🔧","text":"","type":1,"order":1168,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman mechanic: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F527","emoji":"👩🏾‍🔧","text":"","type":1,"order":1169,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman mechanic: dark skin tone","hexcode":"1F469-1F3FF-200D-1F527","emoji":"👩🏿‍🔧","text":"","type":1,"order":1170,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"factory worker","hexcode":"1F9D1-200D-1F3ED","tags":["assembly","factory","industrial","worker"],"emoji":"🧑‍🏭","text":"","type":1,"order":1171,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"factory worker: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F3ED","emoji":"🧑🏻‍🏭","text":"","type":1,"order":1172,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"factory worker: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F3ED","emoji":"🧑🏼‍🏭","text":"","type":1,"order":1173,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"factory worker: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F3ED","emoji":"🧑🏽‍🏭","text":"","type":1,"order":1174,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"factory worker: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F3ED","emoji":"🧑🏾‍🏭","text":"","type":1,"order":1175,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"factory worker: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F3ED","emoji":"🧑🏿‍🏭","text":"","type":1,"order":1176,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man factory worker","hexcode":"1F468-200D-1F3ED","tags":["assembly","factory","industrial","man","worker"],"emoji":"👨‍🏭","text":"","type":1,"order":1177,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man factory worker: light skin tone","hexcode":"1F468-1F3FB-200D-1F3ED","emoji":"👨🏻‍🏭","text":"","type":1,"order":1178,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man factory worker: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F3ED","emoji":"👨🏼‍🏭","text":"","type":1,"order":1179,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man factory worker: medium skin tone","hexcode":"1F468-1F3FD-200D-1F3ED","emoji":"👨🏽‍🏭","text":"","type":1,"order":1180,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man factory worker: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F3ED","emoji":"👨🏾‍🏭","text":"","type":1,"order":1181,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man factory worker: dark skin tone","hexcode":"1F468-1F3FF-200D-1F3ED","emoji":"👨🏿‍🏭","text":"","type":1,"order":1182,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman factory worker","hexcode":"1F469-200D-1F3ED","tags":["assembly","factory","industrial","woman","worker"],"emoji":"👩‍🏭","text":"","type":1,"order":1183,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman factory worker: light skin tone","hexcode":"1F469-1F3FB-200D-1F3ED","emoji":"👩🏻‍🏭","text":"","type":1,"order":1184,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman factory worker: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F3ED","emoji":"👩🏼‍🏭","text":"","type":1,"order":1185,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman factory worker: medium skin tone","hexcode":"1F469-1F3FD-200D-1F3ED","emoji":"👩🏽‍🏭","text":"","type":1,"order":1186,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman factory worker: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F3ED","emoji":"👩🏾‍🏭","text":"","type":1,"order":1187,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman factory worker: dark skin tone","hexcode":"1F469-1F3FF-200D-1F3ED","emoji":"👩🏿‍🏭","text":"","type":1,"order":1188,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"office worker","hexcode":"1F9D1-200D-1F4BC","tags":["architect","business","manager","office","white-collar","worker"],"emoji":"🧑‍💼","text":"","type":1,"order":1189,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"office worker: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F4BC","emoji":"🧑🏻‍💼","text":"","type":1,"order":1190,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"office worker: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F4BC","emoji":"🧑🏼‍💼","text":"","type":1,"order":1191,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"office worker: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F4BC","emoji":"🧑🏽‍💼","text":"","type":1,"order":1192,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"office worker: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F4BC","emoji":"🧑🏾‍💼","text":"","type":1,"order":1193,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"office worker: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F4BC","emoji":"🧑🏿‍💼","text":"","type":1,"order":1194,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man office worker","hexcode":"1F468-200D-1F4BC","tags":["architect","business","man","manager","office","white-collar","worker"],"emoji":"👨‍💼","text":"","type":1,"order":1195,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man office worker: light skin tone","hexcode":"1F468-1F3FB-200D-1F4BC","emoji":"👨🏻‍💼","text":"","type":1,"order":1196,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man office worker: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F4BC","emoji":"👨🏼‍💼","text":"","type":1,"order":1197,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man office worker: medium skin tone","hexcode":"1F468-1F3FD-200D-1F4BC","emoji":"👨🏽‍💼","text":"","type":1,"order":1198,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man office worker: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F4BC","emoji":"👨🏾‍💼","text":"","type":1,"order":1199,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man office worker: dark skin tone","hexcode":"1F468-1F3FF-200D-1F4BC","emoji":"👨🏿‍💼","text":"","type":1,"order":1200,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman office worker","hexcode":"1F469-200D-1F4BC","tags":["architect","business","manager","office","white-collar","woman","worker"],"emoji":"👩‍💼","text":"","type":1,"order":1201,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman office worker: light skin tone","hexcode":"1F469-1F3FB-200D-1F4BC","emoji":"👩🏻‍💼","text":"","type":1,"order":1202,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman office worker: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F4BC","emoji":"👩🏼‍💼","text":"","type":1,"order":1203,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman office worker: medium skin tone","hexcode":"1F469-1F3FD-200D-1F4BC","emoji":"👩🏽‍💼","text":"","type":1,"order":1204,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman office worker: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F4BC","emoji":"👩🏾‍💼","text":"","type":1,"order":1205,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman office worker: dark skin tone","hexcode":"1F469-1F3FF-200D-1F4BC","emoji":"👩🏿‍💼","text":"","type":1,"order":1206,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"scientist","hexcode":"1F9D1-200D-1F52C","tags":["biologist","chemist","engineer","mathematician","physicist"],"emoji":"🧑‍🔬","text":"","type":1,"order":1207,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"scientist: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F52C","emoji":"🧑🏻‍🔬","text":"","type":1,"order":1208,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"scientist: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F52C","emoji":"🧑🏼‍🔬","text":"","type":1,"order":1209,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"scientist: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F52C","emoji":"🧑🏽‍🔬","text":"","type":1,"order":1210,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"scientist: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F52C","emoji":"🧑🏾‍🔬","text":"","type":1,"order":1211,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"scientist: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F52C","emoji":"🧑🏿‍🔬","text":"","type":1,"order":1212,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man scientist","hexcode":"1F468-200D-1F52C","tags":["biologist","chemist","engineer","man","mathematician","physicist","scientist"],"emoji":"👨‍🔬","text":"","type":1,"order":1213,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man scientist: light skin tone","hexcode":"1F468-1F3FB-200D-1F52C","emoji":"👨🏻‍🔬","text":"","type":1,"order":1214,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man scientist: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F52C","emoji":"👨🏼‍🔬","text":"","type":1,"order":1215,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man scientist: medium skin tone","hexcode":"1F468-1F3FD-200D-1F52C","emoji":"👨🏽‍🔬","text":"","type":1,"order":1216,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man scientist: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F52C","emoji":"👨🏾‍🔬","text":"","type":1,"order":1217,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man scientist: dark skin tone","hexcode":"1F468-1F3FF-200D-1F52C","emoji":"👨🏿‍🔬","text":"","type":1,"order":1218,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman scientist","hexcode":"1F469-200D-1F52C","tags":["biologist","chemist","engineer","mathematician","physicist","scientist","woman"],"emoji":"👩‍🔬","text":"","type":1,"order":1219,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman scientist: light skin tone","hexcode":"1F469-1F3FB-200D-1F52C","emoji":"👩🏻‍🔬","text":"","type":1,"order":1220,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman scientist: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F52C","emoji":"👩🏼‍🔬","text":"","type":1,"order":1221,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman scientist: medium skin tone","hexcode":"1F469-1F3FD-200D-1F52C","emoji":"👩🏽‍🔬","text":"","type":1,"order":1222,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman scientist: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F52C","emoji":"👩🏾‍🔬","text":"","type":1,"order":1223,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman scientist: dark skin tone","hexcode":"1F469-1F3FF-200D-1F52C","emoji":"👩🏿‍🔬","text":"","type":1,"order":1224,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"technologist","hexcode":"1F9D1-200D-1F4BB","tags":["coder","computer","developer","inventor","software"],"emoji":"🧑‍💻","text":"","type":1,"order":1225,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"technologist: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F4BB","emoji":"🧑🏻‍💻","text":"","type":1,"order":1226,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"technologist: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F4BB","emoji":"🧑🏼‍💻","text":"","type":1,"order":1227,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"technologist: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F4BB","emoji":"🧑🏽‍💻","text":"","type":1,"order":1228,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"technologist: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F4BB","emoji":"🧑🏾‍💻","text":"","type":1,"order":1229,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"technologist: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F4BB","emoji":"🧑🏿‍💻","text":"","type":1,"order":1230,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man technologist","hexcode":"1F468-200D-1F4BB","tags":["coder","computer","developer","inventor","man","software","technologist"],"emoji":"👨‍💻","text":"","type":1,"order":1231,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man technologist: light skin tone","hexcode":"1F468-1F3FB-200D-1F4BB","emoji":"👨🏻‍💻","text":"","type":1,"order":1232,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man technologist: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F4BB","emoji":"👨🏼‍💻","text":"","type":1,"order":1233,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man technologist: medium skin tone","hexcode":"1F468-1F3FD-200D-1F4BB","emoji":"👨🏽‍💻","text":"","type":1,"order":1234,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man technologist: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F4BB","emoji":"👨🏾‍💻","text":"","type":1,"order":1235,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man technologist: dark skin tone","hexcode":"1F468-1F3FF-200D-1F4BB","emoji":"👨🏿‍💻","text":"","type":1,"order":1236,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman technologist","hexcode":"1F469-200D-1F4BB","tags":["coder","computer","developer","inventor","software","technologist","woman"],"emoji":"👩‍💻","text":"","type":1,"order":1237,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman technologist: light skin tone","hexcode":"1F469-1F3FB-200D-1F4BB","emoji":"👩🏻‍💻","text":"","type":1,"order":1238,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman technologist: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F4BB","emoji":"👩🏼‍💻","text":"","type":1,"order":1239,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman technologist: medium skin tone","hexcode":"1F469-1F3FD-200D-1F4BB","emoji":"👩🏽‍💻","text":"","type":1,"order":1240,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman technologist: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F4BB","emoji":"👩🏾‍💻","text":"","type":1,"order":1241,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman technologist: dark skin tone","hexcode":"1F469-1F3FF-200D-1F4BB","emoji":"👩🏿‍💻","text":"","type":1,"order":1242,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"singer","hexcode":"1F9D1-200D-1F3A4","tags":["actor","entertainer","rock","rockstar","star"],"emoji":"🧑‍🎤","text":"","type":1,"order":1243,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"singer: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F3A4","emoji":"🧑🏻‍🎤","text":"","type":1,"order":1244,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"singer: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F3A4","emoji":"🧑🏼‍🎤","text":"","type":1,"order":1245,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"singer: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F3A4","emoji":"🧑🏽‍🎤","text":"","type":1,"order":1246,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"singer: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F3A4","emoji":"🧑🏾‍🎤","text":"","type":1,"order":1247,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"singer: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F3A4","emoji":"🧑🏿‍🎤","text":"","type":1,"order":1248,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man singer","hexcode":"1F468-200D-1F3A4","tags":["actor","entertainer","man","rock","rockstar","singer","star"],"emoji":"👨‍🎤","text":"","type":1,"order":1249,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man singer: light skin tone","hexcode":"1F468-1F3FB-200D-1F3A4","emoji":"👨🏻‍🎤","text":"","type":1,"order":1250,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man singer: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F3A4","emoji":"👨🏼‍🎤","text":"","type":1,"order":1251,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man singer: medium skin tone","hexcode":"1F468-1F3FD-200D-1F3A4","emoji":"👨🏽‍🎤","text":"","type":1,"order":1252,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man singer: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F3A4","emoji":"👨🏾‍🎤","text":"","type":1,"order":1253,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man singer: dark skin tone","hexcode":"1F468-1F3FF-200D-1F3A4","emoji":"👨🏿‍🎤","text":"","type":1,"order":1254,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman singer","hexcode":"1F469-200D-1F3A4","tags":["actor","entertainer","rock","rockstar","singer","star","woman"],"emoji":"👩‍🎤","text":"","type":1,"order":1255,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman singer: light skin tone","hexcode":"1F469-1F3FB-200D-1F3A4","emoji":"👩🏻‍🎤","text":"","type":1,"order":1256,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman singer: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F3A4","emoji":"👩🏼‍🎤","text":"","type":1,"order":1257,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman singer: medium skin tone","hexcode":"1F469-1F3FD-200D-1F3A4","emoji":"👩🏽‍🎤","text":"","type":1,"order":1258,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman singer: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F3A4","emoji":"👩🏾‍🎤","text":"","type":1,"order":1259,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman singer: dark skin tone","hexcode":"1F469-1F3FF-200D-1F3A4","emoji":"👩🏿‍🎤","text":"","type":1,"order":1260,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"artist","hexcode":"1F9D1-200D-1F3A8","tags":["palette"],"emoji":"🧑‍🎨","text":"","type":1,"order":1261,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"artist: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F3A8","emoji":"🧑🏻‍🎨","text":"","type":1,"order":1262,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"artist: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F3A8","emoji":"🧑🏼‍🎨","text":"","type":1,"order":1263,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"artist: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F3A8","emoji":"🧑🏽‍🎨","text":"","type":1,"order":1264,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"artist: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F3A8","emoji":"🧑🏾‍🎨","text":"","type":1,"order":1265,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"artist: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F3A8","emoji":"🧑🏿‍🎨","text":"","type":1,"order":1266,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man artist","hexcode":"1F468-200D-1F3A8","tags":["artist","man","palette"],"emoji":"👨‍🎨","text":"","type":1,"order":1267,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man artist: light skin tone","hexcode":"1F468-1F3FB-200D-1F3A8","emoji":"👨🏻‍🎨","text":"","type":1,"order":1268,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man artist: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F3A8","emoji":"👨🏼‍🎨","text":"","type":1,"order":1269,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man artist: medium skin tone","hexcode":"1F468-1F3FD-200D-1F3A8","emoji":"👨🏽‍🎨","text":"","type":1,"order":1270,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man artist: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F3A8","emoji":"👨🏾‍🎨","text":"","type":1,"order":1271,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man artist: dark skin tone","hexcode":"1F468-1F3FF-200D-1F3A8","emoji":"👨🏿‍🎨","text":"","type":1,"order":1272,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman artist","hexcode":"1F469-200D-1F3A8","tags":["artist","palette","woman"],"emoji":"👩‍🎨","text":"","type":1,"order":1273,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman artist: light skin tone","hexcode":"1F469-1F3FB-200D-1F3A8","emoji":"👩🏻‍🎨","text":"","type":1,"order":1274,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman artist: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F3A8","emoji":"👩🏼‍🎨","text":"","type":1,"order":1275,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman artist: medium skin tone","hexcode":"1F469-1F3FD-200D-1F3A8","emoji":"👩🏽‍🎨","text":"","type":1,"order":1276,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman artist: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F3A8","emoji":"👩🏾‍🎨","text":"","type":1,"order":1277,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman artist: dark skin tone","hexcode":"1F469-1F3FF-200D-1F3A8","emoji":"👩🏿‍🎨","text":"","type":1,"order":1278,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"pilot","hexcode":"1F9D1-200D-2708-FE0F","tags":["plane"],"emoji":"🧑‍✈️","text":"","type":1,"order":1279,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"pilot: light skin tone","hexcode":"1F9D1-1F3FB-200D-2708-FE0F","emoji":"🧑🏻‍✈️","text":"","type":1,"order":1281,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"pilot: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-2708-FE0F","emoji":"🧑🏼‍✈️","text":"","type":1,"order":1283,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"pilot: medium skin tone","hexcode":"1F9D1-1F3FD-200D-2708-FE0F","emoji":"🧑🏽‍✈️","text":"","type":1,"order":1285,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"pilot: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-2708-FE0F","emoji":"🧑🏾‍✈️","text":"","type":1,"order":1287,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"pilot: dark skin tone","hexcode":"1F9D1-1F3FF-200D-2708-FE0F","emoji":"🧑🏿‍✈️","text":"","type":1,"order":1289,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man pilot","hexcode":"1F468-200D-2708-FE0F","tags":["man","pilot","plane"],"emoji":"👨‍✈️","text":"","type":1,"order":1291,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man pilot: light skin tone","hexcode":"1F468-1F3FB-200D-2708-FE0F","emoji":"👨🏻‍✈️","text":"","type":1,"order":1293,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man pilot: medium-light skin tone","hexcode":"1F468-1F3FC-200D-2708-FE0F","emoji":"👨🏼‍✈️","text":"","type":1,"order":1295,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man pilot: medium skin tone","hexcode":"1F468-1F3FD-200D-2708-FE0F","emoji":"👨🏽‍✈️","text":"","type":1,"order":1297,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man pilot: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-2708-FE0F","emoji":"👨🏾‍✈️","text":"","type":1,"order":1299,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man pilot: dark skin tone","hexcode":"1F468-1F3FF-200D-2708-FE0F","emoji":"👨🏿‍✈️","text":"","type":1,"order":1301,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman pilot","hexcode":"1F469-200D-2708-FE0F","tags":["pilot","plane","woman"],"emoji":"👩‍✈️","text":"","type":1,"order":1303,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman pilot: light skin tone","hexcode":"1F469-1F3FB-200D-2708-FE0F","emoji":"👩🏻‍✈️","text":"","type":1,"order":1305,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman pilot: medium-light skin tone","hexcode":"1F469-1F3FC-200D-2708-FE0F","emoji":"👩🏼‍✈️","text":"","type":1,"order":1307,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman pilot: medium skin tone","hexcode":"1F469-1F3FD-200D-2708-FE0F","emoji":"👩🏽‍✈️","text":"","type":1,"order":1309,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman pilot: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-2708-FE0F","emoji":"👩🏾‍✈️","text":"","type":1,"order":1311,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman pilot: dark skin tone","hexcode":"1F469-1F3FF-200D-2708-FE0F","emoji":"👩🏿‍✈️","text":"","type":1,"order":1313,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"astronaut","hexcode":"1F9D1-200D-1F680","tags":["rocket","space"],"emoji":"🧑‍🚀","text":"","type":1,"order":1315,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"astronaut: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F680","emoji":"🧑🏻‍🚀","text":"","type":1,"order":1316,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"astronaut: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F680","emoji":"🧑🏼‍🚀","text":"","type":1,"order":1317,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"astronaut: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F680","emoji":"🧑🏽‍🚀","text":"","type":1,"order":1318,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"astronaut: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F680","emoji":"🧑🏾‍🚀","text":"","type":1,"order":1319,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"astronaut: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F680","emoji":"🧑🏿‍🚀","text":"","type":1,"order":1320,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man astronaut","hexcode":"1F468-200D-1F680","tags":["astronaut","man","rocket","space"],"emoji":"👨‍🚀","text":"","type":1,"order":1321,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man astronaut: light skin tone","hexcode":"1F468-1F3FB-200D-1F680","emoji":"👨🏻‍🚀","text":"","type":1,"order":1322,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man astronaut: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F680","emoji":"👨🏼‍🚀","text":"","type":1,"order":1323,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man astronaut: medium skin tone","hexcode":"1F468-1F3FD-200D-1F680","emoji":"👨🏽‍🚀","text":"","type":1,"order":1324,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man astronaut: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F680","emoji":"👨🏾‍🚀","text":"","type":1,"order":1325,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man astronaut: dark skin tone","hexcode":"1F468-1F3FF-200D-1F680","emoji":"👨🏿‍🚀","text":"","type":1,"order":1326,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman astronaut","hexcode":"1F469-200D-1F680","tags":["astronaut","rocket","space","woman"],"emoji":"👩‍🚀","text":"","type":1,"order":1327,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman astronaut: light skin tone","hexcode":"1F469-1F3FB-200D-1F680","emoji":"👩🏻‍🚀","text":"","type":1,"order":1328,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman astronaut: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F680","emoji":"👩🏼‍🚀","text":"","type":1,"order":1329,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman astronaut: medium skin tone","hexcode":"1F469-1F3FD-200D-1F680","emoji":"👩🏽‍🚀","text":"","type":1,"order":1330,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman astronaut: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F680","emoji":"👩🏾‍🚀","text":"","type":1,"order":1331,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman astronaut: dark skin tone","hexcode":"1F469-1F3FF-200D-1F680","emoji":"👩🏿‍🚀","text":"","type":1,"order":1332,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"firefighter","hexcode":"1F9D1-200D-1F692","tags":["fire","firetruck"],"emoji":"🧑‍🚒","text":"","type":1,"order":1333,"group":1,"subgroup":25,"version":12.1,"skins":[{"label":"firefighter: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F692","emoji":"🧑🏻‍🚒","text":"","type":1,"order":1334,"group":1,"subgroup":25,"version":12.1,"tone":1},{"label":"firefighter: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F692","emoji":"🧑🏼‍🚒","text":"","type":1,"order":1335,"group":1,"subgroup":25,"version":12.1,"tone":2},{"label":"firefighter: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F692","emoji":"🧑🏽‍🚒","text":"","type":1,"order":1336,"group":1,"subgroup":25,"version":12.1,"tone":3},{"label":"firefighter: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F692","emoji":"🧑🏾‍🚒","text":"","type":1,"order":1337,"group":1,"subgroup":25,"version":12.1,"tone":4},{"label":"firefighter: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F692","emoji":"🧑🏿‍🚒","text":"","type":1,"order":1338,"group":1,"subgroup":25,"version":12.1,"tone":5}]},{"label":"man firefighter","hexcode":"1F468-200D-1F692","tags":["fire","firefighter","firetruck","man"],"emoji":"👨‍🚒","text":"","type":1,"order":1339,"group":1,"subgroup":25,"version":4,"skins":[{"label":"man firefighter: light skin tone","hexcode":"1F468-1F3FB-200D-1F692","emoji":"👨🏻‍🚒","text":"","type":1,"order":1340,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"man firefighter: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F692","emoji":"👨🏼‍🚒","text":"","type":1,"order":1341,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"man firefighter: medium skin tone","hexcode":"1F468-1F3FD-200D-1F692","emoji":"👨🏽‍🚒","text":"","type":1,"order":1342,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"man firefighter: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F692","emoji":"👨🏾‍🚒","text":"","type":1,"order":1343,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"man firefighter: dark skin tone","hexcode":"1F468-1F3FF-200D-1F692","emoji":"👨🏿‍🚒","text":"","type":1,"order":1344,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"woman firefighter","hexcode":"1F469-200D-1F692","tags":["fire","firefighter","firetruck","woman"],"emoji":"👩‍🚒","text":"","type":1,"order":1345,"group":1,"subgroup":25,"version":4,"skins":[{"label":"woman firefighter: light skin tone","hexcode":"1F469-1F3FB-200D-1F692","emoji":"👩🏻‍🚒","text":"","type":1,"order":1346,"group":1,"subgroup":25,"version":4,"tone":1},{"label":"woman firefighter: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F692","emoji":"👩🏼‍🚒","text":"","type":1,"order":1347,"group":1,"subgroup":25,"version":4,"tone":2},{"label":"woman firefighter: medium skin tone","hexcode":"1F469-1F3FD-200D-1F692","emoji":"👩🏽‍🚒","text":"","type":1,"order":1348,"group":1,"subgroup":25,"version":4,"tone":3},{"label":"woman firefighter: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F692","emoji":"👩🏾‍🚒","text":"","type":1,"order":1349,"group":1,"subgroup":25,"version":4,"tone":4},{"label":"woman firefighter: dark skin tone","hexcode":"1F469-1F3FF-200D-1F692","emoji":"👩🏿‍🚒","text":"","type":1,"order":1350,"group":1,"subgroup":25,"version":4,"tone":5}]},{"label":"police officer","hexcode":"1F46E","tags":["apprehend","arrest","citation","cop","law","officer","over","police","pulled","undercover"],"emoji":"👮","text":"","type":1,"order":1351,"group":1,"subgroup":25,"version":0.6,"skins":[{"label":"police officer: light skin tone","hexcode":"1F46E-1F3FB","emoji":"👮🏻","text":"","type":1,"order":1352,"group":1,"subgroup":25,"version":1,"tone":1},{"label":"police officer: medium-light skin tone","hexcode":"1F46E-1F3FC","emoji":"👮🏼","text":"","type":1,"order":1353,"group":1,"subgroup":25,"version":1,"tone":2},{"label":"police officer: medium skin tone","hexcode":"1F46E-1F3FD","emoji":"👮🏽","text":"","type":1,"order":1354,"group":1,"subgroup":25,"version":1,"tone":3},{"label":"police officer: medium-dark skin tone","hexcode":"1F46E-1F3FE","emoji":"👮🏾","text":"","type":1,"order":1355,"group":1,"subgroup":25,"version":1,"tone":4},{"label":"police officer: dark skin tone","hexcode":"1F46E-1F3FF","emoji":"👮🏿","text":"","type":1,"order":1356,"group":1,"subgroup":25,"version":1,"tone":5}]},{"label":"man police officer","hexcode":"1F46E-200D-2642-FE0F","tags":["apprehend","arrest","citation","cop","law","man","officer","over","police","pulled","undercover"],"emoji":"👮‍♂️","text":"","type":1,"order":1357,"group":1,"subgroup":25,"version":4,"gender":1,"skins":[{"label":"man police officer: light skin tone","hexcode":"1F46E-1F3FB-200D-2642-FE0F","emoji":"👮🏻‍♂️","text":"","type":1,"order":1359,"group":1,"subgroup":25,"version":4,"gender":1,"tone":1},{"label":"man police officer: medium-light skin tone","hexcode":"1F46E-1F3FC-200D-2642-FE0F","emoji":"👮🏼‍♂️","text":"","type":1,"order":1361,"group":1,"subgroup":25,"version":4,"gender":1,"tone":2},{"label":"man police officer: medium skin tone","hexcode":"1F46E-1F3FD-200D-2642-FE0F","emoji":"👮🏽‍♂️","text":"","type":1,"order":1363,"group":1,"subgroup":25,"version":4,"gender":1,"tone":3},{"label":"man police officer: medium-dark skin tone","hexcode":"1F46E-1F3FE-200D-2642-FE0F","emoji":"👮🏾‍♂️","text":"","type":1,"order":1365,"group":1,"subgroup":25,"version":4,"gender":1,"tone":4},{"label":"man police officer: dark skin tone","hexcode":"1F46E-1F3FF-200D-2642-FE0F","emoji":"👮🏿‍♂️","text":"","type":1,"order":1367,"group":1,"subgroup":25,"version":4,"gender":1,"tone":5}]},{"label":"woman police officer","hexcode":"1F46E-200D-2640-FE0F","tags":["apprehend","arrest","citation","cop","law","officer","over","police","pulled","undercover","woman"],"emoji":"👮‍♀️","text":"","type":1,"order":1369,"group":1,"subgroup":25,"version":4,"gender":0,"skins":[{"label":"woman police officer: light skin tone","hexcode":"1F46E-1F3FB-200D-2640-FE0F","emoji":"👮🏻‍♀️","text":"","type":1,"order":1371,"group":1,"subgroup":25,"version":4,"gender":0,"tone":1},{"label":"woman police officer: medium-light skin tone","hexcode":"1F46E-1F3FC-200D-2640-FE0F","emoji":"👮🏼‍♀️","text":"","type":1,"order":1373,"group":1,"subgroup":25,"version":4,"gender":0,"tone":2},{"label":"woman police officer: medium skin tone","hexcode":"1F46E-1F3FD-200D-2640-FE0F","emoji":"👮🏽‍♀️","text":"","type":1,"order":1375,"group":1,"subgroup":25,"version":4,"gender":0,"tone":3},{"label":"woman police officer: medium-dark skin tone","hexcode":"1F46E-1F3FE-200D-2640-FE0F","emoji":"👮🏾‍♀️","text":"","type":1,"order":1377,"group":1,"subgroup":25,"version":4,"gender":0,"tone":4},{"label":"woman police officer: dark skin tone","hexcode":"1F46E-1F3FF-200D-2640-FE0F","emoji":"👮🏿‍♀️","text":"","type":1,"order":1379,"group":1,"subgroup":25,"version":4,"gender":0,"tone":5}]},{"label":"detective","hexcode":"1F575","tags":["sleuth","spy"],"emoji":"🕵️","text":"🕵︎","type":0,"order":1382,"group":1,"subgroup":25,"version":0.7,"skins":[{"label":"detective: light skin tone","hexcode":"1F575-1F3FB","emoji":"🕵🏻","text":"","type":1,"order":1383,"group":1,"subgroup":25,"version":2,"tone":1},{"label":"detective: medium-light skin tone","hexcode":"1F575-1F3FC","emoji":"🕵🏼","text":"","type":1,"order":1384,"group":1,"subgroup":25,"version":2,"tone":2},{"label":"detective: medium skin tone","hexcode":"1F575-1F3FD","emoji":"🕵🏽","text":"","type":1,"order":1385,"group":1,"subgroup":25,"version":2,"tone":3},{"label":"detective: medium-dark skin tone","hexcode":"1F575-1F3FE","emoji":"🕵🏾","text":"","type":1,"order":1386,"group":1,"subgroup":25,"version":2,"tone":4},{"label":"detective: dark skin tone","hexcode":"1F575-1F3FF","emoji":"🕵🏿","text":"","type":1,"order":1387,"group":1,"subgroup":25,"version":2,"tone":5}]},{"label":"man detective","hexcode":"1F575-FE0F-200D-2642-FE0F","tags":["detective","man","sleuth","spy"],"emoji":"🕵️‍♂️","text":"","type":1,"order":1388,"group":1,"subgroup":25,"version":4,"gender":1,"skins":[{"label":"man detective: light skin tone","hexcode":"1F575-1F3FB-200D-2642-FE0F","emoji":"🕵🏻‍♂️","text":"","type":1,"order":1392,"group":1,"subgroup":25,"version":4,"gender":1,"tone":1},{"label":"man detective: medium-light skin tone","hexcode":"1F575-1F3FC-200D-2642-FE0F","emoji":"🕵🏼‍♂️","text":"","type":1,"order":1394,"group":1,"subgroup":25,"version":4,"gender":1,"tone":2},{"label":"man detective: medium skin tone","hexcode":"1F575-1F3FD-200D-2642-FE0F","emoji":"🕵🏽‍♂️","text":"","type":1,"order":1396,"group":1,"subgroup":25,"version":4,"gender":1,"tone":3},{"label":"man detective: medium-dark skin tone","hexcode":"1F575-1F3FE-200D-2642-FE0F","emoji":"🕵🏾‍♂️","text":"","type":1,"order":1398,"group":1,"subgroup":25,"version":4,"gender":1,"tone":4},{"label":"man detective: dark skin tone","hexcode":"1F575-1F3FF-200D-2642-FE0F","emoji":"🕵🏿‍♂️","text":"","type":1,"order":1400,"group":1,"subgroup":25,"version":4,"gender":1,"tone":5}]},{"label":"woman detective","hexcode":"1F575-FE0F-200D-2640-FE0F","tags":["detective","sleuth","spy","woman"],"emoji":"🕵️‍♀️","text":"","type":1,"order":1402,"group":1,"subgroup":25,"version":4,"gender":0,"skins":[{"label":"woman detective: light skin tone","hexcode":"1F575-1F3FB-200D-2640-FE0F","emoji":"🕵🏻‍♀️","text":"","type":1,"order":1406,"group":1,"subgroup":25,"version":4,"gender":0,"tone":1},{"label":"woman detective: medium-light skin tone","hexcode":"1F575-1F3FC-200D-2640-FE0F","emoji":"🕵🏼‍♀️","text":"","type":1,"order":1408,"group":1,"subgroup":25,"version":4,"gender":0,"tone":2},{"label":"woman detective: medium skin tone","hexcode":"1F575-1F3FD-200D-2640-FE0F","emoji":"🕵🏽‍♀️","text":"","type":1,"order":1410,"group":1,"subgroup":25,"version":4,"gender":0,"tone":3},{"label":"woman detective: medium-dark skin tone","hexcode":"1F575-1F3FE-200D-2640-FE0F","emoji":"🕵🏾‍♀️","text":"","type":1,"order":1412,"group":1,"subgroup":25,"version":4,"gender":0,"tone":4},{"label":"woman detective: dark skin tone","hexcode":"1F575-1F3FF-200D-2640-FE0F","emoji":"🕵🏿‍♀️","text":"","type":1,"order":1414,"group":1,"subgroup":25,"version":4,"gender":0,"tone":5}]},{"label":"guard","hexcode":"1F482","tags":["buckingham","helmet","london","palace"],"emoji":"💂","text":"","type":1,"order":1416,"group":1,"subgroup":25,"version":0.6,"skins":[{"label":"guard: light skin tone","hexcode":"1F482-1F3FB","emoji":"💂🏻","text":"","type":1,"order":1417,"group":1,"subgroup":25,"version":1,"tone":1},{"label":"guard: medium-light skin tone","hexcode":"1F482-1F3FC","emoji":"💂🏼","text":"","type":1,"order":1418,"group":1,"subgroup":25,"version":1,"tone":2},{"label":"guard: medium skin tone","hexcode":"1F482-1F3FD","emoji":"💂🏽","text":"","type":1,"order":1419,"group":1,"subgroup":25,"version":1,"tone":3},{"label":"guard: medium-dark skin tone","hexcode":"1F482-1F3FE","emoji":"💂🏾","text":"","type":1,"order":1420,"group":1,"subgroup":25,"version":1,"tone":4},{"label":"guard: dark skin tone","hexcode":"1F482-1F3FF","emoji":"💂🏿","text":"","type":1,"order":1421,"group":1,"subgroup":25,"version":1,"tone":5}]},{"label":"man guard","hexcode":"1F482-200D-2642-FE0F","tags":["buckingham","guard","helmet","london","man","palace"],"emoji":"💂‍♂️","text":"","type":1,"order":1422,"group":1,"subgroup":25,"version":4,"gender":1,"skins":[{"label":"man guard: light skin tone","hexcode":"1F482-1F3FB-200D-2642-FE0F","emoji":"💂🏻‍♂️","text":"","type":1,"order":1424,"group":1,"subgroup":25,"version":4,"gender":1,"tone":1},{"label":"man guard: medium-light skin tone","hexcode":"1F482-1F3FC-200D-2642-FE0F","emoji":"💂🏼‍♂️","text":"","type":1,"order":1426,"group":1,"subgroup":25,"version":4,"gender":1,"tone":2},{"label":"man guard: medium skin tone","hexcode":"1F482-1F3FD-200D-2642-FE0F","emoji":"💂🏽‍♂️","text":"","type":1,"order":1428,"group":1,"subgroup":25,"version":4,"gender":1,"tone":3},{"label":"man guard: medium-dark skin tone","hexcode":"1F482-1F3FE-200D-2642-FE0F","emoji":"💂🏾‍♂️","text":"","type":1,"order":1430,"group":1,"subgroup":25,"version":4,"gender":1,"tone":4},{"label":"man guard: dark skin tone","hexcode":"1F482-1F3FF-200D-2642-FE0F","emoji":"💂🏿‍♂️","text":"","type":1,"order":1432,"group":1,"subgroup":25,"version":4,"gender":1,"tone":5}]},{"label":"woman guard","hexcode":"1F482-200D-2640-FE0F","tags":["buckingham","guard","helmet","london","palace","woman"],"emoji":"💂‍♀️","text":"","type":1,"order":1434,"group":1,"subgroup":25,"version":4,"gender":0,"skins":[{"label":"woman guard: light skin tone","hexcode":"1F482-1F3FB-200D-2640-FE0F","emoji":"💂🏻‍♀️","text":"","type":1,"order":1436,"group":1,"subgroup":25,"version":4,"gender":0,"tone":1},{"label":"woman guard: medium-light skin tone","hexcode":"1F482-1F3FC-200D-2640-FE0F","emoji":"💂🏼‍♀️","text":"","type":1,"order":1438,"group":1,"subgroup":25,"version":4,"gender":0,"tone":2},{"label":"woman guard: medium skin tone","hexcode":"1F482-1F3FD-200D-2640-FE0F","emoji":"💂🏽‍♀️","text":"","type":1,"order":1440,"group":1,"subgroup":25,"version":4,"gender":0,"tone":3},{"label":"woman guard: medium-dark skin tone","hexcode":"1F482-1F3FE-200D-2640-FE0F","emoji":"💂🏾‍♀️","text":"","type":1,"order":1442,"group":1,"subgroup":25,"version":4,"gender":0,"tone":4},{"label":"woman guard: dark skin tone","hexcode":"1F482-1F3FF-200D-2640-FE0F","emoji":"💂🏿‍♀️","text":"","type":1,"order":1444,"group":1,"subgroup":25,"version":4,"gender":0,"tone":5}]},{"label":"ninja","hexcode":"1F977","tags":["assassin","fight","fighter","hidden","person","secret","skills","sly","soldier","stealth","war"],"emoji":"🥷","text":"","type":1,"order":1446,"group":1,"subgroup":25,"version":13,"skins":[{"label":"ninja: light skin tone","hexcode":"1F977-1F3FB","emoji":"🥷🏻","text":"","type":1,"order":1447,"group":1,"subgroup":25,"version":13,"tone":1},{"label":"ninja: medium-light skin tone","hexcode":"1F977-1F3FC","emoji":"🥷🏼","text":"","type":1,"order":1448,"group":1,"subgroup":25,"version":13,"tone":2},{"label":"ninja: medium skin tone","hexcode":"1F977-1F3FD","emoji":"🥷🏽","text":"","type":1,"order":1449,"group":1,"subgroup":25,"version":13,"tone":3},{"label":"ninja: medium-dark skin tone","hexcode":"1F977-1F3FE","emoji":"🥷🏾","text":"","type":1,"order":1450,"group":1,"subgroup":25,"version":13,"tone":4},{"label":"ninja: dark skin tone","hexcode":"1F977-1F3FF","emoji":"🥷🏿","text":"","type":1,"order":1451,"group":1,"subgroup":25,"version":13,"tone":5}]},{"label":"construction worker","hexcode":"1F477","tags":["build","construction","fix","hardhat","hat","man","person","rebuild","remodel","repair","work","worker"],"emoji":"👷","text":"","type":1,"order":1452,"group":1,"subgroup":25,"version":0.6,"skins":[{"label":"construction worker: light skin tone","hexcode":"1F477-1F3FB","emoji":"👷🏻","text":"","type":1,"order":1453,"group":1,"subgroup":25,"version":1,"tone":1},{"label":"construction worker: medium-light skin tone","hexcode":"1F477-1F3FC","emoji":"👷🏼","text":"","type":1,"order":1454,"group":1,"subgroup":25,"version":1,"tone":2},{"label":"construction worker: medium skin tone","hexcode":"1F477-1F3FD","emoji":"👷🏽","text":"","type":1,"order":1455,"group":1,"subgroup":25,"version":1,"tone":3},{"label":"construction worker: medium-dark skin tone","hexcode":"1F477-1F3FE","emoji":"👷🏾","text":"","type":1,"order":1456,"group":1,"subgroup":25,"version":1,"tone":4},{"label":"construction worker: dark skin tone","hexcode":"1F477-1F3FF","emoji":"👷🏿","text":"","type":1,"order":1457,"group":1,"subgroup":25,"version":1,"tone":5}]},{"label":"man construction worker","hexcode":"1F477-200D-2642-FE0F","tags":["build","construction","fix","hardhat","hat","man","rebuild","remodel","repair","work","worker"],"emoji":"👷‍♂️","text":"","type":1,"order":1458,"group":1,"subgroup":25,"version":4,"gender":1,"skins":[{"label":"man construction worker: light skin tone","hexcode":"1F477-1F3FB-200D-2642-FE0F","emoji":"👷🏻‍♂️","text":"","type":1,"order":1460,"group":1,"subgroup":25,"version":4,"gender":1,"tone":1},{"label":"man construction worker: medium-light skin tone","hexcode":"1F477-1F3FC-200D-2642-FE0F","emoji":"👷🏼‍♂️","text":"","type":1,"order":1462,"group":1,"subgroup":25,"version":4,"gender":1,"tone":2},{"label":"man construction worker: medium skin tone","hexcode":"1F477-1F3FD-200D-2642-FE0F","emoji":"👷🏽‍♂️","text":"","type":1,"order":1464,"group":1,"subgroup":25,"version":4,"gender":1,"tone":3},{"label":"man construction worker: medium-dark skin tone","hexcode":"1F477-1F3FE-200D-2642-FE0F","emoji":"👷🏾‍♂️","text":"","type":1,"order":1466,"group":1,"subgroup":25,"version":4,"gender":1,"tone":4},{"label":"man construction worker: dark skin tone","hexcode":"1F477-1F3FF-200D-2642-FE0F","emoji":"👷🏿‍♂️","text":"","type":1,"order":1468,"group":1,"subgroup":25,"version":4,"gender":1,"tone":5}]},{"label":"woman construction worker","hexcode":"1F477-200D-2640-FE0F","tags":["build","construction","fix","hardhat","hat","man","rebuild","remodel","repair","woman","work","worker"],"emoji":"👷‍♀️","text":"","type":1,"order":1470,"group":1,"subgroup":25,"version":4,"gender":0,"skins":[{"label":"woman construction worker: light skin tone","hexcode":"1F477-1F3FB-200D-2640-FE0F","emoji":"👷🏻‍♀️","text":"","type":1,"order":1472,"group":1,"subgroup":25,"version":4,"gender":0,"tone":1},{"label":"woman construction worker: medium-light skin tone","hexcode":"1F477-1F3FC-200D-2640-FE0F","emoji":"👷🏼‍♀️","text":"","type":1,"order":1474,"group":1,"subgroup":25,"version":4,"gender":0,"tone":2},{"label":"woman construction worker: medium skin tone","hexcode":"1F477-1F3FD-200D-2640-FE0F","emoji":"👷🏽‍♀️","text":"","type":1,"order":1476,"group":1,"subgroup":25,"version":4,"gender":0,"tone":3},{"label":"woman construction worker: medium-dark skin tone","hexcode":"1F477-1F3FE-200D-2640-FE0F","emoji":"👷🏾‍♀️","text":"","type":1,"order":1478,"group":1,"subgroup":25,"version":4,"gender":0,"tone":4},{"label":"woman construction worker: dark skin tone","hexcode":"1F477-1F3FF-200D-2640-FE0F","emoji":"👷🏿‍♀️","text":"","type":1,"order":1480,"group":1,"subgroup":25,"version":4,"gender":0,"tone":5}]},{"label":"person with crown","hexcode":"1FAC5","tags":["crown","monarch","noble","person","regal","royal","royalty"],"emoji":"🫅","text":"","type":1,"order":1482,"group":1,"subgroup":25,"version":14,"skins":[{"label":"person with crown: light skin tone","hexcode":"1FAC5-1F3FB","emoji":"🫅🏻","text":"","type":1,"order":1483,"group":1,"subgroup":25,"version":14,"tone":1},{"label":"person with crown: medium-light skin tone","hexcode":"1FAC5-1F3FC","emoji":"🫅🏼","text":"","type":1,"order":1484,"group":1,"subgroup":25,"version":14,"tone":2},{"label":"person with crown: medium skin tone","hexcode":"1FAC5-1F3FD","emoji":"🫅🏽","text":"","type":1,"order":1485,"group":1,"subgroup":25,"version":14,"tone":3},{"label":"person with crown: medium-dark skin tone","hexcode":"1FAC5-1F3FE","emoji":"🫅🏾","text":"","type":1,"order":1486,"group":1,"subgroup":25,"version":14,"tone":4},{"label":"person with crown: dark skin tone","hexcode":"1FAC5-1F3FF","emoji":"🫅🏿","text":"","type":1,"order":1487,"group":1,"subgroup":25,"version":14,"tone":5}]},{"label":"prince","hexcode":"1F934","tags":["crown","fairy","fairytale","fantasy","king","royal","royalty","tale"],"emoji":"🤴","text":"","type":1,"order":1488,"group":1,"subgroup":25,"version":3,"skins":[{"label":"prince: light skin tone","hexcode":"1F934-1F3FB","emoji":"🤴🏻","text":"","type":1,"order":1489,"group":1,"subgroup":25,"version":3,"tone":1},{"label":"prince: medium-light skin tone","hexcode":"1F934-1F3FC","emoji":"🤴🏼","text":"","type":1,"order":1490,"group":1,"subgroup":25,"version":3,"tone":2},{"label":"prince: medium skin tone","hexcode":"1F934-1F3FD","emoji":"🤴🏽","text":"","type":1,"order":1491,"group":1,"subgroup":25,"version":3,"tone":3},{"label":"prince: medium-dark skin tone","hexcode":"1F934-1F3FE","emoji":"🤴🏾","text":"","type":1,"order":1492,"group":1,"subgroup":25,"version":3,"tone":4},{"label":"prince: dark skin tone","hexcode":"1F934-1F3FF","emoji":"🤴🏿","text":"","type":1,"order":1493,"group":1,"subgroup":25,"version":3,"tone":5}]},{"label":"princess","hexcode":"1F478","tags":["crown","fairy","fairytale","fantasy","queen","royal","royalty","tale"],"emoji":"👸","text":"","type":1,"order":1494,"group":1,"subgroup":25,"version":0.6,"skins":[{"label":"princess: light skin tone","hexcode":"1F478-1F3FB","emoji":"👸🏻","text":"","type":1,"order":1495,"group":1,"subgroup":25,"version":1,"tone":1},{"label":"princess: medium-light skin tone","hexcode":"1F478-1F3FC","emoji":"👸🏼","text":"","type":1,"order":1496,"group":1,"subgroup":25,"version":1,"tone":2},{"label":"princess: medium skin tone","hexcode":"1F478-1F3FD","emoji":"👸🏽","text":"","type":1,"order":1497,"group":1,"subgroup":25,"version":1,"tone":3},{"label":"princess: medium-dark skin tone","hexcode":"1F478-1F3FE","emoji":"👸🏾","text":"","type":1,"order":1498,"group":1,"subgroup":25,"version":1,"tone":4},{"label":"princess: dark skin tone","hexcode":"1F478-1F3FF","emoji":"👸🏿","text":"","type":1,"order":1499,"group":1,"subgroup":25,"version":1,"tone":5}]},{"label":"person wearing turban","hexcode":"1F473","tags":["person","turban","wearing"],"emoji":"👳","text":"","type":1,"order":1500,"group":1,"subgroup":25,"version":0.6,"skins":[{"label":"person wearing turban: light skin tone","hexcode":"1F473-1F3FB","emoji":"👳🏻","text":"","type":1,"order":1501,"group":1,"subgroup":25,"version":1,"tone":1},{"label":"person wearing turban: medium-light skin tone","hexcode":"1F473-1F3FC","emoji":"👳🏼","text":"","type":1,"order":1502,"group":1,"subgroup":25,"version":1,"tone":2},{"label":"person wearing turban: medium skin tone","hexcode":"1F473-1F3FD","emoji":"👳🏽","text":"","type":1,"order":1503,"group":1,"subgroup":25,"version":1,"tone":3},{"label":"person wearing turban: medium-dark skin tone","hexcode":"1F473-1F3FE","emoji":"👳🏾","text":"","type":1,"order":1504,"group":1,"subgroup":25,"version":1,"tone":4},{"label":"person wearing turban: dark skin tone","hexcode":"1F473-1F3FF","emoji":"👳🏿","text":"","type":1,"order":1505,"group":1,"subgroup":25,"version":1,"tone":5}]},{"label":"man wearing turban","hexcode":"1F473-200D-2642-FE0F","tags":["man","turban","wearing"],"emoji":"👳‍♂️","text":"","type":1,"order":1506,"group":1,"subgroup":25,"version":4,"gender":1,"skins":[{"label":"man wearing turban: light skin tone","hexcode":"1F473-1F3FB-200D-2642-FE0F","emoji":"👳🏻‍♂️","text":"","type":1,"order":1508,"group":1,"subgroup":25,"version":4,"gender":1,"tone":1},{"label":"man wearing turban: medium-light skin tone","hexcode":"1F473-1F3FC-200D-2642-FE0F","emoji":"👳🏼‍♂️","text":"","type":1,"order":1510,"group":1,"subgroup":25,"version":4,"gender":1,"tone":2},{"label":"man wearing turban: medium skin tone","hexcode":"1F473-1F3FD-200D-2642-FE0F","emoji":"👳🏽‍♂️","text":"","type":1,"order":1512,"group":1,"subgroup":25,"version":4,"gender":1,"tone":3},{"label":"man wearing turban: medium-dark skin tone","hexcode":"1F473-1F3FE-200D-2642-FE0F","emoji":"👳🏾‍♂️","text":"","type":1,"order":1514,"group":1,"subgroup":25,"version":4,"gender":1,"tone":4},{"label":"man wearing turban: dark skin tone","hexcode":"1F473-1F3FF-200D-2642-FE0F","emoji":"👳🏿‍♂️","text":"","type":1,"order":1516,"group":1,"subgroup":25,"version":4,"gender":1,"tone":5}]},{"label":"woman wearing turban","hexcode":"1F473-200D-2640-FE0F","tags":["turban","wearing","woman"],"emoji":"👳‍♀️","text":"","type":1,"order":1518,"group":1,"subgroup":25,"version":4,"gender":0,"skins":[{"label":"woman wearing turban: light skin tone","hexcode":"1F473-1F3FB-200D-2640-FE0F","emoji":"👳🏻‍♀️","text":"","type":1,"order":1520,"group":1,"subgroup":25,"version":4,"gender":0,"tone":1},{"label":"woman wearing turban: medium-light skin tone","hexcode":"1F473-1F3FC-200D-2640-FE0F","emoji":"👳🏼‍♀️","text":"","type":1,"order":1522,"group":1,"subgroup":25,"version":4,"gender":0,"tone":2},{"label":"woman wearing turban: medium skin tone","hexcode":"1F473-1F3FD-200D-2640-FE0F","emoji":"👳🏽‍♀️","text":"","type":1,"order":1524,"group":1,"subgroup":25,"version":4,"gender":0,"tone":3},{"label":"woman wearing turban: medium-dark skin tone","hexcode":"1F473-1F3FE-200D-2640-FE0F","emoji":"👳🏾‍♀️","text":"","type":1,"order":1526,"group":1,"subgroup":25,"version":4,"gender":0,"tone":4},{"label":"woman wearing turban: dark skin tone","hexcode":"1F473-1F3FF-200D-2640-FE0F","emoji":"👳🏿‍♀️","text":"","type":1,"order":1528,"group":1,"subgroup":25,"version":4,"gender":0,"tone":5}]},{"label":"person with skullcap","hexcode":"1F472","tags":["cap","chinese","gua","guapi","hat","mao","person","pi","skullcap"],"emoji":"👲","text":"","type":1,"order":1530,"group":1,"subgroup":25,"version":0.6,"skins":[{"label":"person with skullcap: light skin tone","hexcode":"1F472-1F3FB","emoji":"👲🏻","text":"","type":1,"order":1531,"group":1,"subgroup":25,"version":1,"tone":1},{"label":"person with skullcap: medium-light skin tone","hexcode":"1F472-1F3FC","emoji":"👲🏼","text":"","type":1,"order":1532,"group":1,"subgroup":25,"version":1,"tone":2},{"label":"person with skullcap: medium skin tone","hexcode":"1F472-1F3FD","emoji":"👲🏽","text":"","type":1,"order":1533,"group":1,"subgroup":25,"version":1,"tone":3},{"label":"person with skullcap: medium-dark skin tone","hexcode":"1F472-1F3FE","emoji":"👲🏾","text":"","type":1,"order":1534,"group":1,"subgroup":25,"version":1,"tone":4},{"label":"person with skullcap: dark skin tone","hexcode":"1F472-1F3FF","emoji":"👲🏿","text":"","type":1,"order":1535,"group":1,"subgroup":25,"version":1,"tone":5}]},{"label":"woman with headscarf","hexcode":"1F9D5","tags":["bandana","head","headscarf","hijab","kerchief","mantilla","tichel","woman"],"emoji":"🧕","text":"","type":1,"order":1536,"group":1,"subgroup":25,"version":5,"skins":[{"label":"woman with headscarf: light skin tone","hexcode":"1F9D5-1F3FB","emoji":"🧕🏻","text":"","type":1,"order":1537,"group":1,"subgroup":25,"version":5,"tone":1},{"label":"woman with headscarf: medium-light skin tone","hexcode":"1F9D5-1F3FC","emoji":"🧕🏼","text":"","type":1,"order":1538,"group":1,"subgroup":25,"version":5,"tone":2},{"label":"woman with headscarf: medium skin tone","hexcode":"1F9D5-1F3FD","emoji":"🧕🏽","text":"","type":1,"order":1539,"group":1,"subgroup":25,"version":5,"tone":3},{"label":"woman with headscarf: medium-dark skin tone","hexcode":"1F9D5-1F3FE","emoji":"🧕🏾","text":"","type":1,"order":1540,"group":1,"subgroup":25,"version":5,"tone":4},{"label":"woman with headscarf: dark skin tone","hexcode":"1F9D5-1F3FF","emoji":"🧕🏿","text":"","type":1,"order":1541,"group":1,"subgroup":25,"version":5,"tone":5}]},{"label":"person in tuxedo","hexcode":"1F935","tags":["formal","person","tuxedo","wedding"],"emoji":"🤵","text":"","type":1,"order":1542,"group":1,"subgroup":25,"version":3,"skins":[{"label":"person in tuxedo: light skin tone","hexcode":"1F935-1F3FB","emoji":"🤵🏻","text":"","type":1,"order":1543,"group":1,"subgroup":25,"version":3,"tone":1},{"label":"person in tuxedo: medium-light skin tone","hexcode":"1F935-1F3FC","emoji":"🤵🏼","text":"","type":1,"order":1544,"group":1,"subgroup":25,"version":3,"tone":2},{"label":"person in tuxedo: medium skin tone","hexcode":"1F935-1F3FD","emoji":"🤵🏽","text":"","type":1,"order":1545,"group":1,"subgroup":25,"version":3,"tone":3},{"label":"person in tuxedo: medium-dark skin tone","hexcode":"1F935-1F3FE","emoji":"🤵🏾","text":"","type":1,"order":1546,"group":1,"subgroup":25,"version":3,"tone":4},{"label":"person in tuxedo: dark skin tone","hexcode":"1F935-1F3FF","emoji":"🤵🏿","text":"","type":1,"order":1547,"group":1,"subgroup":25,"version":3,"tone":5}]},{"label":"man in tuxedo","hexcode":"1F935-200D-2642-FE0F","tags":["formal","groom","man","tuxedo","wedding"],"emoji":"🤵‍♂️","text":"","type":1,"order":1548,"group":1,"subgroup":25,"version":13,"gender":1,"skins":[{"label":"man in tuxedo: light skin tone","hexcode":"1F935-1F3FB-200D-2642-FE0F","emoji":"🤵🏻‍♂️","text":"","type":1,"order":1550,"group":1,"subgroup":25,"version":13,"gender":1,"tone":1},{"label":"man in tuxedo: medium-light skin tone","hexcode":"1F935-1F3FC-200D-2642-FE0F","emoji":"🤵🏼‍♂️","text":"","type":1,"order":1552,"group":1,"subgroup":25,"version":13,"gender":1,"tone":2},{"label":"man in tuxedo: medium skin tone","hexcode":"1F935-1F3FD-200D-2642-FE0F","emoji":"🤵🏽‍♂️","text":"","type":1,"order":1554,"group":1,"subgroup":25,"version":13,"gender":1,"tone":3},{"label":"man in tuxedo: medium-dark skin tone","hexcode":"1F935-1F3FE-200D-2642-FE0F","emoji":"🤵🏾‍♂️","text":"","type":1,"order":1556,"group":1,"subgroup":25,"version":13,"gender":1,"tone":4},{"label":"man in tuxedo: dark skin tone","hexcode":"1F935-1F3FF-200D-2642-FE0F","emoji":"🤵🏿‍♂️","text":"","type":1,"order":1558,"group":1,"subgroup":25,"version":13,"gender":1,"tone":5}]},{"label":"woman in tuxedo","hexcode":"1F935-200D-2640-FE0F","tags":["formal","tuxedo","wedding","woman"],"emoji":"🤵‍♀️","text":"","type":1,"order":1560,"group":1,"subgroup":25,"version":13,"gender":0,"skins":[{"label":"woman in tuxedo: light skin tone","hexcode":"1F935-1F3FB-200D-2640-FE0F","emoji":"🤵🏻‍♀️","text":"","type":1,"order":1562,"group":1,"subgroup":25,"version":13,"gender":0,"tone":1},{"label":"woman in tuxedo: medium-light skin tone","hexcode":"1F935-1F3FC-200D-2640-FE0F","emoji":"🤵🏼‍♀️","text":"","type":1,"order":1564,"group":1,"subgroup":25,"version":13,"gender":0,"tone":2},{"label":"woman in tuxedo: medium skin tone","hexcode":"1F935-1F3FD-200D-2640-FE0F","emoji":"🤵🏽‍♀️","text":"","type":1,"order":1566,"group":1,"subgroup":25,"version":13,"gender":0,"tone":3},{"label":"woman in tuxedo: medium-dark skin tone","hexcode":"1F935-1F3FE-200D-2640-FE0F","emoji":"🤵🏾‍♀️","text":"","type":1,"order":1568,"group":1,"subgroup":25,"version":13,"gender":0,"tone":4},{"label":"woman in tuxedo: dark skin tone","hexcode":"1F935-1F3FF-200D-2640-FE0F","emoji":"🤵🏿‍♀️","text":"","type":1,"order":1570,"group":1,"subgroup":25,"version":13,"gender":0,"tone":5}]},{"label":"person with veil","hexcode":"1F470","tags":["person","veil","wedding"],"emoji":"👰","text":"","type":1,"order":1572,"group":1,"subgroup":25,"version":0.6,"skins":[{"label":"person with veil: light skin tone","hexcode":"1F470-1F3FB","emoji":"👰🏻","text":"","type":1,"order":1573,"group":1,"subgroup":25,"version":1,"tone":1},{"label":"person with veil: medium-light skin tone","hexcode":"1F470-1F3FC","emoji":"👰🏼","text":"","type":1,"order":1574,"group":1,"subgroup":25,"version":1,"tone":2},{"label":"person with veil: medium skin tone","hexcode":"1F470-1F3FD","emoji":"👰🏽","text":"","type":1,"order":1575,"group":1,"subgroup":25,"version":1,"tone":3},{"label":"person with veil: medium-dark skin tone","hexcode":"1F470-1F3FE","emoji":"👰🏾","text":"","type":1,"order":1576,"group":1,"subgroup":25,"version":1,"tone":4},{"label":"person with veil: dark skin tone","hexcode":"1F470-1F3FF","emoji":"👰🏿","text":"","type":1,"order":1577,"group":1,"subgroup":25,"version":1,"tone":5}]},{"label":"man with veil","hexcode":"1F470-200D-2642-FE0F","tags":["man","veil","wedding"],"emoji":"👰‍♂️","text":"","type":1,"order":1578,"group":1,"subgroup":25,"version":13,"gender":1,"skins":[{"label":"man with veil: light skin tone","hexcode":"1F470-1F3FB-200D-2642-FE0F","emoji":"👰🏻‍♂️","text":"","type":1,"order":1580,"group":1,"subgroup":25,"version":13,"gender":1,"tone":1},{"label":"man with veil: medium-light skin tone","hexcode":"1F470-1F3FC-200D-2642-FE0F","emoji":"👰🏼‍♂️","text":"","type":1,"order":1582,"group":1,"subgroup":25,"version":13,"gender":1,"tone":2},{"label":"man with veil: medium skin tone","hexcode":"1F470-1F3FD-200D-2642-FE0F","emoji":"👰🏽‍♂️","text":"","type":1,"order":1584,"group":1,"subgroup":25,"version":13,"gender":1,"tone":3},{"label":"man with veil: medium-dark skin tone","hexcode":"1F470-1F3FE-200D-2642-FE0F","emoji":"👰🏾‍♂️","text":"","type":1,"order":1586,"group":1,"subgroup":25,"version":13,"gender":1,"tone":4},{"label":"man with veil: dark skin tone","hexcode":"1F470-1F3FF-200D-2642-FE0F","emoji":"👰🏿‍♂️","text":"","type":1,"order":1588,"group":1,"subgroup":25,"version":13,"gender":1,"tone":5}]},{"label":"woman with veil","hexcode":"1F470-200D-2640-FE0F","tags":["bride","veil","wedding","woman"],"emoji":"👰‍♀️","text":"","type":1,"order":1590,"group":1,"subgroup":25,"version":13,"gender":0,"skins":[{"label":"woman with veil: light skin tone","hexcode":"1F470-1F3FB-200D-2640-FE0F","emoji":"👰🏻‍♀️","text":"","type":1,"order":1592,"group":1,"subgroup":25,"version":13,"gender":0,"tone":1},{"label":"woman with veil: medium-light skin tone","hexcode":"1F470-1F3FC-200D-2640-FE0F","emoji":"👰🏼‍♀️","text":"","type":1,"order":1594,"group":1,"subgroup":25,"version":13,"gender":0,"tone":2},{"label":"woman with veil: medium skin tone","hexcode":"1F470-1F3FD-200D-2640-FE0F","emoji":"👰🏽‍♀️","text":"","type":1,"order":1596,"group":1,"subgroup":25,"version":13,"gender":0,"tone":3},{"label":"woman with veil: medium-dark skin tone","hexcode":"1F470-1F3FE-200D-2640-FE0F","emoji":"👰🏾‍♀️","text":"","type":1,"order":1598,"group":1,"subgroup":25,"version":13,"gender":0,"tone":4},{"label":"woman with veil: dark skin tone","hexcode":"1F470-1F3FF-200D-2640-FE0F","emoji":"👰🏿‍♀️","text":"","type":1,"order":1600,"group":1,"subgroup":25,"version":13,"gender":0,"tone":5}]},{"label":"pregnant woman","hexcode":"1F930","tags":["pregnant","woman"],"emoji":"🤰","text":"","type":1,"order":1602,"group":1,"subgroup":25,"version":3,"skins":[{"label":"pregnant woman: light skin tone","hexcode":"1F930-1F3FB","emoji":"🤰🏻","text":"","type":1,"order":1603,"group":1,"subgroup":25,"version":3,"tone":1},{"label":"pregnant woman: medium-light skin tone","hexcode":"1F930-1F3FC","emoji":"🤰🏼","text":"","type":1,"order":1604,"group":1,"subgroup":25,"version":3,"tone":2},{"label":"pregnant woman: medium skin tone","hexcode":"1F930-1F3FD","emoji":"🤰🏽","text":"","type":1,"order":1605,"group":1,"subgroup":25,"version":3,"tone":3},{"label":"pregnant woman: medium-dark skin tone","hexcode":"1F930-1F3FE","emoji":"🤰🏾","text":"","type":1,"order":1606,"group":1,"subgroup":25,"version":3,"tone":4},{"label":"pregnant woman: dark skin tone","hexcode":"1F930-1F3FF","emoji":"🤰🏿","text":"","type":1,"order":1607,"group":1,"subgroup":25,"version":3,"tone":5}]},{"label":"pregnant man","hexcode":"1FAC3","tags":["belly","bloated","full","man","overeat","pregnant"],"emoji":"🫃","text":"","type":1,"order":1608,"group":1,"subgroup":25,"version":14,"skins":[{"label":"pregnant man: light skin tone","hexcode":"1FAC3-1F3FB","emoji":"🫃🏻","text":"","type":1,"order":1609,"group":1,"subgroup":25,"version":14,"tone":1},{"label":"pregnant man: medium-light skin tone","hexcode":"1FAC3-1F3FC","emoji":"🫃🏼","text":"","type":1,"order":1610,"group":1,"subgroup":25,"version":14,"tone":2},{"label":"pregnant man: medium skin tone","hexcode":"1FAC3-1F3FD","emoji":"🫃🏽","text":"","type":1,"order":1611,"group":1,"subgroup":25,"version":14,"tone":3},{"label":"pregnant man: medium-dark skin tone","hexcode":"1FAC3-1F3FE","emoji":"🫃🏾","text":"","type":1,"order":1612,"group":1,"subgroup":25,"version":14,"tone":4},{"label":"pregnant man: dark skin tone","hexcode":"1FAC3-1F3FF","emoji":"🫃🏿","text":"","type":1,"order":1613,"group":1,"subgroup":25,"version":14,"tone":5}]},{"label":"pregnant person","hexcode":"1FAC4","tags":["belly","bloated","full","overeat","person","pregnant","stuffed"],"emoji":"🫄","text":"","type":1,"order":1614,"group":1,"subgroup":25,"version":14,"skins":[{"label":"pregnant person: light skin tone","hexcode":"1FAC4-1F3FB","emoji":"🫄🏻","text":"","type":1,"order":1615,"group":1,"subgroup":25,"version":14,"tone":1},{"label":"pregnant person: medium-light skin tone","hexcode":"1FAC4-1F3FC","emoji":"🫄🏼","text":"","type":1,"order":1616,"group":1,"subgroup":25,"version":14,"tone":2},{"label":"pregnant person: medium skin tone","hexcode":"1FAC4-1F3FD","emoji":"🫄🏽","text":"","type":1,"order":1617,"group":1,"subgroup":25,"version":14,"tone":3},{"label":"pregnant person: medium-dark skin tone","hexcode":"1FAC4-1F3FE","emoji":"🫄🏾","text":"","type":1,"order":1618,"group":1,"subgroup":25,"version":14,"tone":4},{"label":"pregnant person: dark skin tone","hexcode":"1FAC4-1F3FF","emoji":"🫄🏿","text":"","type":1,"order":1619,"group":1,"subgroup":25,"version":14,"tone":5}]},{"label":"breast-feeding","hexcode":"1F931","tags":["baby","breast","feeding","mom","mother","nursing","woman"],"emoji":"🤱","text":"","type":1,"order":1620,"group":1,"subgroup":25,"version":5,"skins":[{"label":"breast-feeding: light skin tone","hexcode":"1F931-1F3FB","emoji":"🤱🏻","text":"","type":1,"order":1621,"group":1,"subgroup":25,"version":5,"tone":1},{"label":"breast-feeding: medium-light skin tone","hexcode":"1F931-1F3FC","emoji":"🤱🏼","text":"","type":1,"order":1622,"group":1,"subgroup":25,"version":5,"tone":2},{"label":"breast-feeding: medium skin tone","hexcode":"1F931-1F3FD","emoji":"🤱🏽","text":"","type":1,"order":1623,"group":1,"subgroup":25,"version":5,"tone":3},{"label":"breast-feeding: medium-dark skin tone","hexcode":"1F931-1F3FE","emoji":"🤱🏾","text":"","type":1,"order":1624,"group":1,"subgroup":25,"version":5,"tone":4},{"label":"breast-feeding: dark skin tone","hexcode":"1F931-1F3FF","emoji":"🤱🏿","text":"","type":1,"order":1625,"group":1,"subgroup":25,"version":5,"tone":5}]},{"label":"woman feeding baby","hexcode":"1F469-200D-1F37C","tags":["baby","feed","feeding","mom","mother","nanny","newborn","nursing","woman"],"emoji":"👩‍🍼","text":"","type":1,"order":1626,"group":1,"subgroup":25,"version":13,"skins":[{"label":"woman feeding baby: light skin tone","hexcode":"1F469-1F3FB-200D-1F37C","emoji":"👩🏻‍🍼","text":"","type":1,"order":1627,"group":1,"subgroup":25,"version":13,"tone":1},{"label":"woman feeding baby: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F37C","emoji":"👩🏼‍🍼","text":"","type":1,"order":1628,"group":1,"subgroup":25,"version":13,"tone":2},{"label":"woman feeding baby: medium skin tone","hexcode":"1F469-1F3FD-200D-1F37C","emoji":"👩🏽‍🍼","text":"","type":1,"order":1629,"group":1,"subgroup":25,"version":13,"tone":3},{"label":"woman feeding baby: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F37C","emoji":"👩🏾‍🍼","text":"","type":1,"order":1630,"group":1,"subgroup":25,"version":13,"tone":4},{"label":"woman feeding baby: dark skin tone","hexcode":"1F469-1F3FF-200D-1F37C","emoji":"👩🏿‍🍼","text":"","type":1,"order":1631,"group":1,"subgroup":25,"version":13,"tone":5}]},{"label":"man feeding baby","hexcode":"1F468-200D-1F37C","tags":["baby","dad","father","feed","feeding","man","nanny","newborn","nursing"],"emoji":"👨‍🍼","text":"","type":1,"order":1632,"group":1,"subgroup":25,"version":13,"skins":[{"label":"man feeding baby: light skin tone","hexcode":"1F468-1F3FB-200D-1F37C","emoji":"👨🏻‍🍼","text":"","type":1,"order":1633,"group":1,"subgroup":25,"version":13,"tone":1},{"label":"man feeding baby: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F37C","emoji":"👨🏼‍🍼","text":"","type":1,"order":1634,"group":1,"subgroup":25,"version":13,"tone":2},{"label":"man feeding baby: medium skin tone","hexcode":"1F468-1F3FD-200D-1F37C","emoji":"👨🏽‍🍼","text":"","type":1,"order":1635,"group":1,"subgroup":25,"version":13,"tone":3},{"label":"man feeding baby: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F37C","emoji":"👨🏾‍🍼","text":"","type":1,"order":1636,"group":1,"subgroup":25,"version":13,"tone":4},{"label":"man feeding baby: dark skin tone","hexcode":"1F468-1F3FF-200D-1F37C","emoji":"👨🏿‍🍼","text":"","type":1,"order":1637,"group":1,"subgroup":25,"version":13,"tone":5}]},{"label":"person feeding baby","hexcode":"1F9D1-200D-1F37C","tags":["baby","feed","feeding","nanny","newborn","nursing","parent"],"emoji":"🧑‍🍼","text":"","type":1,"order":1638,"group":1,"subgroup":25,"version":13,"skins":[{"label":"person feeding baby: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F37C","emoji":"🧑🏻‍🍼","text":"","type":1,"order":1639,"group":1,"subgroup":25,"version":13,"tone":1},{"label":"person feeding baby: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F37C","emoji":"🧑🏼‍🍼","text":"","type":1,"order":1640,"group":1,"subgroup":25,"version":13,"tone":2},{"label":"person feeding baby: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F37C","emoji":"🧑🏽‍🍼","text":"","type":1,"order":1641,"group":1,"subgroup":25,"version":13,"tone":3},{"label":"person feeding baby: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F37C","emoji":"🧑🏾‍🍼","text":"","type":1,"order":1642,"group":1,"subgroup":25,"version":13,"tone":4},{"label":"person feeding baby: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F37C","emoji":"🧑🏿‍🍼","text":"","type":1,"order":1643,"group":1,"subgroup":25,"version":13,"tone":5}]},{"label":"baby angel","hexcode":"1F47C","tags":["angel","baby","church","face","fairy","fairytale","fantasy","tale"],"emoji":"👼","text":"","type":1,"order":1644,"group":1,"subgroup":26,"version":0.6,"skins":[{"label":"baby angel: light skin tone","hexcode":"1F47C-1F3FB","emoji":"👼🏻","text":"","type":1,"order":1645,"group":1,"subgroup":26,"version":1,"tone":1},{"label":"baby angel: medium-light skin tone","hexcode":"1F47C-1F3FC","emoji":"👼🏼","text":"","type":1,"order":1646,"group":1,"subgroup":26,"version":1,"tone":2},{"label":"baby angel: medium skin tone","hexcode":"1F47C-1F3FD","emoji":"👼🏽","text":"","type":1,"order":1647,"group":1,"subgroup":26,"version":1,"tone":3},{"label":"baby angel: medium-dark skin tone","hexcode":"1F47C-1F3FE","emoji":"👼🏾","text":"","type":1,"order":1648,"group":1,"subgroup":26,"version":1,"tone":4},{"label":"baby angel: dark skin tone","hexcode":"1F47C-1F3FF","emoji":"👼🏿","text":"","type":1,"order":1649,"group":1,"subgroup":26,"version":1,"tone":5}]},{"label":"Santa Claus","hexcode":"1F385","tags":["celebration","christmas","claus","fairy","fantasy","father","holiday","merry","santa","tale","xmas"],"emoji":"🎅","text":"","type":1,"order":1650,"group":1,"subgroup":26,"version":0.6,"skins":[{"label":"Santa Claus: light skin tone","hexcode":"1F385-1F3FB","emoji":"🎅🏻","text":"","type":1,"order":1651,"group":1,"subgroup":26,"version":1,"tone":1},{"label":"Santa Claus: medium-light skin tone","hexcode":"1F385-1F3FC","emoji":"🎅🏼","text":"","type":1,"order":1652,"group":1,"subgroup":26,"version":1,"tone":2},{"label":"Santa Claus: medium skin tone","hexcode":"1F385-1F3FD","emoji":"🎅🏽","text":"","type":1,"order":1653,"group":1,"subgroup":26,"version":1,"tone":3},{"label":"Santa Claus: medium-dark skin tone","hexcode":"1F385-1F3FE","emoji":"🎅🏾","text":"","type":1,"order":1654,"group":1,"subgroup":26,"version":1,"tone":4},{"label":"Santa Claus: dark skin tone","hexcode":"1F385-1F3FF","emoji":"🎅🏿","text":"","type":1,"order":1655,"group":1,"subgroup":26,"version":1,"tone":5}]},{"label":"Mrs. Claus","hexcode":"1F936","tags":["celebration","christmas","claus","fairy","fantasy","holiday","merry","mother","mrs","santa","tale","xmas"],"emoji":"🤶","text":"","type":1,"order":1656,"group":1,"subgroup":26,"version":3,"skins":[{"label":"Mrs. Claus: light skin tone","hexcode":"1F936-1F3FB","emoji":"🤶🏻","text":"","type":1,"order":1657,"group":1,"subgroup":26,"version":3,"tone":1},{"label":"Mrs. Claus: medium-light skin tone","hexcode":"1F936-1F3FC","emoji":"🤶🏼","text":"","type":1,"order":1658,"group":1,"subgroup":26,"version":3,"tone":2},{"label":"Mrs. Claus: medium skin tone","hexcode":"1F936-1F3FD","emoji":"🤶🏽","text":"","type":1,"order":1659,"group":1,"subgroup":26,"version":3,"tone":3},{"label":"Mrs. Claus: medium-dark skin tone","hexcode":"1F936-1F3FE","emoji":"🤶🏾","text":"","type":1,"order":1660,"group":1,"subgroup":26,"version":3,"tone":4},{"label":"Mrs. Claus: dark skin tone","hexcode":"1F936-1F3FF","emoji":"🤶🏿","text":"","type":1,"order":1661,"group":1,"subgroup":26,"version":3,"tone":5}]},{"label":"Mx Claus","hexcode":"1F9D1-200D-1F384","tags":["celebration","christmas","claus","fairy","fantasy","holiday","merry","mx","santa","tale","xmas"],"emoji":"🧑‍🎄","text":"","type":1,"order":1662,"group":1,"subgroup":26,"version":13,"skins":[{"label":"Mx Claus: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F384","emoji":"🧑🏻‍🎄","text":"","type":1,"order":1663,"group":1,"subgroup":26,"version":13,"tone":1},{"label":"Mx Claus: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F384","emoji":"🧑🏼‍🎄","text":"","type":1,"order":1664,"group":1,"subgroup":26,"version":13,"tone":2},{"label":"Mx Claus: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F384","emoji":"🧑🏽‍🎄","text":"","type":1,"order":1665,"group":1,"subgroup":26,"version":13,"tone":3},{"label":"Mx Claus: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F384","emoji":"🧑🏾‍🎄","text":"","type":1,"order":1666,"group":1,"subgroup":26,"version":13,"tone":4},{"label":"Mx Claus: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F384","emoji":"🧑🏿‍🎄","text":"","type":1,"order":1667,"group":1,"subgroup":26,"version":13,"tone":5}]},{"label":"superhero","hexcode":"1F9B8","tags":["good","hero","superpower"],"emoji":"🦸","text":"","type":1,"order":1668,"group":1,"subgroup":26,"version":11,"skins":[{"label":"superhero: light skin tone","hexcode":"1F9B8-1F3FB","emoji":"🦸🏻","text":"","type":1,"order":1669,"group":1,"subgroup":26,"version":11,"tone":1},{"label":"superhero: medium-light skin tone","hexcode":"1F9B8-1F3FC","emoji":"🦸🏼","text":"","type":1,"order":1670,"group":1,"subgroup":26,"version":11,"tone":2},{"label":"superhero: medium skin tone","hexcode":"1F9B8-1F3FD","emoji":"🦸🏽","text":"","type":1,"order":1671,"group":1,"subgroup":26,"version":11,"tone":3},{"label":"superhero: medium-dark skin tone","hexcode":"1F9B8-1F3FE","emoji":"🦸🏾","text":"","type":1,"order":1672,"group":1,"subgroup":26,"version":11,"tone":4},{"label":"superhero: dark skin tone","hexcode":"1F9B8-1F3FF","emoji":"🦸🏿","text":"","type":1,"order":1673,"group":1,"subgroup":26,"version":11,"tone":5}]},{"label":"man superhero","hexcode":"1F9B8-200D-2642-FE0F","tags":["good","hero","man","superhero","superpower"],"emoji":"🦸‍♂️","text":"","type":1,"order":1674,"group":1,"subgroup":26,"version":11,"gender":1,"skins":[{"label":"man superhero: light skin tone","hexcode":"1F9B8-1F3FB-200D-2642-FE0F","emoji":"🦸🏻‍♂️","text":"","type":1,"order":1676,"group":1,"subgroup":26,"version":11,"gender":1,"tone":1},{"label":"man superhero: medium-light skin tone","hexcode":"1F9B8-1F3FC-200D-2642-FE0F","emoji":"🦸🏼‍♂️","text":"","type":1,"order":1678,"group":1,"subgroup":26,"version":11,"gender":1,"tone":2},{"label":"man superhero: medium skin tone","hexcode":"1F9B8-1F3FD-200D-2642-FE0F","emoji":"🦸🏽‍♂️","text":"","type":1,"order":1680,"group":1,"subgroup":26,"version":11,"gender":1,"tone":3},{"label":"man superhero: medium-dark skin tone","hexcode":"1F9B8-1F3FE-200D-2642-FE0F","emoji":"🦸🏾‍♂️","text":"","type":1,"order":1682,"group":1,"subgroup":26,"version":11,"gender":1,"tone":4},{"label":"man superhero: dark skin tone","hexcode":"1F9B8-1F3FF-200D-2642-FE0F","emoji":"🦸🏿‍♂️","text":"","type":1,"order":1684,"group":1,"subgroup":26,"version":11,"gender":1,"tone":5}]},{"label":"woman superhero","hexcode":"1F9B8-200D-2640-FE0F","tags":["good","hero","heroine","superhero","superpower","woman"],"emoji":"🦸‍♀️","text":"","type":1,"order":1686,"group":1,"subgroup":26,"version":11,"gender":0,"skins":[{"label":"woman superhero: light skin tone","hexcode":"1F9B8-1F3FB-200D-2640-FE0F","emoji":"🦸🏻‍♀️","text":"","type":1,"order":1688,"group":1,"subgroup":26,"version":11,"gender":0,"tone":1},{"label":"woman superhero: medium-light skin tone","hexcode":"1F9B8-1F3FC-200D-2640-FE0F","emoji":"🦸🏼‍♀️","text":"","type":1,"order":1690,"group":1,"subgroup":26,"version":11,"gender":0,"tone":2},{"label":"woman superhero: medium skin tone","hexcode":"1F9B8-1F3FD-200D-2640-FE0F","emoji":"🦸🏽‍♀️","text":"","type":1,"order":1692,"group":1,"subgroup":26,"version":11,"gender":0,"tone":3},{"label":"woman superhero: medium-dark skin tone","hexcode":"1F9B8-1F3FE-200D-2640-FE0F","emoji":"🦸🏾‍♀️","text":"","type":1,"order":1694,"group":1,"subgroup":26,"version":11,"gender":0,"tone":4},{"label":"woman superhero: dark skin tone","hexcode":"1F9B8-1F3FF-200D-2640-FE0F","emoji":"🦸🏿‍♀️","text":"","type":1,"order":1696,"group":1,"subgroup":26,"version":11,"gender":0,"tone":5}]},{"label":"supervillain","hexcode":"1F9B9","tags":["bad","criminal","evil","superpower","villain"],"emoji":"🦹","text":"","type":1,"order":1698,"group":1,"subgroup":26,"version":11,"skins":[{"label":"supervillain: light skin tone","hexcode":"1F9B9-1F3FB","emoji":"🦹🏻","text":"","type":1,"order":1699,"group":1,"subgroup":26,"version":11,"tone":1},{"label":"supervillain: medium-light skin tone","hexcode":"1F9B9-1F3FC","emoji":"🦹🏼","text":"","type":1,"order":1700,"group":1,"subgroup":26,"version":11,"tone":2},{"label":"supervillain: medium skin tone","hexcode":"1F9B9-1F3FD","emoji":"🦹🏽","text":"","type":1,"order":1701,"group":1,"subgroup":26,"version":11,"tone":3},{"label":"supervillain: medium-dark skin tone","hexcode":"1F9B9-1F3FE","emoji":"🦹🏾","text":"","type":1,"order":1702,"group":1,"subgroup":26,"version":11,"tone":4},{"label":"supervillain: dark skin tone","hexcode":"1F9B9-1F3FF","emoji":"🦹🏿","text":"","type":1,"order":1703,"group":1,"subgroup":26,"version":11,"tone":5}]},{"label":"man supervillain","hexcode":"1F9B9-200D-2642-FE0F","tags":["bad","criminal","evil","man","superpower","supervillain","villain"],"emoji":"🦹‍♂️","text":"","type":1,"order":1704,"group":1,"subgroup":26,"version":11,"gender":1,"skins":[{"label":"man supervillain: light skin tone","hexcode":"1F9B9-1F3FB-200D-2642-FE0F","emoji":"🦹🏻‍♂️","text":"","type":1,"order":1706,"group":1,"subgroup":26,"version":11,"gender":1,"tone":1},{"label":"man supervillain: medium-light skin tone","hexcode":"1F9B9-1F3FC-200D-2642-FE0F","emoji":"🦹🏼‍♂️","text":"","type":1,"order":1708,"group":1,"subgroup":26,"version":11,"gender":1,"tone":2},{"label":"man supervillain: medium skin tone","hexcode":"1F9B9-1F3FD-200D-2642-FE0F","emoji":"🦹🏽‍♂️","text":"","type":1,"order":1710,"group":1,"subgroup":26,"version":11,"gender":1,"tone":3},{"label":"man supervillain: medium-dark skin tone","hexcode":"1F9B9-1F3FE-200D-2642-FE0F","emoji":"🦹🏾‍♂️","text":"","type":1,"order":1712,"group":1,"subgroup":26,"version":11,"gender":1,"tone":4},{"label":"man supervillain: dark skin tone","hexcode":"1F9B9-1F3FF-200D-2642-FE0F","emoji":"🦹🏿‍♂️","text":"","type":1,"order":1714,"group":1,"subgroup":26,"version":11,"gender":1,"tone":5}]},{"label":"woman supervillain","hexcode":"1F9B9-200D-2640-FE0F","tags":["bad","criminal","evil","superpower","supervillain","villain","woman"],"emoji":"🦹‍♀️","text":"","type":1,"order":1716,"group":1,"subgroup":26,"version":11,"gender":0,"skins":[{"label":"woman supervillain: light skin tone","hexcode":"1F9B9-1F3FB-200D-2640-FE0F","emoji":"🦹🏻‍♀️","text":"","type":1,"order":1718,"group":1,"subgroup":26,"version":11,"gender":0,"tone":1},{"label":"woman supervillain: medium-light skin tone","hexcode":"1F9B9-1F3FC-200D-2640-FE0F","emoji":"🦹🏼‍♀️","text":"","type":1,"order":1720,"group":1,"subgroup":26,"version":11,"gender":0,"tone":2},{"label":"woman supervillain: medium skin tone","hexcode":"1F9B9-1F3FD-200D-2640-FE0F","emoji":"🦹🏽‍♀️","text":"","type":1,"order":1722,"group":1,"subgroup":26,"version":11,"gender":0,"tone":3},{"label":"woman supervillain: medium-dark skin tone","hexcode":"1F9B9-1F3FE-200D-2640-FE0F","emoji":"🦹🏾‍♀️","text":"","type":1,"order":1724,"group":1,"subgroup":26,"version":11,"gender":0,"tone":4},{"label":"woman supervillain: dark skin tone","hexcode":"1F9B9-1F3FF-200D-2640-FE0F","emoji":"🦹🏿‍♀️","text":"","type":1,"order":1726,"group":1,"subgroup":26,"version":11,"gender":0,"tone":5}]},{"label":"mage","hexcode":"1F9D9","tags":["fantasy","magic","play","sorcerer","sorceress","sorcery","spell","summon","witch","wizard"],"emoji":"🧙","text":"","type":1,"order":1728,"group":1,"subgroup":26,"version":5,"skins":[{"label":"mage: light skin tone","hexcode":"1F9D9-1F3FB","emoji":"🧙🏻","text":"","type":1,"order":1729,"group":1,"subgroup":26,"version":5,"tone":1},{"label":"mage: medium-light skin tone","hexcode":"1F9D9-1F3FC","emoji":"🧙🏼","text":"","type":1,"order":1730,"group":1,"subgroup":26,"version":5,"tone":2},{"label":"mage: medium skin tone","hexcode":"1F9D9-1F3FD","emoji":"🧙🏽","text":"","type":1,"order":1731,"group":1,"subgroup":26,"version":5,"tone":3},{"label":"mage: medium-dark skin tone","hexcode":"1F9D9-1F3FE","emoji":"🧙🏾","text":"","type":1,"order":1732,"group":1,"subgroup":26,"version":5,"tone":4},{"label":"mage: dark skin tone","hexcode":"1F9D9-1F3FF","emoji":"🧙🏿","text":"","type":1,"order":1733,"group":1,"subgroup":26,"version":5,"tone":5}]},{"label":"man mage","hexcode":"1F9D9-200D-2642-FE0F","tags":["fantasy","mage","magic","man","play","sorcerer","sorceress","sorcery","spell","summon","witch","wizard"],"emoji":"🧙‍♂️","text":"","type":1,"order":1734,"group":1,"subgroup":26,"version":5,"gender":1,"emoticon":":{>","skins":[{"label":"man mage: light skin tone","hexcode":"1F9D9-1F3FB-200D-2642-FE0F","emoji":"🧙🏻‍♂️","text":"","type":1,"order":1736,"group":1,"subgroup":26,"version":5,"gender":1,"tone":1},{"label":"man mage: medium-light skin tone","hexcode":"1F9D9-1F3FC-200D-2642-FE0F","emoji":"🧙🏼‍♂️","text":"","type":1,"order":1738,"group":1,"subgroup":26,"version":5,"gender":1,"tone":2},{"label":"man mage: medium skin tone","hexcode":"1F9D9-1F3FD-200D-2642-FE0F","emoji":"🧙🏽‍♂️","text":"","type":1,"order":1740,"group":1,"subgroup":26,"version":5,"gender":1,"tone":3},{"label":"man mage: medium-dark skin tone","hexcode":"1F9D9-1F3FE-200D-2642-FE0F","emoji":"🧙🏾‍♂️","text":"","type":1,"order":1742,"group":1,"subgroup":26,"version":5,"gender":1,"tone":4},{"label":"man mage: dark skin tone","hexcode":"1F9D9-1F3FF-200D-2642-FE0F","emoji":"🧙🏿‍♂️","text":"","type":1,"order":1744,"group":1,"subgroup":26,"version":5,"gender":1,"tone":5}]},{"label":"woman mage","hexcode":"1F9D9-200D-2640-FE0F","tags":["fantasy","mage","magic","play","sorcerer","sorceress","sorcery","spell","summon","witch","wizard","woman"],"emoji":"🧙‍♀️","text":"","type":1,"order":1746,"group":1,"subgroup":26,"version":5,"gender":0,"skins":[{"label":"woman mage: light skin tone","hexcode":"1F9D9-1F3FB-200D-2640-FE0F","emoji":"🧙🏻‍♀️","text":"","type":1,"order":1748,"group":1,"subgroup":26,"version":5,"gender":0,"tone":1},{"label":"woman mage: medium-light skin tone","hexcode":"1F9D9-1F3FC-200D-2640-FE0F","emoji":"🧙🏼‍♀️","text":"","type":1,"order":1750,"group":1,"subgroup":26,"version":5,"gender":0,"tone":2},{"label":"woman mage: medium skin tone","hexcode":"1F9D9-1F3FD-200D-2640-FE0F","emoji":"🧙🏽‍♀️","text":"","type":1,"order":1752,"group":1,"subgroup":26,"version":5,"gender":0,"tone":3},{"label":"woman mage: medium-dark skin tone","hexcode":"1F9D9-1F3FE-200D-2640-FE0F","emoji":"🧙🏾‍♀️","text":"","type":1,"order":1754,"group":1,"subgroup":26,"version":5,"gender":0,"tone":4},{"label":"woman mage: dark skin tone","hexcode":"1F9D9-1F3FF-200D-2640-FE0F","emoji":"🧙🏿‍♀️","text":"","type":1,"order":1756,"group":1,"subgroup":26,"version":5,"gender":0,"tone":5}]},{"label":"fairy","hexcode":"1F9DA","tags":["fairytale","fantasy","myth","person","pixie","tale","wings"],"emoji":"🧚","text":"","type":1,"order":1758,"group":1,"subgroup":26,"version":5,"skins":[{"label":"fairy: light skin tone","hexcode":"1F9DA-1F3FB","emoji":"🧚🏻","text":"","type":1,"order":1759,"group":1,"subgroup":26,"version":5,"tone":1},{"label":"fairy: medium-light skin tone","hexcode":"1F9DA-1F3FC","emoji":"🧚🏼","text":"","type":1,"order":1760,"group":1,"subgroup":26,"version":5,"tone":2},{"label":"fairy: medium skin tone","hexcode":"1F9DA-1F3FD","emoji":"🧚🏽","text":"","type":1,"order":1761,"group":1,"subgroup":26,"version":5,"tone":3},{"label":"fairy: medium-dark skin tone","hexcode":"1F9DA-1F3FE","emoji":"🧚🏾","text":"","type":1,"order":1762,"group":1,"subgroup":26,"version":5,"tone":4},{"label":"fairy: dark skin tone","hexcode":"1F9DA-1F3FF","emoji":"🧚🏿","text":"","type":1,"order":1763,"group":1,"subgroup":26,"version":5,"tone":5}]},{"label":"man fairy","hexcode":"1F9DA-200D-2642-FE0F","tags":["fairy","fairytale","fantasy","man","myth","oberon","person","pixie","puck","tale","wings"],"emoji":"🧚‍♂️","text":"","type":1,"order":1764,"group":1,"subgroup":26,"version":5,"gender":1,"skins":[{"label":"man fairy: light skin tone","hexcode":"1F9DA-1F3FB-200D-2642-FE0F","emoji":"🧚🏻‍♂️","text":"","type":1,"order":1766,"group":1,"subgroup":26,"version":5,"gender":1,"tone":1},{"label":"man fairy: medium-light skin tone","hexcode":"1F9DA-1F3FC-200D-2642-FE0F","emoji":"🧚🏼‍♂️","text":"","type":1,"order":1768,"group":1,"subgroup":26,"version":5,"gender":1,"tone":2},{"label":"man fairy: medium skin tone","hexcode":"1F9DA-1F3FD-200D-2642-FE0F","emoji":"🧚🏽‍♂️","text":"","type":1,"order":1770,"group":1,"subgroup":26,"version":5,"gender":1,"tone":3},{"label":"man fairy: medium-dark skin tone","hexcode":"1F9DA-1F3FE-200D-2642-FE0F","emoji":"🧚🏾‍♂️","text":"","type":1,"order":1772,"group":1,"subgroup":26,"version":5,"gender":1,"tone":4},{"label":"man fairy: dark skin tone","hexcode":"1F9DA-1F3FF-200D-2642-FE0F","emoji":"🧚🏿‍♂️","text":"","type":1,"order":1774,"group":1,"subgroup":26,"version":5,"gender":1,"tone":5}]},{"label":"woman fairy","hexcode":"1F9DA-200D-2640-FE0F","tags":["fairy","fairytale","fantasy","myth","person","pixie","tale","titania","wings","woman"],"emoji":"🧚‍♀️","text":"","type":1,"order":1776,"group":1,"subgroup":26,"version":5,"gender":0,"skins":[{"label":"woman fairy: light skin tone","hexcode":"1F9DA-1F3FB-200D-2640-FE0F","emoji":"🧚🏻‍♀️","text":"","type":1,"order":1778,"group":1,"subgroup":26,"version":5,"gender":0,"tone":1},{"label":"woman fairy: medium-light skin tone","hexcode":"1F9DA-1F3FC-200D-2640-FE0F","emoji":"🧚🏼‍♀️","text":"","type":1,"order":1780,"group":1,"subgroup":26,"version":5,"gender":0,"tone":2},{"label":"woman fairy: medium skin tone","hexcode":"1F9DA-1F3FD-200D-2640-FE0F","emoji":"🧚🏽‍♀️","text":"","type":1,"order":1782,"group":1,"subgroup":26,"version":5,"gender":0,"tone":3},{"label":"woman fairy: medium-dark skin tone","hexcode":"1F9DA-1F3FE-200D-2640-FE0F","emoji":"🧚🏾‍♀️","text":"","type":1,"order":1784,"group":1,"subgroup":26,"version":5,"gender":0,"tone":4},{"label":"woman fairy: dark skin tone","hexcode":"1F9DA-1F3FF-200D-2640-FE0F","emoji":"🧚🏿‍♀️","text":"","type":1,"order":1786,"group":1,"subgroup":26,"version":5,"gender":0,"tone":5}]},{"label":"vampire","hexcode":"1F9DB","tags":["blood","dracula","fangs","halloween","scary","supernatural","teeth","undead"],"emoji":"🧛","text":"","type":1,"order":1788,"group":1,"subgroup":26,"version":5,"emoticon":":E","skins":[{"label":"vampire: light skin tone","hexcode":"1F9DB-1F3FB","emoji":"🧛🏻","text":"","type":1,"order":1789,"group":1,"subgroup":26,"version":5,"tone":1},{"label":"vampire: medium-light skin tone","hexcode":"1F9DB-1F3FC","emoji":"🧛🏼","text":"","type":1,"order":1790,"group":1,"subgroup":26,"version":5,"tone":2},{"label":"vampire: medium skin tone","hexcode":"1F9DB-1F3FD","emoji":"🧛🏽","text":"","type":1,"order":1791,"group":1,"subgroup":26,"version":5,"tone":3},{"label":"vampire: medium-dark skin tone","hexcode":"1F9DB-1F3FE","emoji":"🧛🏾","text":"","type":1,"order":1792,"group":1,"subgroup":26,"version":5,"tone":4},{"label":"vampire: dark skin tone","hexcode":"1F9DB-1F3FF","emoji":"🧛🏿","text":"","type":1,"order":1793,"group":1,"subgroup":26,"version":5,"tone":5}]},{"label":"man vampire","hexcode":"1F9DB-200D-2642-FE0F","tags":["blood","fangs","halloween","man","scary","supernatural","teeth","undead","vampire"],"emoji":"🧛‍♂️","text":"","type":1,"order":1794,"group":1,"subgroup":26,"version":5,"gender":1,"skins":[{"label":"man vampire: light skin tone","hexcode":"1F9DB-1F3FB-200D-2642-FE0F","emoji":"🧛🏻‍♂️","text":"","type":1,"order":1796,"group":1,"subgroup":26,"version":5,"gender":1,"tone":1},{"label":"man vampire: medium-light skin tone","hexcode":"1F9DB-1F3FC-200D-2642-FE0F","emoji":"🧛🏼‍♂️","text":"","type":1,"order":1798,"group":1,"subgroup":26,"version":5,"gender":1,"tone":2},{"label":"man vampire: medium skin tone","hexcode":"1F9DB-1F3FD-200D-2642-FE0F","emoji":"🧛🏽‍♂️","text":"","type":1,"order":1800,"group":1,"subgroup":26,"version":5,"gender":1,"tone":3},{"label":"man vampire: medium-dark skin tone","hexcode":"1F9DB-1F3FE-200D-2642-FE0F","emoji":"🧛🏾‍♂️","text":"","type":1,"order":1802,"group":1,"subgroup":26,"version":5,"gender":1,"tone":4},{"label":"man vampire: dark skin tone","hexcode":"1F9DB-1F3FF-200D-2642-FE0F","emoji":"🧛🏿‍♂️","text":"","type":1,"order":1804,"group":1,"subgroup":26,"version":5,"gender":1,"tone":5}]},{"label":"woman vampire","hexcode":"1F9DB-200D-2640-FE0F","tags":["blood","fangs","halloween","scary","supernatural","teeth","undead","vampire","woman"],"emoji":"🧛‍♀️","text":"","type":1,"order":1806,"group":1,"subgroup":26,"version":5,"gender":0,"skins":[{"label":"woman vampire: light skin tone","hexcode":"1F9DB-1F3FB-200D-2640-FE0F","emoji":"🧛🏻‍♀️","text":"","type":1,"order":1808,"group":1,"subgroup":26,"version":5,"gender":0,"tone":1},{"label":"woman vampire: medium-light skin tone","hexcode":"1F9DB-1F3FC-200D-2640-FE0F","emoji":"🧛🏼‍♀️","text":"","type":1,"order":1810,"group":1,"subgroup":26,"version":5,"gender":0,"tone":2},{"label":"woman vampire: medium skin tone","hexcode":"1F9DB-1F3FD-200D-2640-FE0F","emoji":"🧛🏽‍♀️","text":"","type":1,"order":1812,"group":1,"subgroup":26,"version":5,"gender":0,"tone":3},{"label":"woman vampire: medium-dark skin tone","hexcode":"1F9DB-1F3FE-200D-2640-FE0F","emoji":"🧛🏾‍♀️","text":"","type":1,"order":1814,"group":1,"subgroup":26,"version":5,"gender":0,"tone":4},{"label":"woman vampire: dark skin tone","hexcode":"1F9DB-1F3FF-200D-2640-FE0F","emoji":"🧛🏿‍♀️","text":"","type":1,"order":1816,"group":1,"subgroup":26,"version":5,"gender":0,"tone":5}]},{"label":"merperson","hexcode":"1F9DC","tags":["creature","fairytale","folklore","ocean","sea","siren","trident"],"emoji":"🧜","text":"","type":1,"order":1818,"group":1,"subgroup":26,"version":5,"skins":[{"label":"merperson: light skin tone","hexcode":"1F9DC-1F3FB","emoji":"🧜🏻","text":"","type":1,"order":1819,"group":1,"subgroup":26,"version":5,"tone":1},{"label":"merperson: medium-light skin tone","hexcode":"1F9DC-1F3FC","emoji":"🧜🏼","text":"","type":1,"order":1820,"group":1,"subgroup":26,"version":5,"tone":2},{"label":"merperson: medium skin tone","hexcode":"1F9DC-1F3FD","emoji":"🧜🏽","text":"","type":1,"order":1821,"group":1,"subgroup":26,"version":5,"tone":3},{"label":"merperson: medium-dark skin tone","hexcode":"1F9DC-1F3FE","emoji":"🧜🏾","text":"","type":1,"order":1822,"group":1,"subgroup":26,"version":5,"tone":4},{"label":"merperson: dark skin tone","hexcode":"1F9DC-1F3FF","emoji":"🧜🏿","text":"","type":1,"order":1823,"group":1,"subgroup":26,"version":5,"tone":5}]},{"label":"merman","hexcode":"1F9DC-200D-2642-FE0F","tags":["creature","fairytale","folklore","neptune","ocean","poseidon","sea","siren","trident","triton"],"emoji":"🧜‍♂️","text":"","type":1,"order":1824,"group":1,"subgroup":26,"version":5,"gender":1,"skins":[{"label":"merman: light skin tone","hexcode":"1F9DC-1F3FB-200D-2642-FE0F","emoji":"🧜🏻‍♂️","text":"","type":1,"order":1826,"group":1,"subgroup":26,"version":5,"gender":1,"tone":1},{"label":"merman: medium-light skin tone","hexcode":"1F9DC-1F3FC-200D-2642-FE0F","emoji":"🧜🏼‍♂️","text":"","type":1,"order":1828,"group":1,"subgroup":26,"version":5,"gender":1,"tone":2},{"label":"merman: medium skin tone","hexcode":"1F9DC-1F3FD-200D-2642-FE0F","emoji":"🧜🏽‍♂️","text":"","type":1,"order":1830,"group":1,"subgroup":26,"version":5,"gender":1,"tone":3},{"label":"merman: medium-dark skin tone","hexcode":"1F9DC-1F3FE-200D-2642-FE0F","emoji":"🧜🏾‍♂️","text":"","type":1,"order":1832,"group":1,"subgroup":26,"version":5,"gender":1,"tone":4},{"label":"merman: dark skin tone","hexcode":"1F9DC-1F3FF-200D-2642-FE0F","emoji":"🧜🏿‍♂️","text":"","type":1,"order":1834,"group":1,"subgroup":26,"version":5,"gender":1,"tone":5}]},{"label":"mermaid","hexcode":"1F9DC-200D-2640-FE0F","tags":["creature","fairytale","folklore","merwoman","ocean","sea","siren","trident"],"emoji":"🧜‍♀️","text":"","type":1,"order":1836,"group":1,"subgroup":26,"version":5,"gender":0,"skins":[{"label":"mermaid: light skin tone","hexcode":"1F9DC-1F3FB-200D-2640-FE0F","emoji":"🧜🏻‍♀️","text":"","type":1,"order":1838,"group":1,"subgroup":26,"version":5,"gender":0,"tone":1},{"label":"mermaid: medium-light skin tone","hexcode":"1F9DC-1F3FC-200D-2640-FE0F","emoji":"🧜🏼‍♀️","text":"","type":1,"order":1840,"group":1,"subgroup":26,"version":5,"gender":0,"tone":2},{"label":"mermaid: medium skin tone","hexcode":"1F9DC-1F3FD-200D-2640-FE0F","emoji":"🧜🏽‍♀️","text":"","type":1,"order":1842,"group":1,"subgroup":26,"version":5,"gender":0,"tone":3},{"label":"mermaid: medium-dark skin tone","hexcode":"1F9DC-1F3FE-200D-2640-FE0F","emoji":"🧜🏾‍♀️","text":"","type":1,"order":1844,"group":1,"subgroup":26,"version":5,"gender":0,"tone":4},{"label":"mermaid: dark skin tone","hexcode":"1F9DC-1F3FF-200D-2640-FE0F","emoji":"🧜🏿‍♀️","text":"","type":1,"order":1846,"group":1,"subgroup":26,"version":5,"gender":0,"tone":5}]},{"label":"elf","hexcode":"1F9DD","tags":["elves","enchantment","fantasy","folklore","magic","magical","myth"],"emoji":"🧝","text":"","type":1,"order":1848,"group":1,"subgroup":26,"version":5,"skins":[{"label":"elf: light skin tone","hexcode":"1F9DD-1F3FB","emoji":"🧝🏻","text":"","type":1,"order":1849,"group":1,"subgroup":26,"version":5,"tone":1},{"label":"elf: medium-light skin tone","hexcode":"1F9DD-1F3FC","emoji":"🧝🏼","text":"","type":1,"order":1850,"group":1,"subgroup":26,"version":5,"tone":2},{"label":"elf: medium skin tone","hexcode":"1F9DD-1F3FD","emoji":"🧝🏽","text":"","type":1,"order":1851,"group":1,"subgroup":26,"version":5,"tone":3},{"label":"elf: medium-dark skin tone","hexcode":"1F9DD-1F3FE","emoji":"🧝🏾","text":"","type":1,"order":1852,"group":1,"subgroup":26,"version":5,"tone":4},{"label":"elf: dark skin tone","hexcode":"1F9DD-1F3FF","emoji":"🧝🏿","text":"","type":1,"order":1853,"group":1,"subgroup":26,"version":5,"tone":5}]},{"label":"man elf","hexcode":"1F9DD-200D-2642-FE0F","tags":["elf","elves","enchantment","fantasy","folklore","magic","magical","man","myth"],"emoji":"🧝‍♂️","text":"","type":1,"order":1854,"group":1,"subgroup":26,"version":5,"gender":1,"skins":[{"label":"man elf: light skin tone","hexcode":"1F9DD-1F3FB-200D-2642-FE0F","emoji":"🧝🏻‍♂️","text":"","type":1,"order":1856,"group":1,"subgroup":26,"version":5,"gender":1,"tone":1},{"label":"man elf: medium-light skin tone","hexcode":"1F9DD-1F3FC-200D-2642-FE0F","emoji":"🧝🏼‍♂️","text":"","type":1,"order":1858,"group":1,"subgroup":26,"version":5,"gender":1,"tone":2},{"label":"man elf: medium skin tone","hexcode":"1F9DD-1F3FD-200D-2642-FE0F","emoji":"🧝🏽‍♂️","text":"","type":1,"order":1860,"group":1,"subgroup":26,"version":5,"gender":1,"tone":3},{"label":"man elf: medium-dark skin tone","hexcode":"1F9DD-1F3FE-200D-2642-FE0F","emoji":"🧝🏾‍♂️","text":"","type":1,"order":1862,"group":1,"subgroup":26,"version":5,"gender":1,"tone":4},{"label":"man elf: dark skin tone","hexcode":"1F9DD-1F3FF-200D-2642-FE0F","emoji":"🧝🏿‍♂️","text":"","type":1,"order":1864,"group":1,"subgroup":26,"version":5,"gender":1,"tone":5}]},{"label":"woman elf","hexcode":"1F9DD-200D-2640-FE0F","tags":["elf","elves","enchantment","fantasy","folklore","magic","magical","myth","woman"],"emoji":"🧝‍♀️","text":"","type":1,"order":1866,"group":1,"subgroup":26,"version":5,"gender":0,"skins":[{"label":"woman elf: light skin tone","hexcode":"1F9DD-1F3FB-200D-2640-FE0F","emoji":"🧝🏻‍♀️","text":"","type":1,"order":1868,"group":1,"subgroup":26,"version":5,"gender":0,"tone":1},{"label":"woman elf: medium-light skin tone","hexcode":"1F9DD-1F3FC-200D-2640-FE0F","emoji":"🧝🏼‍♀️","text":"","type":1,"order":1870,"group":1,"subgroup":26,"version":5,"gender":0,"tone":2},{"label":"woman elf: medium skin tone","hexcode":"1F9DD-1F3FD-200D-2640-FE0F","emoji":"🧝🏽‍♀️","text":"","type":1,"order":1872,"group":1,"subgroup":26,"version":5,"gender":0,"tone":3},{"label":"woman elf: medium-dark skin tone","hexcode":"1F9DD-1F3FE-200D-2640-FE0F","emoji":"🧝🏾‍♀️","text":"","type":1,"order":1874,"group":1,"subgroup":26,"version":5,"gender":0,"tone":4},{"label":"woman elf: dark skin tone","hexcode":"1F9DD-1F3FF-200D-2640-FE0F","emoji":"🧝🏿‍♀️","text":"","type":1,"order":1876,"group":1,"subgroup":26,"version":5,"gender":0,"tone":5}]},{"label":"genie","hexcode":"1F9DE","tags":["djinn","fantasy","jinn","lamp","myth","rub","wishes"],"emoji":"🧞","text":"","type":1,"order":1878,"group":1,"subgroup":26,"version":5},{"label":"man genie","hexcode":"1F9DE-200D-2642-FE0F","tags":["djinn","fantasy","genie","jinn","lamp","man","myth","rub","wishes"],"emoji":"🧞‍♂️","text":"","type":1,"order":1879,"group":1,"subgroup":26,"version":5,"gender":1},{"label":"woman genie","hexcode":"1F9DE-200D-2640-FE0F","tags":["djinn","fantasy","genie","jinn","lamp","myth","rub","wishes","woman"],"emoji":"🧞‍♀️","text":"","type":1,"order":1881,"group":1,"subgroup":26,"version":5,"gender":0},{"label":"zombie","hexcode":"1F9DF","tags":["apocalypse","dead","halloween","horror","scary","undead","walking"],"emoji":"🧟","text":"","type":1,"order":1883,"group":1,"subgroup":26,"version":5,"emoticon":"8#"},{"label":"man zombie","hexcode":"1F9DF-200D-2642-FE0F","tags":["apocalypse","dead","halloween","horror","man","scary","undead","walking","zombie"],"emoji":"🧟‍♂️","text":"","type":1,"order":1884,"group":1,"subgroup":26,"version":5,"gender":1},{"label":"woman zombie","hexcode":"1F9DF-200D-2640-FE0F","tags":["apocalypse","dead","halloween","horror","scary","undead","walking","woman","zombie"],"emoji":"🧟‍♀️","text":"","type":1,"order":1886,"group":1,"subgroup":26,"version":5,"gender":0},{"label":"troll","hexcode":"1F9CC","tags":["fairy","fantasy","monster","tale","trolling"],"emoji":"🧌","text":"","type":1,"order":1888,"group":1,"subgroup":26,"version":14},{"label":"person getting massage","hexcode":"1F486","tags":["face","getting","headache","massage","person","relax","relaxing","salon","soothe","spa","tension","therapy","treatment"],"emoji":"💆","text":"","type":1,"order":1889,"group":1,"subgroup":27,"version":0.6,"skins":[{"label":"person getting massage: light skin tone","hexcode":"1F486-1F3FB","emoji":"💆🏻","text":"","type":1,"order":1890,"group":1,"subgroup":27,"version":1,"tone":1},{"label":"person getting massage: medium-light skin tone","hexcode":"1F486-1F3FC","emoji":"💆🏼","text":"","type":1,"order":1891,"group":1,"subgroup":27,"version":1,"tone":2},{"label":"person getting massage: medium skin tone","hexcode":"1F486-1F3FD","emoji":"💆🏽","text":"","type":1,"order":1892,"group":1,"subgroup":27,"version":1,"tone":3},{"label":"person getting massage: medium-dark skin tone","hexcode":"1F486-1F3FE","emoji":"💆🏾","text":"","type":1,"order":1893,"group":1,"subgroup":27,"version":1,"tone":4},{"label":"person getting massage: dark skin tone","hexcode":"1F486-1F3FF","emoji":"💆🏿","text":"","type":1,"order":1894,"group":1,"subgroup":27,"version":1,"tone":5}]},{"label":"man getting massage","hexcode":"1F486-200D-2642-FE0F","tags":["face","getting","headache","man","massage","relax","relaxing","salon","soothe","spa","tension","therapy","treatment"],"emoji":"💆‍♂️","text":"","type":1,"order":1895,"group":1,"subgroup":27,"version":4,"gender":1,"skins":[{"label":"man getting massage: light skin tone","hexcode":"1F486-1F3FB-200D-2642-FE0F","emoji":"💆🏻‍♂️","text":"","type":1,"order":1897,"group":1,"subgroup":27,"version":4,"gender":1,"tone":1},{"label":"man getting massage: medium-light skin tone","hexcode":"1F486-1F3FC-200D-2642-FE0F","emoji":"💆🏼‍♂️","text":"","type":1,"order":1899,"group":1,"subgroup":27,"version":4,"gender":1,"tone":2},{"label":"man getting massage: medium skin tone","hexcode":"1F486-1F3FD-200D-2642-FE0F","emoji":"💆🏽‍♂️","text":"","type":1,"order":1901,"group":1,"subgroup":27,"version":4,"gender":1,"tone":3},{"label":"man getting massage: medium-dark skin tone","hexcode":"1F486-1F3FE-200D-2642-FE0F","emoji":"💆🏾‍♂️","text":"","type":1,"order":1903,"group":1,"subgroup":27,"version":4,"gender":1,"tone":4},{"label":"man getting massage: dark skin tone","hexcode":"1F486-1F3FF-200D-2642-FE0F","emoji":"💆🏿‍♂️","text":"","type":1,"order":1905,"group":1,"subgroup":27,"version":4,"gender":1,"tone":5}]},{"label":"woman getting massage","hexcode":"1F486-200D-2640-FE0F","tags":["face","getting","headache","massage","relax","relaxing","salon","soothe","spa","tension","therapy","treatment","woman"],"emoji":"💆‍♀️","text":"","type":1,"order":1907,"group":1,"subgroup":27,"version":4,"gender":0,"skins":[{"label":"woman getting massage: light skin tone","hexcode":"1F486-1F3FB-200D-2640-FE0F","emoji":"💆🏻‍♀️","text":"","type":1,"order":1909,"group":1,"subgroup":27,"version":4,"gender":0,"tone":1},{"label":"woman getting massage: medium-light skin tone","hexcode":"1F486-1F3FC-200D-2640-FE0F","emoji":"💆🏼‍♀️","text":"","type":1,"order":1911,"group":1,"subgroup":27,"version":4,"gender":0,"tone":2},{"label":"woman getting massage: medium skin tone","hexcode":"1F486-1F3FD-200D-2640-FE0F","emoji":"💆🏽‍♀️","text":"","type":1,"order":1913,"group":1,"subgroup":27,"version":4,"gender":0,"tone":3},{"label":"woman getting massage: medium-dark skin tone","hexcode":"1F486-1F3FE-200D-2640-FE0F","emoji":"💆🏾‍♀️","text":"","type":1,"order":1915,"group":1,"subgroup":27,"version":4,"gender":0,"tone":4},{"label":"woman getting massage: dark skin tone","hexcode":"1F486-1F3FF-200D-2640-FE0F","emoji":"💆🏿‍♀️","text":"","type":1,"order":1917,"group":1,"subgroup":27,"version":4,"gender":0,"tone":5}]},{"label":"person getting haircut","hexcode":"1F487","tags":["barber","beauty","chop","cosmetology","cut","groom","hair","haircut","parlor","person","shears","style"],"emoji":"💇","text":"","type":1,"order":1919,"group":1,"subgroup":27,"version":0.6,"skins":[{"label":"person getting haircut: light skin tone","hexcode":"1F487-1F3FB","emoji":"💇🏻","text":"","type":1,"order":1920,"group":1,"subgroup":27,"version":1,"tone":1},{"label":"person getting haircut: medium-light skin tone","hexcode":"1F487-1F3FC","emoji":"💇🏼","text":"","type":1,"order":1921,"group":1,"subgroup":27,"version":1,"tone":2},{"label":"person getting haircut: medium skin tone","hexcode":"1F487-1F3FD","emoji":"💇🏽","text":"","type":1,"order":1922,"group":1,"subgroup":27,"version":1,"tone":3},{"label":"person getting haircut: medium-dark skin tone","hexcode":"1F487-1F3FE","emoji":"💇🏾","text":"","type":1,"order":1923,"group":1,"subgroup":27,"version":1,"tone":4},{"label":"person getting haircut: dark skin tone","hexcode":"1F487-1F3FF","emoji":"💇🏿","text":"","type":1,"order":1924,"group":1,"subgroup":27,"version":1,"tone":5}]},{"label":"man getting haircut","hexcode":"1F487-200D-2642-FE0F","tags":["barber","beauty","chop","cosmetology","cut","groom","hair","haircut","man","parlor","person","shears","style"],"emoji":"💇‍♂️","text":"","type":1,"order":1925,"group":1,"subgroup":27,"version":4,"gender":1,"skins":[{"label":"man getting haircut: light skin tone","hexcode":"1F487-1F3FB-200D-2642-FE0F","emoji":"💇🏻‍♂️","text":"","type":1,"order":1927,"group":1,"subgroup":27,"version":4,"gender":1,"tone":1},{"label":"man getting haircut: medium-light skin tone","hexcode":"1F487-1F3FC-200D-2642-FE0F","emoji":"💇🏼‍♂️","text":"","type":1,"order":1929,"group":1,"subgroup":27,"version":4,"gender":1,"tone":2},{"label":"man getting haircut: medium skin tone","hexcode":"1F487-1F3FD-200D-2642-FE0F","emoji":"💇🏽‍♂️","text":"","type":1,"order":1931,"group":1,"subgroup":27,"version":4,"gender":1,"tone":3},{"label":"man getting haircut: medium-dark skin tone","hexcode":"1F487-1F3FE-200D-2642-FE0F","emoji":"💇🏾‍♂️","text":"","type":1,"order":1933,"group":1,"subgroup":27,"version":4,"gender":1,"tone":4},{"label":"man getting haircut: dark skin tone","hexcode":"1F487-1F3FF-200D-2642-FE0F","emoji":"💇🏿‍♂️","text":"","type":1,"order":1935,"group":1,"subgroup":27,"version":4,"gender":1,"tone":5}]},{"label":"woman getting haircut","hexcode":"1F487-200D-2640-FE0F","tags":["barber","beauty","chop","cosmetology","cut","groom","hair","haircut","parlor","person","shears","style","woman"],"emoji":"💇‍♀️","text":"","type":1,"order":1937,"group":1,"subgroup":27,"version":4,"gender":0,"skins":[{"label":"woman getting haircut: light skin tone","hexcode":"1F487-1F3FB-200D-2640-FE0F","emoji":"💇🏻‍♀️","text":"","type":1,"order":1939,"group":1,"subgroup":27,"version":4,"gender":0,"tone":1},{"label":"woman getting haircut: medium-light skin tone","hexcode":"1F487-1F3FC-200D-2640-FE0F","emoji":"💇🏼‍♀️","text":"","type":1,"order":1941,"group":1,"subgroup":27,"version":4,"gender":0,"tone":2},{"label":"woman getting haircut: medium skin tone","hexcode":"1F487-1F3FD-200D-2640-FE0F","emoji":"💇🏽‍♀️","text":"","type":1,"order":1943,"group":1,"subgroup":27,"version":4,"gender":0,"tone":3},{"label":"woman getting haircut: medium-dark skin tone","hexcode":"1F487-1F3FE-200D-2640-FE0F","emoji":"💇🏾‍♀️","text":"","type":1,"order":1945,"group":1,"subgroup":27,"version":4,"gender":0,"tone":4},{"label":"woman getting haircut: dark skin tone","hexcode":"1F487-1F3FF-200D-2640-FE0F","emoji":"💇🏿‍♀️","text":"","type":1,"order":1947,"group":1,"subgroup":27,"version":4,"gender":0,"tone":5}]},{"label":"person walking","hexcode":"1F6B6","tags":["amble","gait","hike","man","pace","pedestrian","person","stride","stroll","walk","walking"],"emoji":"🚶","text":"","type":1,"order":1949,"group":1,"subgroup":27,"version":0.6,"skins":[{"label":"person walking: light skin tone","hexcode":"1F6B6-1F3FB","emoji":"🚶🏻","text":"","type":1,"order":1950,"group":1,"subgroup":27,"version":1,"tone":1},{"label":"person walking: medium-light skin tone","hexcode":"1F6B6-1F3FC","emoji":"🚶🏼","text":"","type":1,"order":1951,"group":1,"subgroup":27,"version":1,"tone":2},{"label":"person walking: medium skin tone","hexcode":"1F6B6-1F3FD","emoji":"🚶🏽","text":"","type":1,"order":1952,"group":1,"subgroup":27,"version":1,"tone":3},{"label":"person walking: medium-dark skin tone","hexcode":"1F6B6-1F3FE","emoji":"🚶🏾","text":"","type":1,"order":1953,"group":1,"subgroup":27,"version":1,"tone":4},{"label":"person walking: dark skin tone","hexcode":"1F6B6-1F3FF","emoji":"🚶🏿","text":"","type":1,"order":1954,"group":1,"subgroup":27,"version":1,"tone":5}]},{"label":"man walking","hexcode":"1F6B6-200D-2642-FE0F","tags":["amble","gait","hike","man","pace","pedestrian","stride","stroll","walk","walking"],"emoji":"🚶‍♂️","text":"","type":1,"order":1955,"group":1,"subgroup":27,"version":4,"gender":1,"skins":[{"label":"man walking: light skin tone","hexcode":"1F6B6-1F3FB-200D-2642-FE0F","emoji":"🚶🏻‍♂️","text":"","type":1,"order":1957,"group":1,"subgroup":27,"version":4,"gender":1,"tone":1},{"label":"man walking: medium-light skin tone","hexcode":"1F6B6-1F3FC-200D-2642-FE0F","emoji":"🚶🏼‍♂️","text":"","type":1,"order":1959,"group":1,"subgroup":27,"version":4,"gender":1,"tone":2},{"label":"man walking: medium skin tone","hexcode":"1F6B6-1F3FD-200D-2642-FE0F","emoji":"🚶🏽‍♂️","text":"","type":1,"order":1961,"group":1,"subgroup":27,"version":4,"gender":1,"tone":3},{"label":"man walking: medium-dark skin tone","hexcode":"1F6B6-1F3FE-200D-2642-FE0F","emoji":"🚶🏾‍♂️","text":"","type":1,"order":1963,"group":1,"subgroup":27,"version":4,"gender":1,"tone":4},{"label":"man walking: dark skin tone","hexcode":"1F6B6-1F3FF-200D-2642-FE0F","emoji":"🚶🏿‍♂️","text":"","type":1,"order":1965,"group":1,"subgroup":27,"version":4,"gender":1,"tone":5}]},{"label":"woman walking","hexcode":"1F6B6-200D-2640-FE0F","tags":["amble","gait","hike","man","pace","pedestrian","stride","stroll","walk","walking","woman"],"emoji":"🚶‍♀️","text":"","type":1,"order":1967,"group":1,"subgroup":27,"version":4,"gender":0,"skins":[{"label":"woman walking: light skin tone","hexcode":"1F6B6-1F3FB-200D-2640-FE0F","emoji":"🚶🏻‍♀️","text":"","type":1,"order":1969,"group":1,"subgroup":27,"version":4,"gender":0,"tone":1},{"label":"woman walking: medium-light skin tone","hexcode":"1F6B6-1F3FC-200D-2640-FE0F","emoji":"🚶🏼‍♀️","text":"","type":1,"order":1971,"group":1,"subgroup":27,"version":4,"gender":0,"tone":2},{"label":"woman walking: medium skin tone","hexcode":"1F6B6-1F3FD-200D-2640-FE0F","emoji":"🚶🏽‍♀️","text":"","type":1,"order":1973,"group":1,"subgroup":27,"version":4,"gender":0,"tone":3},{"label":"woman walking: medium-dark skin tone","hexcode":"1F6B6-1F3FE-200D-2640-FE0F","emoji":"🚶🏾‍♀️","text":"","type":1,"order":1975,"group":1,"subgroup":27,"version":4,"gender":0,"tone":4},{"label":"woman walking: dark skin tone","hexcode":"1F6B6-1F3FF-200D-2640-FE0F","emoji":"🚶🏿‍♀️","text":"","type":1,"order":1977,"group":1,"subgroup":27,"version":4,"gender":0,"tone":5}]},{"label":"person walking facing right","hexcode":"1F6B6-200D-27A1-FE0F","tags":["amble","gait","hike","man","pace","pedestrian","person","stride","stroll","walk","walking"],"emoji":"🚶‍➡️","text":"","type":1,"order":1979,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"person walking facing right","hexcode":"1F6B6-1F3FB-200D-27A1-FE0F","emoji":"🚶🏻‍➡️","text":"","type":1,"order":1981,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"person walking facing right","hexcode":"1F6B6-1F3FC-200D-27A1-FE0F","emoji":"🚶🏼‍➡️","text":"","type":1,"order":1983,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"person walking facing right","hexcode":"1F6B6-1F3FD-200D-27A1-FE0F","emoji":"🚶🏽‍➡️","text":"","type":1,"order":1985,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"person walking facing right","hexcode":"1F6B6-1F3FE-200D-27A1-FE0F","emoji":"🚶🏾‍➡️","text":"","type":1,"order":1987,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"person walking facing right","hexcode":"1F6B6-1F3FF-200D-27A1-FE0F","emoji":"🚶🏿‍➡️","text":"","type":1,"order":1989,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"woman walking facing right","hexcode":"1F6B6-200D-2640-FE0F-200D-27A1-FE0F","tags":["amble","gait","hike","man","pace","pedestrian","stride","stroll","walk","walking","woman"],"emoji":"🚶‍♀️‍➡️","text":"","type":1,"order":1991,"group":1,"subgroup":27,"version":15.1,"gender":0,"skins":[{"label":"woman walking facing right","hexcode":"1F6B6-1F3FB-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🚶🏻‍♀️‍➡️","text":"","type":1,"order":1995,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":1},{"label":"woman walking facing right","hexcode":"1F6B6-1F3FC-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🚶🏼‍♀️‍➡️","text":"","type":1,"order":1999,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":2},{"label":"woman walking facing right","hexcode":"1F6B6-1F3FD-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🚶🏽‍♀️‍➡️","text":"","type":1,"order":2003,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":3},{"label":"woman walking facing right","hexcode":"1F6B6-1F3FE-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🚶🏾‍♀️‍➡️","text":"","type":1,"order":2007,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":4},{"label":"woman walking facing right","hexcode":"1F6B6-1F3FF-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🚶🏿‍♀️‍➡️","text":"","type":1,"order":2011,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":5}]},{"label":"man walking facing right","hexcode":"1F6B6-200D-2642-FE0F-200D-27A1-FE0F","tags":["amble","gait","hike","man","pace","pedestrian","stride","stroll","walk","walking"],"emoji":"🚶‍♂️‍➡️","text":"","type":1,"order":2015,"group":1,"subgroup":27,"version":15.1,"gender":1,"skins":[{"label":"man walking facing right","hexcode":"1F6B6-1F3FB-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🚶🏻‍♂️‍➡️","text":"","type":1,"order":2019,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":1},{"label":"man walking facing right","hexcode":"1F6B6-1F3FC-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🚶🏼‍♂️‍➡️","text":"","type":1,"order":2023,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":2},{"label":"man walking facing right","hexcode":"1F6B6-1F3FD-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🚶🏽‍♂️‍➡️","text":"","type":1,"order":2027,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":3},{"label":"man walking facing right","hexcode":"1F6B6-1F3FE-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🚶🏾‍♂️‍➡️","text":"","type":1,"order":2031,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":4},{"label":"man walking facing right","hexcode":"1F6B6-1F3FF-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🚶🏿‍♂️‍➡️","text":"","type":1,"order":2035,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":5}]},{"label":"person standing","hexcode":"1F9CD","tags":["person","stand","standing"],"emoji":"🧍","text":"","type":1,"order":2039,"group":1,"subgroup":27,"version":12,"skins":[{"label":"person standing: light skin tone","hexcode":"1F9CD-1F3FB","emoji":"🧍🏻","text":"","type":1,"order":2040,"group":1,"subgroup":27,"version":12,"tone":1},{"label":"person standing: medium-light skin tone","hexcode":"1F9CD-1F3FC","emoji":"🧍🏼","text":"","type":1,"order":2041,"group":1,"subgroup":27,"version":12,"tone":2},{"label":"person standing: medium skin tone","hexcode":"1F9CD-1F3FD","emoji":"🧍🏽","text":"","type":1,"order":2042,"group":1,"subgroup":27,"version":12,"tone":3},{"label":"person standing: medium-dark skin tone","hexcode":"1F9CD-1F3FE","emoji":"🧍🏾","text":"","type":1,"order":2043,"group":1,"subgroup":27,"version":12,"tone":4},{"label":"person standing: dark skin tone","hexcode":"1F9CD-1F3FF","emoji":"🧍🏿","text":"","type":1,"order":2044,"group":1,"subgroup":27,"version":12,"tone":5}]},{"label":"man standing","hexcode":"1F9CD-200D-2642-FE0F","tags":["man","stand","standing"],"emoji":"🧍‍♂️","text":"","type":1,"order":2045,"group":1,"subgroup":27,"version":12,"gender":1,"skins":[{"label":"man standing: light skin tone","hexcode":"1F9CD-1F3FB-200D-2642-FE0F","emoji":"🧍🏻‍♂️","text":"","type":1,"order":2047,"group":1,"subgroup":27,"version":12,"gender":1,"tone":1},{"label":"man standing: medium-light skin tone","hexcode":"1F9CD-1F3FC-200D-2642-FE0F","emoji":"🧍🏼‍♂️","text":"","type":1,"order":2049,"group":1,"subgroup":27,"version":12,"gender":1,"tone":2},{"label":"man standing: medium skin tone","hexcode":"1F9CD-1F3FD-200D-2642-FE0F","emoji":"🧍🏽‍♂️","text":"","type":1,"order":2051,"group":1,"subgroup":27,"version":12,"gender":1,"tone":3},{"label":"man standing: medium-dark skin tone","hexcode":"1F9CD-1F3FE-200D-2642-FE0F","emoji":"🧍🏾‍♂️","text":"","type":1,"order":2053,"group":1,"subgroup":27,"version":12,"gender":1,"tone":4},{"label":"man standing: dark skin tone","hexcode":"1F9CD-1F3FF-200D-2642-FE0F","emoji":"🧍🏿‍♂️","text":"","type":1,"order":2055,"group":1,"subgroup":27,"version":12,"gender":1,"tone":5}]},{"label":"woman standing","hexcode":"1F9CD-200D-2640-FE0F","tags":["stand","standing","woman"],"emoji":"🧍‍♀️","text":"","type":1,"order":2057,"group":1,"subgroup":27,"version":12,"gender":0,"skins":[{"label":"woman standing: light skin tone","hexcode":"1F9CD-1F3FB-200D-2640-FE0F","emoji":"🧍🏻‍♀️","text":"","type":1,"order":2059,"group":1,"subgroup":27,"version":12,"gender":0,"tone":1},{"label":"woman standing: medium-light skin tone","hexcode":"1F9CD-1F3FC-200D-2640-FE0F","emoji":"🧍🏼‍♀️","text":"","type":1,"order":2061,"group":1,"subgroup":27,"version":12,"gender":0,"tone":2},{"label":"woman standing: medium skin tone","hexcode":"1F9CD-1F3FD-200D-2640-FE0F","emoji":"🧍🏽‍♀️","text":"","type":1,"order":2063,"group":1,"subgroup":27,"version":12,"gender":0,"tone":3},{"label":"woman standing: medium-dark skin tone","hexcode":"1F9CD-1F3FE-200D-2640-FE0F","emoji":"🧍🏾‍♀️","text":"","type":1,"order":2065,"group":1,"subgroup":27,"version":12,"gender":0,"tone":4},{"label":"woman standing: dark skin tone","hexcode":"1F9CD-1F3FF-200D-2640-FE0F","emoji":"🧍🏿‍♀️","text":"","type":1,"order":2067,"group":1,"subgroup":27,"version":12,"gender":0,"tone":5}]},{"label":"person kneeling","hexcode":"1F9CE","tags":["kneel","kneeling","knees","person"],"emoji":"🧎","text":"","type":1,"order":2069,"group":1,"subgroup":27,"version":12,"skins":[{"label":"person kneeling: light skin tone","hexcode":"1F9CE-1F3FB","emoji":"🧎🏻","text":"","type":1,"order":2070,"group":1,"subgroup":27,"version":12,"tone":1},{"label":"person kneeling: medium-light skin tone","hexcode":"1F9CE-1F3FC","emoji":"🧎🏼","text":"","type":1,"order":2071,"group":1,"subgroup":27,"version":12,"tone":2},{"label":"person kneeling: medium skin tone","hexcode":"1F9CE-1F3FD","emoji":"🧎🏽","text":"","type":1,"order":2072,"group":1,"subgroup":27,"version":12,"tone":3},{"label":"person kneeling: medium-dark skin tone","hexcode":"1F9CE-1F3FE","emoji":"🧎🏾","text":"","type":1,"order":2073,"group":1,"subgroup":27,"version":12,"tone":4},{"label":"person kneeling: dark skin tone","hexcode":"1F9CE-1F3FF","emoji":"🧎🏿","text":"","type":1,"order":2074,"group":1,"subgroup":27,"version":12,"tone":5}]},{"label":"man kneeling","hexcode":"1F9CE-200D-2642-FE0F","tags":["kneel","kneeling","knees","man"],"emoji":"🧎‍♂️","text":"","type":1,"order":2075,"group":1,"subgroup":27,"version":12,"gender":1,"skins":[{"label":"man kneeling: light skin tone","hexcode":"1F9CE-1F3FB-200D-2642-FE0F","emoji":"🧎🏻‍♂️","text":"","type":1,"order":2077,"group":1,"subgroup":27,"version":12,"gender":1,"tone":1},{"label":"man kneeling: medium-light skin tone","hexcode":"1F9CE-1F3FC-200D-2642-FE0F","emoji":"🧎🏼‍♂️","text":"","type":1,"order":2079,"group":1,"subgroup":27,"version":12,"gender":1,"tone":2},{"label":"man kneeling: medium skin tone","hexcode":"1F9CE-1F3FD-200D-2642-FE0F","emoji":"🧎🏽‍♂️","text":"","type":1,"order":2081,"group":1,"subgroup":27,"version":12,"gender":1,"tone":3},{"label":"man kneeling: medium-dark skin tone","hexcode":"1F9CE-1F3FE-200D-2642-FE0F","emoji":"🧎🏾‍♂️","text":"","type":1,"order":2083,"group":1,"subgroup":27,"version":12,"gender":1,"tone":4},{"label":"man kneeling: dark skin tone","hexcode":"1F9CE-1F3FF-200D-2642-FE0F","emoji":"🧎🏿‍♂️","text":"","type":1,"order":2085,"group":1,"subgroup":27,"version":12,"gender":1,"tone":5}]},{"label":"woman kneeling","hexcode":"1F9CE-200D-2640-FE0F","tags":["kneel","kneeling","knees","woman"],"emoji":"🧎‍♀️","text":"","type":1,"order":2087,"group":1,"subgroup":27,"version":12,"gender":0,"skins":[{"label":"woman kneeling: light skin tone","hexcode":"1F9CE-1F3FB-200D-2640-FE0F","emoji":"🧎🏻‍♀️","text":"","type":1,"order":2089,"group":1,"subgroup":27,"version":12,"gender":0,"tone":1},{"label":"woman kneeling: medium-light skin tone","hexcode":"1F9CE-1F3FC-200D-2640-FE0F","emoji":"🧎🏼‍♀️","text":"","type":1,"order":2091,"group":1,"subgroup":27,"version":12,"gender":0,"tone":2},{"label":"woman kneeling: medium skin tone","hexcode":"1F9CE-1F3FD-200D-2640-FE0F","emoji":"🧎🏽‍♀️","text":"","type":1,"order":2093,"group":1,"subgroup":27,"version":12,"gender":0,"tone":3},{"label":"woman kneeling: medium-dark skin tone","hexcode":"1F9CE-1F3FE-200D-2640-FE0F","emoji":"🧎🏾‍♀️","text":"","type":1,"order":2095,"group":1,"subgroup":27,"version":12,"gender":0,"tone":4},{"label":"woman kneeling: dark skin tone","hexcode":"1F9CE-1F3FF-200D-2640-FE0F","emoji":"🧎🏿‍♀️","text":"","type":1,"order":2097,"group":1,"subgroup":27,"version":12,"gender":0,"tone":5}]},{"label":"person kneeling facing right","hexcode":"1F9CE-200D-27A1-FE0F","tags":["kneel","kneeling","knees","person"],"emoji":"🧎‍➡️","text":"","type":1,"order":2099,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"person kneeling facing right","hexcode":"1F9CE-1F3FB-200D-27A1-FE0F","emoji":"🧎🏻‍➡️","text":"","type":1,"order":2101,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"person kneeling facing right","hexcode":"1F9CE-1F3FC-200D-27A1-FE0F","emoji":"🧎🏼‍➡️","text":"","type":1,"order":2103,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"person kneeling facing right","hexcode":"1F9CE-1F3FD-200D-27A1-FE0F","emoji":"🧎🏽‍➡️","text":"","type":1,"order":2105,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"person kneeling facing right","hexcode":"1F9CE-1F3FE-200D-27A1-FE0F","emoji":"🧎🏾‍➡️","text":"","type":1,"order":2107,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"person kneeling facing right","hexcode":"1F9CE-1F3FF-200D-27A1-FE0F","emoji":"🧎🏿‍➡️","text":"","type":1,"order":2109,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"woman kneeling facing right","hexcode":"1F9CE-200D-2640-FE0F-200D-27A1-FE0F","tags":["kneel","kneeling","knees","woman"],"emoji":"🧎‍♀️‍➡️","text":"","type":1,"order":2111,"group":1,"subgroup":27,"version":15.1,"gender":0,"skins":[{"label":"woman kneeling facing right","hexcode":"1F9CE-1F3FB-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🧎🏻‍♀️‍➡️","text":"","type":1,"order":2115,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":1},{"label":"woman kneeling facing right","hexcode":"1F9CE-1F3FC-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🧎🏼‍♀️‍➡️","text":"","type":1,"order":2119,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":2},{"label":"woman kneeling facing right","hexcode":"1F9CE-1F3FD-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🧎🏽‍♀️‍➡️","text":"","type":1,"order":2123,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":3},{"label":"woman kneeling facing right","hexcode":"1F9CE-1F3FE-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🧎🏾‍♀️‍➡️","text":"","type":1,"order":2127,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":4},{"label":"woman kneeling facing right","hexcode":"1F9CE-1F3FF-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🧎🏿‍♀️‍➡️","text":"","type":1,"order":2131,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":5}]},{"label":"man kneeling facing right","hexcode":"1F9CE-200D-2642-FE0F-200D-27A1-FE0F","tags":["kneel","kneeling","knees","man"],"emoji":"🧎‍♂️‍➡️","text":"","type":1,"order":2135,"group":1,"subgroup":27,"version":15.1,"gender":1,"skins":[{"label":"man kneeling facing right","hexcode":"1F9CE-1F3FB-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🧎🏻‍♂️‍➡️","text":"","type":1,"order":2139,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":1},{"label":"man kneeling facing right","hexcode":"1F9CE-1F3FC-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🧎🏼‍♂️‍➡️","text":"","type":1,"order":2143,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":2},{"label":"man kneeling facing right","hexcode":"1F9CE-1F3FD-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🧎🏽‍♂️‍➡️","text":"","type":1,"order":2147,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":3},{"label":"man kneeling facing right","hexcode":"1F9CE-1F3FE-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🧎🏾‍♂️‍➡️","text":"","type":1,"order":2151,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":4},{"label":"man kneeling facing right","hexcode":"1F9CE-1F3FF-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🧎🏿‍♂️‍➡️","text":"","type":1,"order":2155,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":5}]},{"label":"person with white cane","hexcode":"1F9D1-200D-1F9AF","tags":["accessibility","blind","cane","person","probing","white"],"emoji":"🧑‍🦯","text":"","type":1,"order":2159,"group":1,"subgroup":27,"version":12.1,"skins":[{"label":"person with white cane: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F9AF","emoji":"🧑🏻‍🦯","text":"","type":1,"order":2160,"group":1,"subgroup":27,"version":12.1,"tone":1},{"label":"person with white cane: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F9AF","emoji":"🧑🏼‍🦯","text":"","type":1,"order":2161,"group":1,"subgroup":27,"version":12.1,"tone":2},{"label":"person with white cane: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F9AF","emoji":"🧑🏽‍🦯","text":"","type":1,"order":2162,"group":1,"subgroup":27,"version":12.1,"tone":3},{"label":"person with white cane: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F9AF","emoji":"🧑🏾‍🦯","text":"","type":1,"order":2163,"group":1,"subgroup":27,"version":12.1,"tone":4},{"label":"person with white cane: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F9AF","emoji":"🧑🏿‍🦯","text":"","type":1,"order":2164,"group":1,"subgroup":27,"version":12.1,"tone":5}]},{"label":"person with white cane facing right","hexcode":"1F9D1-200D-1F9AF-200D-27A1-FE0F","tags":["accessibility","blind","cane","person","probing","white"],"emoji":"🧑‍🦯‍➡️","text":"","type":1,"order":2165,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"person with white cane facing right","hexcode":"1F9D1-1F3FB-200D-1F9AF-200D-27A1-FE0F","emoji":"🧑🏻‍🦯‍➡️","text":"","type":1,"order":2167,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"person with white cane facing right","hexcode":"1F9D1-1F3FC-200D-1F9AF-200D-27A1-FE0F","emoji":"🧑🏼‍🦯‍➡️","text":"","type":1,"order":2169,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"person with white cane facing right","hexcode":"1F9D1-1F3FD-200D-1F9AF-200D-27A1-FE0F","emoji":"🧑🏽‍🦯‍➡️","text":"","type":1,"order":2171,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"person with white cane facing right","hexcode":"1F9D1-1F3FE-200D-1F9AF-200D-27A1-FE0F","emoji":"🧑🏾‍🦯‍➡️","text":"","type":1,"order":2173,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"person with white cane facing right","hexcode":"1F9D1-1F3FF-200D-1F9AF-200D-27A1-FE0F","emoji":"🧑🏿‍🦯‍➡️","text":"","type":1,"order":2175,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"man with white cane","hexcode":"1F468-200D-1F9AF","tags":["accessibility","blind","cane","man","probing","white"],"emoji":"👨‍🦯","text":"","type":1,"order":2177,"group":1,"subgroup":27,"version":12,"skins":[{"label":"man with white cane: light skin tone","hexcode":"1F468-1F3FB-200D-1F9AF","emoji":"👨🏻‍🦯","text":"","type":1,"order":2178,"group":1,"subgroup":27,"version":12,"tone":1},{"label":"man with white cane: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F9AF","emoji":"👨🏼‍🦯","text":"","type":1,"order":2179,"group":1,"subgroup":27,"version":12,"tone":2},{"label":"man with white cane: medium skin tone","hexcode":"1F468-1F3FD-200D-1F9AF","emoji":"👨🏽‍🦯","text":"","type":1,"order":2180,"group":1,"subgroup":27,"version":12,"tone":3},{"label":"man with white cane: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F9AF","emoji":"👨🏾‍🦯","text":"","type":1,"order":2181,"group":1,"subgroup":27,"version":12,"tone":4},{"label":"man with white cane: dark skin tone","hexcode":"1F468-1F3FF-200D-1F9AF","emoji":"👨🏿‍🦯","text":"","type":1,"order":2182,"group":1,"subgroup":27,"version":12,"tone":5}]},{"label":"man with white cane facing right","hexcode":"1F468-200D-1F9AF-200D-27A1-FE0F","tags":["accessibility","blind","cane","man","probing","white"],"emoji":"👨‍🦯‍➡️","text":"","type":1,"order":2183,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"man with white cane facing right","hexcode":"1F468-1F3FB-200D-1F9AF-200D-27A1-FE0F","emoji":"👨🏻‍🦯‍➡️","text":"","type":1,"order":2185,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"man with white cane facing right","hexcode":"1F468-1F3FC-200D-1F9AF-200D-27A1-FE0F","emoji":"👨🏼‍🦯‍➡️","text":"","type":1,"order":2187,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"man with white cane facing right","hexcode":"1F468-1F3FD-200D-1F9AF-200D-27A1-FE0F","emoji":"👨🏽‍🦯‍➡️","text":"","type":1,"order":2189,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"man with white cane facing right","hexcode":"1F468-1F3FE-200D-1F9AF-200D-27A1-FE0F","emoji":"👨🏾‍🦯‍➡️","text":"","type":1,"order":2191,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"man with white cane facing right","hexcode":"1F468-1F3FF-200D-1F9AF-200D-27A1-FE0F","emoji":"👨🏿‍🦯‍➡️","text":"","type":1,"order":2193,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"woman with white cane","hexcode":"1F469-200D-1F9AF","tags":["accessibility","blind","cane","probing","white","woman"],"emoji":"👩‍🦯","text":"","type":1,"order":2195,"group":1,"subgroup":27,"version":12,"skins":[{"label":"woman with white cane: light skin tone","hexcode":"1F469-1F3FB-200D-1F9AF","emoji":"👩🏻‍🦯","text":"","type":1,"order":2196,"group":1,"subgroup":27,"version":12,"tone":1},{"label":"woman with white cane: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F9AF","emoji":"👩🏼‍🦯","text":"","type":1,"order":2197,"group":1,"subgroup":27,"version":12,"tone":2},{"label":"woman with white cane: medium skin tone","hexcode":"1F469-1F3FD-200D-1F9AF","emoji":"👩🏽‍🦯","text":"","type":1,"order":2198,"group":1,"subgroup":27,"version":12,"tone":3},{"label":"woman with white cane: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F9AF","emoji":"👩🏾‍🦯","text":"","type":1,"order":2199,"group":1,"subgroup":27,"version":12,"tone":4},{"label":"woman with white cane: dark skin tone","hexcode":"1F469-1F3FF-200D-1F9AF","emoji":"👩🏿‍🦯","text":"","type":1,"order":2200,"group":1,"subgroup":27,"version":12,"tone":5}]},{"label":"woman with white cane facing right","hexcode":"1F469-200D-1F9AF-200D-27A1-FE0F","tags":["accessibility","blind","cane","probing","white","woman"],"emoji":"👩‍🦯‍➡️","text":"","type":1,"order":2201,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"woman with white cane facing right","hexcode":"1F469-1F3FB-200D-1F9AF-200D-27A1-FE0F","emoji":"👩🏻‍🦯‍➡️","text":"","type":1,"order":2203,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"woman with white cane facing right","hexcode":"1F469-1F3FC-200D-1F9AF-200D-27A1-FE0F","emoji":"👩🏼‍🦯‍➡️","text":"","type":1,"order":2205,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"woman with white cane facing right","hexcode":"1F469-1F3FD-200D-1F9AF-200D-27A1-FE0F","emoji":"👩🏽‍🦯‍➡️","text":"","type":1,"order":2207,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"woman with white cane facing right","hexcode":"1F469-1F3FE-200D-1F9AF-200D-27A1-FE0F","emoji":"👩🏾‍🦯‍➡️","text":"","type":1,"order":2209,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"woman with white cane facing right","hexcode":"1F469-1F3FF-200D-1F9AF-200D-27A1-FE0F","emoji":"👩🏿‍🦯‍➡️","text":"","type":1,"order":2211,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"person in motorized wheelchair","hexcode":"1F9D1-200D-1F9BC","tags":["accessibility","motorized","person","wheelchair"],"emoji":"🧑‍🦼","text":"","type":1,"order":2213,"group":1,"subgroup":27,"version":12.1,"skins":[{"label":"person in motorized wheelchair: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F9BC","emoji":"🧑🏻‍🦼","text":"","type":1,"order":2214,"group":1,"subgroup":27,"version":12.1,"tone":1},{"label":"person in motorized wheelchair: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F9BC","emoji":"🧑🏼‍🦼","text":"","type":1,"order":2215,"group":1,"subgroup":27,"version":12.1,"tone":2},{"label":"person in motorized wheelchair: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F9BC","emoji":"🧑🏽‍🦼","text":"","type":1,"order":2216,"group":1,"subgroup":27,"version":12.1,"tone":3},{"label":"person in motorized wheelchair: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F9BC","emoji":"🧑🏾‍🦼","text":"","type":1,"order":2217,"group":1,"subgroup":27,"version":12.1,"tone":4},{"label":"person in motorized wheelchair: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F9BC","emoji":"🧑🏿‍🦼","text":"","type":1,"order":2218,"group":1,"subgroup":27,"version":12.1,"tone":5}]},{"label":"person in motorized wheelchair facing right","hexcode":"1F9D1-200D-1F9BC-200D-27A1-FE0F","tags":["accessibility","motorized","person","wheelchair"],"emoji":"🧑‍🦼‍➡️","text":"","type":1,"order":2219,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"person in motorized wheelchair facing right","hexcode":"1F9D1-1F3FB-200D-1F9BC-200D-27A1-FE0F","emoji":"🧑🏻‍🦼‍➡️","text":"","type":1,"order":2221,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"person in motorized wheelchair facing right","hexcode":"1F9D1-1F3FC-200D-1F9BC-200D-27A1-FE0F","emoji":"🧑🏼‍🦼‍➡️","text":"","type":1,"order":2223,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"person in motorized wheelchair facing right","hexcode":"1F9D1-1F3FD-200D-1F9BC-200D-27A1-FE0F","emoji":"🧑🏽‍🦼‍➡️","text":"","type":1,"order":2225,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"person in motorized wheelchair facing right","hexcode":"1F9D1-1F3FE-200D-1F9BC-200D-27A1-FE0F","emoji":"🧑🏾‍🦼‍➡️","text":"","type":1,"order":2227,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"person in motorized wheelchair facing right","hexcode":"1F9D1-1F3FF-200D-1F9BC-200D-27A1-FE0F","emoji":"🧑🏿‍🦼‍➡️","text":"","type":1,"order":2229,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"man in motorized wheelchair","hexcode":"1F468-200D-1F9BC","tags":["accessibility","man","motorized","wheelchair"],"emoji":"👨‍🦼","text":"","type":1,"order":2231,"group":1,"subgroup":27,"version":12,"skins":[{"label":"man in motorized wheelchair: light skin tone","hexcode":"1F468-1F3FB-200D-1F9BC","emoji":"👨🏻‍🦼","text":"","type":1,"order":2232,"group":1,"subgroup":27,"version":12,"tone":1},{"label":"man in motorized wheelchair: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F9BC","emoji":"👨🏼‍🦼","text":"","type":1,"order":2233,"group":1,"subgroup":27,"version":12,"tone":2},{"label":"man in motorized wheelchair: medium skin tone","hexcode":"1F468-1F3FD-200D-1F9BC","emoji":"👨🏽‍🦼","text":"","type":1,"order":2234,"group":1,"subgroup":27,"version":12,"tone":3},{"label":"man in motorized wheelchair: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F9BC","emoji":"👨🏾‍🦼","text":"","type":1,"order":2235,"group":1,"subgroup":27,"version":12,"tone":4},{"label":"man in motorized wheelchair: dark skin tone","hexcode":"1F468-1F3FF-200D-1F9BC","emoji":"👨🏿‍🦼","text":"","type":1,"order":2236,"group":1,"subgroup":27,"version":12,"tone":5}]},{"label":"man in motorized wheelchair facing right","hexcode":"1F468-200D-1F9BC-200D-27A1-FE0F","tags":["accessibility","man","motorized","wheelchair"],"emoji":"👨‍🦼‍➡️","text":"","type":1,"order":2237,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"man in motorized wheelchair facing right","hexcode":"1F468-1F3FB-200D-1F9BC-200D-27A1-FE0F","emoji":"👨🏻‍🦼‍➡️","text":"","type":1,"order":2239,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"man in motorized wheelchair facing right","hexcode":"1F468-1F3FC-200D-1F9BC-200D-27A1-FE0F","emoji":"👨🏼‍🦼‍➡️","text":"","type":1,"order":2241,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"man in motorized wheelchair facing right","hexcode":"1F468-1F3FD-200D-1F9BC-200D-27A1-FE0F","emoji":"👨🏽‍🦼‍➡️","text":"","type":1,"order":2243,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"man in motorized wheelchair facing right","hexcode":"1F468-1F3FE-200D-1F9BC-200D-27A1-FE0F","emoji":"👨🏾‍🦼‍➡️","text":"","type":1,"order":2245,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"man in motorized wheelchair facing right","hexcode":"1F468-1F3FF-200D-1F9BC-200D-27A1-FE0F","emoji":"👨🏿‍🦼‍➡️","text":"","type":1,"order":2247,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"woman in motorized wheelchair","hexcode":"1F469-200D-1F9BC","tags":["accessibility","motorized","wheelchair","woman"],"emoji":"👩‍🦼","text":"","type":1,"order":2249,"group":1,"subgroup":27,"version":12,"skins":[{"label":"woman in motorized wheelchair: light skin tone","hexcode":"1F469-1F3FB-200D-1F9BC","emoji":"👩🏻‍🦼","text":"","type":1,"order":2250,"group":1,"subgroup":27,"version":12,"tone":1},{"label":"woman in motorized wheelchair: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F9BC","emoji":"👩🏼‍🦼","text":"","type":1,"order":2251,"group":1,"subgroup":27,"version":12,"tone":2},{"label":"woman in motorized wheelchair: medium skin tone","hexcode":"1F469-1F3FD-200D-1F9BC","emoji":"👩🏽‍🦼","text":"","type":1,"order":2252,"group":1,"subgroup":27,"version":12,"tone":3},{"label":"woman in motorized wheelchair: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F9BC","emoji":"👩🏾‍🦼","text":"","type":1,"order":2253,"group":1,"subgroup":27,"version":12,"tone":4},{"label":"woman in motorized wheelchair: dark skin tone","hexcode":"1F469-1F3FF-200D-1F9BC","emoji":"👩🏿‍🦼","text":"","type":1,"order":2254,"group":1,"subgroup":27,"version":12,"tone":5}]},{"label":"woman in motorized wheelchair facing right","hexcode":"1F469-200D-1F9BC-200D-27A1-FE0F","tags":["accessibility","motorized","wheelchair","woman"],"emoji":"👩‍🦼‍➡️","text":"","type":1,"order":2255,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"woman in motorized wheelchair facing right","hexcode":"1F469-1F3FB-200D-1F9BC-200D-27A1-FE0F","emoji":"👩🏻‍🦼‍➡️","text":"","type":1,"order":2257,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"woman in motorized wheelchair facing right","hexcode":"1F469-1F3FC-200D-1F9BC-200D-27A1-FE0F","emoji":"👩🏼‍🦼‍➡️","text":"","type":1,"order":2259,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"woman in motorized wheelchair facing right","hexcode":"1F469-1F3FD-200D-1F9BC-200D-27A1-FE0F","emoji":"👩🏽‍🦼‍➡️","text":"","type":1,"order":2261,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"woman in motorized wheelchair facing right","hexcode":"1F469-1F3FE-200D-1F9BC-200D-27A1-FE0F","emoji":"👩🏾‍🦼‍➡️","text":"","type":1,"order":2263,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"woman in motorized wheelchair facing right","hexcode":"1F469-1F3FF-200D-1F9BC-200D-27A1-FE0F","emoji":"👩🏿‍🦼‍➡️","text":"","type":1,"order":2265,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"person in manual wheelchair","hexcode":"1F9D1-200D-1F9BD","tags":["accessibility","manual","person","wheelchair"],"emoji":"🧑‍🦽","text":"","type":1,"order":2267,"group":1,"subgroup":27,"version":12.1,"skins":[{"label":"person in manual wheelchair: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F9BD","emoji":"🧑🏻‍🦽","text":"","type":1,"order":2268,"group":1,"subgroup":27,"version":12.1,"tone":1},{"label":"person in manual wheelchair: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F9BD","emoji":"🧑🏼‍🦽","text":"","type":1,"order":2269,"group":1,"subgroup":27,"version":12.1,"tone":2},{"label":"person in manual wheelchair: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F9BD","emoji":"🧑🏽‍🦽","text":"","type":1,"order":2270,"group":1,"subgroup":27,"version":12.1,"tone":3},{"label":"person in manual wheelchair: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F9BD","emoji":"🧑🏾‍🦽","text":"","type":1,"order":2271,"group":1,"subgroup":27,"version":12.1,"tone":4},{"label":"person in manual wheelchair: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F9BD","emoji":"🧑🏿‍🦽","text":"","type":1,"order":2272,"group":1,"subgroup":27,"version":12.1,"tone":5}]},{"label":"person in manual wheelchair facing right","hexcode":"1F9D1-200D-1F9BD-200D-27A1-FE0F","tags":["accessibility","manual","person","wheelchair"],"emoji":"🧑‍🦽‍➡️","text":"","type":1,"order":2273,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"person in manual wheelchair facing right","hexcode":"1F9D1-1F3FB-200D-1F9BD-200D-27A1-FE0F","emoji":"🧑🏻‍🦽‍➡️","text":"","type":1,"order":2275,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"person in manual wheelchair facing right","hexcode":"1F9D1-1F3FC-200D-1F9BD-200D-27A1-FE0F","emoji":"🧑🏼‍🦽‍➡️","text":"","type":1,"order":2277,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"person in manual wheelchair facing right","hexcode":"1F9D1-1F3FD-200D-1F9BD-200D-27A1-FE0F","emoji":"🧑🏽‍🦽‍➡️","text":"","type":1,"order":2279,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"person in manual wheelchair facing right","hexcode":"1F9D1-1F3FE-200D-1F9BD-200D-27A1-FE0F","emoji":"🧑🏾‍🦽‍➡️","text":"","type":1,"order":2281,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"person in manual wheelchair facing right","hexcode":"1F9D1-1F3FF-200D-1F9BD-200D-27A1-FE0F","emoji":"🧑🏿‍🦽‍➡️","text":"","type":1,"order":2283,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"man in manual wheelchair","hexcode":"1F468-200D-1F9BD","tags":["accessibility","man","manual","wheelchair"],"emoji":"👨‍🦽","text":"","type":1,"order":2285,"group":1,"subgroup":27,"version":12,"skins":[{"label":"man in manual wheelchair: light skin tone","hexcode":"1F468-1F3FB-200D-1F9BD","emoji":"👨🏻‍🦽","text":"","type":1,"order":2286,"group":1,"subgroup":27,"version":12,"tone":1},{"label":"man in manual wheelchair: medium-light skin tone","hexcode":"1F468-1F3FC-200D-1F9BD","emoji":"👨🏼‍🦽","text":"","type":1,"order":2287,"group":1,"subgroup":27,"version":12,"tone":2},{"label":"man in manual wheelchair: medium skin tone","hexcode":"1F468-1F3FD-200D-1F9BD","emoji":"👨🏽‍🦽","text":"","type":1,"order":2288,"group":1,"subgroup":27,"version":12,"tone":3},{"label":"man in manual wheelchair: medium-dark skin tone","hexcode":"1F468-1F3FE-200D-1F9BD","emoji":"👨🏾‍🦽","text":"","type":1,"order":2289,"group":1,"subgroup":27,"version":12,"tone":4},{"label":"man in manual wheelchair: dark skin tone","hexcode":"1F468-1F3FF-200D-1F9BD","emoji":"👨🏿‍🦽","text":"","type":1,"order":2290,"group":1,"subgroup":27,"version":12,"tone":5}]},{"label":"man in manual wheelchair facing right","hexcode":"1F468-200D-1F9BD-200D-27A1-FE0F","tags":["accessibility","man","manual","wheelchair"],"emoji":"👨‍🦽‍➡️","text":"","type":1,"order":2291,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"man in manual wheelchair facing right","hexcode":"1F468-1F3FB-200D-1F9BD-200D-27A1-FE0F","emoji":"👨🏻‍🦽‍➡️","text":"","type":1,"order":2293,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"man in manual wheelchair facing right","hexcode":"1F468-1F3FC-200D-1F9BD-200D-27A1-FE0F","emoji":"👨🏼‍🦽‍➡️","text":"","type":1,"order":2295,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"man in manual wheelchair facing right","hexcode":"1F468-1F3FD-200D-1F9BD-200D-27A1-FE0F","emoji":"👨🏽‍🦽‍➡️","text":"","type":1,"order":2297,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"man in manual wheelchair facing right","hexcode":"1F468-1F3FE-200D-1F9BD-200D-27A1-FE0F","emoji":"👨🏾‍🦽‍➡️","text":"","type":1,"order":2299,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"man in manual wheelchair facing right","hexcode":"1F468-1F3FF-200D-1F9BD-200D-27A1-FE0F","emoji":"👨🏿‍🦽‍➡️","text":"","type":1,"order":2301,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"woman in manual wheelchair","hexcode":"1F469-200D-1F9BD","tags":["accessibility","manual","wheelchair","woman"],"emoji":"👩‍🦽","text":"","type":1,"order":2303,"group":1,"subgroup":27,"version":12,"skins":[{"label":"woman in manual wheelchair: light skin tone","hexcode":"1F469-1F3FB-200D-1F9BD","emoji":"👩🏻‍🦽","text":"","type":1,"order":2304,"group":1,"subgroup":27,"version":12,"tone":1},{"label":"woman in manual wheelchair: medium-light skin tone","hexcode":"1F469-1F3FC-200D-1F9BD","emoji":"👩🏼‍🦽","text":"","type":1,"order":2305,"group":1,"subgroup":27,"version":12,"tone":2},{"label":"woman in manual wheelchair: medium skin tone","hexcode":"1F469-1F3FD-200D-1F9BD","emoji":"👩🏽‍🦽","text":"","type":1,"order":2306,"group":1,"subgroup":27,"version":12,"tone":3},{"label":"woman in manual wheelchair: medium-dark skin tone","hexcode":"1F469-1F3FE-200D-1F9BD","emoji":"👩🏾‍🦽","text":"","type":1,"order":2307,"group":1,"subgroup":27,"version":12,"tone":4},{"label":"woman in manual wheelchair: dark skin tone","hexcode":"1F469-1F3FF-200D-1F9BD","emoji":"👩🏿‍🦽","text":"","type":1,"order":2308,"group":1,"subgroup":27,"version":12,"tone":5}]},{"label":"woman in manual wheelchair facing right","hexcode":"1F469-200D-1F9BD-200D-27A1-FE0F","tags":["accessibility","manual","wheelchair","woman"],"emoji":"👩‍🦽‍➡️","text":"","type":1,"order":2309,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"woman in manual wheelchair facing right","hexcode":"1F469-1F3FB-200D-1F9BD-200D-27A1-FE0F","emoji":"👩🏻‍🦽‍➡️","text":"","type":1,"order":2311,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"woman in manual wheelchair facing right","hexcode":"1F469-1F3FC-200D-1F9BD-200D-27A1-FE0F","emoji":"👩🏼‍🦽‍➡️","text":"","type":1,"order":2313,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"woman in manual wheelchair facing right","hexcode":"1F469-1F3FD-200D-1F9BD-200D-27A1-FE0F","emoji":"👩🏽‍🦽‍➡️","text":"","type":1,"order":2315,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"woman in manual wheelchair facing right","hexcode":"1F469-1F3FE-200D-1F9BD-200D-27A1-FE0F","emoji":"👩🏾‍🦽‍➡️","text":"","type":1,"order":2317,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"woman in manual wheelchair facing right","hexcode":"1F469-1F3FF-200D-1F9BD-200D-27A1-FE0F","emoji":"👩🏿‍🦽‍➡️","text":"","type":1,"order":2319,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"person running","hexcode":"1F3C3","tags":["fast","hurry","marathon","move","person","quick","race","racing","run","rush","speed"],"emoji":"🏃","text":"","type":1,"order":2321,"group":1,"subgroup":27,"version":0.6,"skins":[{"label":"person running: light skin tone","hexcode":"1F3C3-1F3FB","emoji":"🏃🏻","text":"","type":1,"order":2322,"group":1,"subgroup":27,"version":1,"tone":1},{"label":"person running: medium-light skin tone","hexcode":"1F3C3-1F3FC","emoji":"🏃🏼","text":"","type":1,"order":2323,"group":1,"subgroup":27,"version":1,"tone":2},{"label":"person running: medium skin tone","hexcode":"1F3C3-1F3FD","emoji":"🏃🏽","text":"","type":1,"order":2324,"group":1,"subgroup":27,"version":1,"tone":3},{"label":"person running: medium-dark skin tone","hexcode":"1F3C3-1F3FE","emoji":"🏃🏾","text":"","type":1,"order":2325,"group":1,"subgroup":27,"version":1,"tone":4},{"label":"person running: dark skin tone","hexcode":"1F3C3-1F3FF","emoji":"🏃🏿","text":"","type":1,"order":2326,"group":1,"subgroup":27,"version":1,"tone":5}]},{"label":"man running","hexcode":"1F3C3-200D-2642-FE0F","tags":["fast","hurry","man","marathon","move","quick","race","racing","run","rush","speed"],"emoji":"🏃‍♂️","text":"","type":1,"order":2327,"group":1,"subgroup":27,"version":4,"gender":1,"skins":[{"label":"man running: light skin tone","hexcode":"1F3C3-1F3FB-200D-2642-FE0F","emoji":"🏃🏻‍♂️","text":"","type":1,"order":2329,"group":1,"subgroup":27,"version":4,"gender":1,"tone":1},{"label":"man running: medium-light skin tone","hexcode":"1F3C3-1F3FC-200D-2642-FE0F","emoji":"🏃🏼‍♂️","text":"","type":1,"order":2331,"group":1,"subgroup":27,"version":4,"gender":1,"tone":2},{"label":"man running: medium skin tone","hexcode":"1F3C3-1F3FD-200D-2642-FE0F","emoji":"🏃🏽‍♂️","text":"","type":1,"order":2333,"group":1,"subgroup":27,"version":4,"gender":1,"tone":3},{"label":"man running: medium-dark skin tone","hexcode":"1F3C3-1F3FE-200D-2642-FE0F","emoji":"🏃🏾‍♂️","text":"","type":1,"order":2335,"group":1,"subgroup":27,"version":4,"gender":1,"tone":4},{"label":"man running: dark skin tone","hexcode":"1F3C3-1F3FF-200D-2642-FE0F","emoji":"🏃🏿‍♂️","text":"","type":1,"order":2337,"group":1,"subgroup":27,"version":4,"gender":1,"tone":5}]},{"label":"woman running","hexcode":"1F3C3-200D-2640-FE0F","tags":["fast","hurry","marathon","move","quick","race","racing","run","rush","speed","woman"],"emoji":"🏃‍♀️","text":"","type":1,"order":2339,"group":1,"subgroup":27,"version":4,"gender":0,"skins":[{"label":"woman running: light skin tone","hexcode":"1F3C3-1F3FB-200D-2640-FE0F","emoji":"🏃🏻‍♀️","text":"","type":1,"order":2341,"group":1,"subgroup":27,"version":4,"gender":0,"tone":1},{"label":"woman running: medium-light skin tone","hexcode":"1F3C3-1F3FC-200D-2640-FE0F","emoji":"🏃🏼‍♀️","text":"","type":1,"order":2343,"group":1,"subgroup":27,"version":4,"gender":0,"tone":2},{"label":"woman running: medium skin tone","hexcode":"1F3C3-1F3FD-200D-2640-FE0F","emoji":"🏃🏽‍♀️","text":"","type":1,"order":2345,"group":1,"subgroup":27,"version":4,"gender":0,"tone":3},{"label":"woman running: medium-dark skin tone","hexcode":"1F3C3-1F3FE-200D-2640-FE0F","emoji":"🏃🏾‍♀️","text":"","type":1,"order":2347,"group":1,"subgroup":27,"version":4,"gender":0,"tone":4},{"label":"woman running: dark skin tone","hexcode":"1F3C3-1F3FF-200D-2640-FE0F","emoji":"🏃🏿‍♀️","text":"","type":1,"order":2349,"group":1,"subgroup":27,"version":4,"gender":0,"tone":5}]},{"label":"person running facing right","hexcode":"1F3C3-200D-27A1-FE0F","tags":["fast","hurry","marathon","move","person","quick","race","racing","run","rush","speed"],"emoji":"🏃‍➡️","text":"","type":1,"order":2351,"group":1,"subgroup":27,"version":15.1,"skins":[{"label":"person running facing right","hexcode":"1F3C3-1F3FB-200D-27A1-FE0F","emoji":"🏃🏻‍➡️","text":"","type":1,"order":2353,"group":1,"subgroup":27,"version":15.1,"tone":1},{"label":"person running facing right","hexcode":"1F3C3-1F3FC-200D-27A1-FE0F","emoji":"🏃🏼‍➡️","text":"","type":1,"order":2355,"group":1,"subgroup":27,"version":15.1,"tone":2},{"label":"person running facing right","hexcode":"1F3C3-1F3FD-200D-27A1-FE0F","emoji":"🏃🏽‍➡️","text":"","type":1,"order":2357,"group":1,"subgroup":27,"version":15.1,"tone":3},{"label":"person running facing right","hexcode":"1F3C3-1F3FE-200D-27A1-FE0F","emoji":"🏃🏾‍➡️","text":"","type":1,"order":2359,"group":1,"subgroup":27,"version":15.1,"tone":4},{"label":"person running facing right","hexcode":"1F3C3-1F3FF-200D-27A1-FE0F","emoji":"🏃🏿‍➡️","text":"","type":1,"order":2361,"group":1,"subgroup":27,"version":15.1,"tone":5}]},{"label":"woman running facing right","hexcode":"1F3C3-200D-2640-FE0F-200D-27A1-FE0F","tags":["fast","hurry","marathon","move","quick","race","racing","run","rush","speed","woman"],"emoji":"🏃‍♀️‍➡️","text":"","type":1,"order":2363,"group":1,"subgroup":27,"version":15.1,"gender":0,"skins":[{"label":"woman running facing right","hexcode":"1F3C3-1F3FB-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🏃🏻‍♀️‍➡️","text":"","type":1,"order":2367,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":1},{"label":"woman running facing right","hexcode":"1F3C3-1F3FC-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🏃🏼‍♀️‍➡️","text":"","type":1,"order":2371,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":2},{"label":"woman running facing right","hexcode":"1F3C3-1F3FD-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🏃🏽‍♀️‍➡️","text":"","type":1,"order":2375,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":3},{"label":"woman running facing right","hexcode":"1F3C3-1F3FE-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🏃🏾‍♀️‍➡️","text":"","type":1,"order":2379,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":4},{"label":"woman running facing right","hexcode":"1F3C3-1F3FF-200D-2640-FE0F-200D-27A1-FE0F","emoji":"🏃🏿‍♀️‍➡️","text":"","type":1,"order":2383,"group":1,"subgroup":27,"version":15.1,"gender":0,"tone":5}]},{"label":"man running facing right","hexcode":"1F3C3-200D-2642-FE0F-200D-27A1-FE0F","tags":["fast","hurry","man","marathon","move","quick","race","racing","run","rush","speed"],"emoji":"🏃‍♂️‍➡️","text":"","type":1,"order":2387,"group":1,"subgroup":27,"version":15.1,"gender":1,"skins":[{"label":"man running facing right","hexcode":"1F3C3-1F3FB-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🏃🏻‍♂️‍➡️","text":"","type":1,"order":2391,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":1},{"label":"man running facing right","hexcode":"1F3C3-1F3FC-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🏃🏼‍♂️‍➡️","text":"","type":1,"order":2395,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":2},{"label":"man running facing right","hexcode":"1F3C3-1F3FD-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🏃🏽‍♂️‍➡️","text":"","type":1,"order":2399,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":3},{"label":"man running facing right","hexcode":"1F3C3-1F3FE-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🏃🏾‍♂️‍➡️","text":"","type":1,"order":2403,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":4},{"label":"man running facing right","hexcode":"1F3C3-1F3FF-200D-2642-FE0F-200D-27A1-FE0F","emoji":"🏃🏿‍♂️‍➡️","text":"","type":1,"order":2407,"group":1,"subgroup":27,"version":15.1,"gender":1,"tone":5}]},{"label":"woman dancing","hexcode":"1F483","tags":["dance","dancer","dancing","elegant","festive","flair","flamenco","groove","let’s","salsa","tango","woman"],"emoji":"💃","text":"","type":1,"order":2411,"group":1,"subgroup":27,"version":0.6,"skins":[{"label":"woman dancing: light skin tone","hexcode":"1F483-1F3FB","emoji":"💃🏻","text":"","type":1,"order":2412,"group":1,"subgroup":27,"version":1,"tone":1},{"label":"woman dancing: medium-light skin tone","hexcode":"1F483-1F3FC","emoji":"💃🏼","text":"","type":1,"order":2413,"group":1,"subgroup":27,"version":1,"tone":2},{"label":"woman dancing: medium skin tone","hexcode":"1F483-1F3FD","emoji":"💃🏽","text":"","type":1,"order":2414,"group":1,"subgroup":27,"version":1,"tone":3},{"label":"woman dancing: medium-dark skin tone","hexcode":"1F483-1F3FE","emoji":"💃🏾","text":"","type":1,"order":2415,"group":1,"subgroup":27,"version":1,"tone":4},{"label":"woman dancing: dark skin tone","hexcode":"1F483-1F3FF","emoji":"💃🏿","text":"","type":1,"order":2416,"group":1,"subgroup":27,"version":1,"tone":5}]},{"label":"man dancing","hexcode":"1F57A","tags":["dance","dancer","dancing","elegant","festive","flair","flamenco","groove","let’s","man","salsa","tango"],"emoji":"🕺","text":"","type":1,"order":2417,"group":1,"subgroup":27,"version":3,"skins":[{"label":"man dancing: light skin tone","hexcode":"1F57A-1F3FB","emoji":"🕺🏻","text":"","type":1,"order":2418,"group":1,"subgroup":27,"version":3,"tone":1},{"label":"man dancing: medium-light skin tone","hexcode":"1F57A-1F3FC","emoji":"🕺🏼","text":"","type":1,"order":2419,"group":1,"subgroup":27,"version":3,"tone":2},{"label":"man dancing: medium skin tone","hexcode":"1F57A-1F3FD","emoji":"🕺🏽","text":"","type":1,"order":2420,"group":1,"subgroup":27,"version":3,"tone":3},{"label":"man dancing: medium-dark skin tone","hexcode":"1F57A-1F3FE","emoji":"🕺🏾","text":"","type":1,"order":2421,"group":1,"subgroup":27,"version":3,"tone":4},{"label":"man dancing: dark skin tone","hexcode":"1F57A-1F3FF","emoji":"🕺🏿","text":"","type":1,"order":2422,"group":1,"subgroup":27,"version":3,"tone":5}]},{"label":"person in suit levitating","hexcode":"1F574","tags":["business","levitating","person","suit"],"emoji":"🕴️","text":"🕴︎","type":0,"order":2424,"group":1,"subgroup":27,"version":0.7,"skins":[{"label":"person in suit levitating: light skin tone","hexcode":"1F574-1F3FB","emoji":"🕴🏻","text":"","type":1,"order":2425,"group":1,"subgroup":27,"version":4,"tone":1},{"label":"person in suit levitating: medium-light skin tone","hexcode":"1F574-1F3FC","emoji":"🕴🏼","text":"","type":1,"order":2426,"group":1,"subgroup":27,"version":4,"tone":2},{"label":"person in suit levitating: medium skin tone","hexcode":"1F574-1F3FD","emoji":"🕴🏽","text":"","type":1,"order":2427,"group":1,"subgroup":27,"version":4,"tone":3},{"label":"person in suit levitating: medium-dark skin tone","hexcode":"1F574-1F3FE","emoji":"🕴🏾","text":"","type":1,"order":2428,"group":1,"subgroup":27,"version":4,"tone":4},{"label":"person in suit levitating: dark skin tone","hexcode":"1F574-1F3FF","emoji":"🕴🏿","text":"","type":1,"order":2429,"group":1,"subgroup":27,"version":4,"tone":5}]},{"label":"people with bunny ears","hexcode":"1F46F","tags":["bestie","bff","bunny","counterpart","dancer","double","ear","identical","pair","party","partying","people","soulmate","twin","twinsies"],"emoji":"👯","text":"","type":1,"order":2430,"group":1,"subgroup":27,"version":0.6},{"label":"men with bunny ears","hexcode":"1F46F-200D-2642-FE0F","tags":["bestie","bff","bunny","counterpart","dancer","double","ear","identical","men","pair","party","partying","people","soulmate","twin","twinsies"],"emoji":"👯‍♂️","text":"","type":1,"order":2431,"group":1,"subgroup":27,"version":4,"gender":1},{"label":"women with bunny ears","hexcode":"1F46F-200D-2640-FE0F","tags":["bestie","bff","bunny","counterpart","dancer","double","ear","identical","pair","party","partying","people","soulmate","twin","twinsies","women"],"emoji":"👯‍♀️","text":"","type":1,"order":2433,"group":1,"subgroup":27,"version":4,"gender":0},{"label":"person in steamy room","hexcode":"1F9D6","tags":["day","luxurious","pamper","person","relax","room","sauna","spa","steam","steambath","unwind"],"emoji":"🧖","text":"","type":1,"order":2435,"group":1,"subgroup":27,"version":5,"skins":[{"label":"person in steamy room: light skin tone","hexcode":"1F9D6-1F3FB","emoji":"🧖🏻","text":"","type":1,"order":2436,"group":1,"subgroup":27,"version":5,"tone":1},{"label":"person in steamy room: medium-light skin tone","hexcode":"1F9D6-1F3FC","emoji":"🧖🏼","text":"","type":1,"order":2437,"group":1,"subgroup":27,"version":5,"tone":2},{"label":"person in steamy room: medium skin tone","hexcode":"1F9D6-1F3FD","emoji":"🧖🏽","text":"","type":1,"order":2438,"group":1,"subgroup":27,"version":5,"tone":3},{"label":"person in steamy room: medium-dark skin tone","hexcode":"1F9D6-1F3FE","emoji":"🧖🏾","text":"","type":1,"order":2439,"group":1,"subgroup":27,"version":5,"tone":4},{"label":"person in steamy room: dark skin tone","hexcode":"1F9D6-1F3FF","emoji":"🧖🏿","text":"","type":1,"order":2440,"group":1,"subgroup":27,"version":5,"tone":5}]},{"label":"man in steamy room","hexcode":"1F9D6-200D-2642-FE0F","tags":["day","luxurious","man","pamper","relax","room","sauna","spa","steam","steambath","unwind"],"emoji":"🧖‍♂️","text":"","type":1,"order":2441,"group":1,"subgroup":27,"version":5,"gender":1,"skins":[{"label":"man in steamy room: light skin tone","hexcode":"1F9D6-1F3FB-200D-2642-FE0F","emoji":"🧖🏻‍♂️","text":"","type":1,"order":2443,"group":1,"subgroup":27,"version":5,"gender":1,"tone":1},{"label":"man in steamy room: medium-light skin tone","hexcode":"1F9D6-1F3FC-200D-2642-FE0F","emoji":"🧖🏼‍♂️","text":"","type":1,"order":2445,"group":1,"subgroup":27,"version":5,"gender":1,"tone":2},{"label":"man in steamy room: medium skin tone","hexcode":"1F9D6-1F3FD-200D-2642-FE0F","emoji":"🧖🏽‍♂️","text":"","type":1,"order":2447,"group":1,"subgroup":27,"version":5,"gender":1,"tone":3},{"label":"man in steamy room: medium-dark skin tone","hexcode":"1F9D6-1F3FE-200D-2642-FE0F","emoji":"🧖🏾‍♂️","text":"","type":1,"order":2449,"group":1,"subgroup":27,"version":5,"gender":1,"tone":4},{"label":"man in steamy room: dark skin tone","hexcode":"1F9D6-1F3FF-200D-2642-FE0F","emoji":"🧖🏿‍♂️","text":"","type":1,"order":2451,"group":1,"subgroup":27,"version":5,"gender":1,"tone":5}]},{"label":"woman in steamy room","hexcode":"1F9D6-200D-2640-FE0F","tags":["day","luxurious","pamper","relax","room","sauna","spa","steam","steambath","unwind","woman"],"emoji":"🧖‍♀️","text":"","type":1,"order":2453,"group":1,"subgroup":27,"version":5,"gender":0,"skins":[{"label":"woman in steamy room: light skin tone","hexcode":"1F9D6-1F3FB-200D-2640-FE0F","emoji":"🧖🏻‍♀️","text":"","type":1,"order":2455,"group":1,"subgroup":27,"version":5,"gender":0,"tone":1},{"label":"woman in steamy room: medium-light skin tone","hexcode":"1F9D6-1F3FC-200D-2640-FE0F","emoji":"🧖🏼‍♀️","text":"","type":1,"order":2457,"group":1,"subgroup":27,"version":5,"gender":0,"tone":2},{"label":"woman in steamy room: medium skin tone","hexcode":"1F9D6-1F3FD-200D-2640-FE0F","emoji":"🧖🏽‍♀️","text":"","type":1,"order":2459,"group":1,"subgroup":27,"version":5,"gender":0,"tone":3},{"label":"woman in steamy room: medium-dark skin tone","hexcode":"1F9D6-1F3FE-200D-2640-FE0F","emoji":"🧖🏾‍♀️","text":"","type":1,"order":2461,"group":1,"subgroup":27,"version":5,"gender":0,"tone":4},{"label":"woman in steamy room: dark skin tone","hexcode":"1F9D6-1F3FF-200D-2640-FE0F","emoji":"🧖🏿‍♀️","text":"","type":1,"order":2463,"group":1,"subgroup":27,"version":5,"gender":0,"tone":5}]},{"label":"person climbing","hexcode":"1F9D7","tags":["climb","climber","climbing","mountain","person","rock","scale","up"],"emoji":"🧗","text":"","type":1,"order":2465,"group":1,"subgroup":27,"version":5,"skins":[{"label":"person climbing: light skin tone","hexcode":"1F9D7-1F3FB","emoji":"🧗🏻","text":"","type":1,"order":2466,"group":1,"subgroup":27,"version":5,"tone":1},{"label":"person climbing: medium-light skin tone","hexcode":"1F9D7-1F3FC","emoji":"🧗🏼","text":"","type":1,"order":2467,"group":1,"subgroup":27,"version":5,"tone":2},{"label":"person climbing: medium skin tone","hexcode":"1F9D7-1F3FD","emoji":"🧗🏽","text":"","type":1,"order":2468,"group":1,"subgroup":27,"version":5,"tone":3},{"label":"person climbing: medium-dark skin tone","hexcode":"1F9D7-1F3FE","emoji":"🧗🏾","text":"","type":1,"order":2469,"group":1,"subgroup":27,"version":5,"tone":4},{"label":"person climbing: dark skin tone","hexcode":"1F9D7-1F3FF","emoji":"🧗🏿","text":"","type":1,"order":2470,"group":1,"subgroup":27,"version":5,"tone":5}]},{"label":"man climbing","hexcode":"1F9D7-200D-2642-FE0F","tags":["climb","climber","climbing","man","mountain","rock","scale","up"],"emoji":"🧗‍♂️","text":"","type":1,"order":2471,"group":1,"subgroup":27,"version":5,"gender":1,"skins":[{"label":"man climbing: light skin tone","hexcode":"1F9D7-1F3FB-200D-2642-FE0F","emoji":"🧗🏻‍♂️","text":"","type":1,"order":2473,"group":1,"subgroup":27,"version":5,"gender":1,"tone":1},{"label":"man climbing: medium-light skin tone","hexcode":"1F9D7-1F3FC-200D-2642-FE0F","emoji":"🧗🏼‍♂️","text":"","type":1,"order":2475,"group":1,"subgroup":27,"version":5,"gender":1,"tone":2},{"label":"man climbing: medium skin tone","hexcode":"1F9D7-1F3FD-200D-2642-FE0F","emoji":"🧗🏽‍♂️","text":"","type":1,"order":2477,"group":1,"subgroup":27,"version":5,"gender":1,"tone":3},{"label":"man climbing: medium-dark skin tone","hexcode":"1F9D7-1F3FE-200D-2642-FE0F","emoji":"🧗🏾‍♂️","text":"","type":1,"order":2479,"group":1,"subgroup":27,"version":5,"gender":1,"tone":4},{"label":"man climbing: dark skin tone","hexcode":"1F9D7-1F3FF-200D-2642-FE0F","emoji":"🧗🏿‍♂️","text":"","type":1,"order":2481,"group":1,"subgroup":27,"version":5,"gender":1,"tone":5}]},{"label":"woman climbing","hexcode":"1F9D7-200D-2640-FE0F","tags":["climb","climber","climbing","mountain","rock","scale","up","woman"],"emoji":"🧗‍♀️","text":"","type":1,"order":2483,"group":1,"subgroup":27,"version":5,"gender":0,"skins":[{"label":"woman climbing: light skin tone","hexcode":"1F9D7-1F3FB-200D-2640-FE0F","emoji":"🧗🏻‍♀️","text":"","type":1,"order":2485,"group":1,"subgroup":27,"version":5,"gender":0,"tone":1},{"label":"woman climbing: medium-light skin tone","hexcode":"1F9D7-1F3FC-200D-2640-FE0F","emoji":"🧗🏼‍♀️","text":"","type":1,"order":2487,"group":1,"subgroup":27,"version":5,"gender":0,"tone":2},{"label":"woman climbing: medium skin tone","hexcode":"1F9D7-1F3FD-200D-2640-FE0F","emoji":"🧗🏽‍♀️","text":"","type":1,"order":2489,"group":1,"subgroup":27,"version":5,"gender":0,"tone":3},{"label":"woman climbing: medium-dark skin tone","hexcode":"1F9D7-1F3FE-200D-2640-FE0F","emoji":"🧗🏾‍♀️","text":"","type":1,"order":2491,"group":1,"subgroup":27,"version":5,"gender":0,"tone":4},{"label":"woman climbing: dark skin tone","hexcode":"1F9D7-1F3FF-200D-2640-FE0F","emoji":"🧗🏿‍♀️","text":"","type":1,"order":2493,"group":1,"subgroup":27,"version":5,"gender":0,"tone":5}]},{"label":"person fencing","hexcode":"1F93A","tags":["fencer","fencing","person","sword"],"emoji":"🤺","text":"","type":1,"order":2495,"group":1,"subgroup":28,"version":3},{"label":"horse racing","hexcode":"1F3C7","tags":["horse","jockey","racehorse","racing","riding","sport"],"emoji":"🏇","text":"","type":1,"order":2496,"group":1,"subgroup":28,"version":1,"skins":[{"label":"horse racing: light skin tone","hexcode":"1F3C7-1F3FB","emoji":"🏇🏻","text":"","type":1,"order":2497,"group":1,"subgroup":28,"version":1,"tone":1},{"label":"horse racing: medium-light skin tone","hexcode":"1F3C7-1F3FC","emoji":"🏇🏼","text":"","type":1,"order":2498,"group":1,"subgroup":28,"version":1,"tone":2},{"label":"horse racing: medium skin tone","hexcode":"1F3C7-1F3FD","emoji":"🏇🏽","text":"","type":1,"order":2499,"group":1,"subgroup":28,"version":1,"tone":3},{"label":"horse racing: medium-dark skin tone","hexcode":"1F3C7-1F3FE","emoji":"🏇🏾","text":"","type":1,"order":2500,"group":1,"subgroup":28,"version":1,"tone":4},{"label":"horse racing: dark skin tone","hexcode":"1F3C7-1F3FF","emoji":"🏇🏿","text":"","type":1,"order":2501,"group":1,"subgroup":28,"version":1,"tone":5}]},{"label":"skier","hexcode":"26F7","tags":["ski","snow"],"emoji":"⛷️","text":"⛷︎","type":0,"order":2503,"group":1,"subgroup":28,"version":0.7},{"label":"snowboarder","hexcode":"1F3C2","tags":["ski","snow","snowboard","sport"],"emoji":"🏂️","text":"🏂︎","type":1,"order":2504,"group":1,"subgroup":28,"version":0.6,"skins":[{"label":"snowboarder: light skin tone","hexcode":"1F3C2-1F3FB","emoji":"🏂🏻","text":"","type":1,"order":2505,"group":1,"subgroup":28,"version":1,"tone":1},{"label":"snowboarder: medium-light skin tone","hexcode":"1F3C2-1F3FC","emoji":"🏂🏼","text":"","type":1,"order":2506,"group":1,"subgroup":28,"version":1,"tone":2},{"label":"snowboarder: medium skin tone","hexcode":"1F3C2-1F3FD","emoji":"🏂🏽","text":"","type":1,"order":2507,"group":1,"subgroup":28,"version":1,"tone":3},{"label":"snowboarder: medium-dark skin tone","hexcode":"1F3C2-1F3FE","emoji":"🏂🏾","text":"","type":1,"order":2508,"group":1,"subgroup":28,"version":1,"tone":4},{"label":"snowboarder: dark skin tone","hexcode":"1F3C2-1F3FF","emoji":"🏂🏿","text":"","type":1,"order":2509,"group":1,"subgroup":28,"version":1,"tone":5}]},{"label":"person golfing","hexcode":"1F3CC","tags":["ball","birdie","caddy","driving","golf","golfing","green","person","pga","putt","range","tee"],"emoji":"🏌️","text":"🏌︎","type":0,"order":2511,"group":1,"subgroup":28,"version":0.7,"skins":[{"label":"person golfing: light skin tone","hexcode":"1F3CC-1F3FB","emoji":"🏌🏻","text":"","type":1,"order":2512,"group":1,"subgroup":28,"version":4,"tone":1},{"label":"person golfing: medium-light skin tone","hexcode":"1F3CC-1F3FC","emoji":"🏌🏼","text":"","type":1,"order":2513,"group":1,"subgroup":28,"version":4,"tone":2},{"label":"person golfing: medium skin tone","hexcode":"1F3CC-1F3FD","emoji":"🏌🏽","text":"","type":1,"order":2514,"group":1,"subgroup":28,"version":4,"tone":3},{"label":"person golfing: medium-dark skin tone","hexcode":"1F3CC-1F3FE","emoji":"🏌🏾","text":"","type":1,"order":2515,"group":1,"subgroup":28,"version":4,"tone":4},{"label":"person golfing: dark skin tone","hexcode":"1F3CC-1F3FF","emoji":"🏌🏿","text":"","type":1,"order":2516,"group":1,"subgroup":28,"version":4,"tone":5}]},{"label":"man golfing","hexcode":"1F3CC-FE0F-200D-2642-FE0F","tags":["ball","birdie","caddy","driving","golf","golfing","green","man","pga","putt","range","tee"],"emoji":"🏌️‍♂️","text":"","type":1,"order":2517,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man golfing: light skin tone","hexcode":"1F3CC-1F3FB-200D-2642-FE0F","emoji":"🏌🏻‍♂️","text":"","type":1,"order":2521,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man golfing: medium-light skin tone","hexcode":"1F3CC-1F3FC-200D-2642-FE0F","emoji":"🏌🏼‍♂️","text":"","type":1,"order":2523,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man golfing: medium skin tone","hexcode":"1F3CC-1F3FD-200D-2642-FE0F","emoji":"🏌🏽‍♂️","text":"","type":1,"order":2525,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man golfing: medium-dark skin tone","hexcode":"1F3CC-1F3FE-200D-2642-FE0F","emoji":"🏌🏾‍♂️","text":"","type":1,"order":2527,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man golfing: dark skin tone","hexcode":"1F3CC-1F3FF-200D-2642-FE0F","emoji":"🏌🏿‍♂️","text":"","type":1,"order":2529,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman golfing","hexcode":"1F3CC-FE0F-200D-2640-FE0F","tags":["ball","birdie","caddy","driving","golf","golfing","green","pga","putt","range","tee","woman"],"emoji":"🏌️‍♀️","text":"","type":1,"order":2531,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman golfing: light skin tone","hexcode":"1F3CC-1F3FB-200D-2640-FE0F","emoji":"🏌🏻‍♀️","text":"","type":1,"order":2535,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman golfing: medium-light skin tone","hexcode":"1F3CC-1F3FC-200D-2640-FE0F","emoji":"🏌🏼‍♀️","text":"","type":1,"order":2537,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman golfing: medium skin tone","hexcode":"1F3CC-1F3FD-200D-2640-FE0F","emoji":"🏌🏽‍♀️","text":"","type":1,"order":2539,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman golfing: medium-dark skin tone","hexcode":"1F3CC-1F3FE-200D-2640-FE0F","emoji":"🏌🏾‍♀️","text":"","type":1,"order":2541,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman golfing: dark skin tone","hexcode":"1F3CC-1F3FF-200D-2640-FE0F","emoji":"🏌🏿‍♀️","text":"","type":1,"order":2543,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person surfing","hexcode":"1F3C4","tags":["beach","ocean","person","sport","surf","surfer","surfing","swell","waves"],"emoji":"🏄️","text":"🏄︎","type":1,"order":2545,"group":1,"subgroup":28,"version":0.6,"skins":[{"label":"person surfing: light skin tone","hexcode":"1F3C4-1F3FB","emoji":"🏄🏻","text":"","type":1,"order":2546,"group":1,"subgroup":28,"version":1,"tone":1},{"label":"person surfing: medium-light skin tone","hexcode":"1F3C4-1F3FC","emoji":"🏄🏼","text":"","type":1,"order":2547,"group":1,"subgroup":28,"version":1,"tone":2},{"label":"person surfing: medium skin tone","hexcode":"1F3C4-1F3FD","emoji":"🏄🏽","text":"","type":1,"order":2548,"group":1,"subgroup":28,"version":1,"tone":3},{"label":"person surfing: medium-dark skin tone","hexcode":"1F3C4-1F3FE","emoji":"🏄🏾","text":"","type":1,"order":2549,"group":1,"subgroup":28,"version":1,"tone":4},{"label":"person surfing: dark skin tone","hexcode":"1F3C4-1F3FF","emoji":"🏄🏿","text":"","type":1,"order":2550,"group":1,"subgroup":28,"version":1,"tone":5}]},{"label":"man surfing","hexcode":"1F3C4-200D-2642-FE0F","tags":["beach","man","ocean","sport","surf","surfer","surfing","swell","waves"],"emoji":"🏄‍♂️","text":"","type":1,"order":2551,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man surfing: light skin tone","hexcode":"1F3C4-1F3FB-200D-2642-FE0F","emoji":"🏄🏻‍♂️","text":"","type":1,"order":2553,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man surfing: medium-light skin tone","hexcode":"1F3C4-1F3FC-200D-2642-FE0F","emoji":"🏄🏼‍♂️","text":"","type":1,"order":2555,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man surfing: medium skin tone","hexcode":"1F3C4-1F3FD-200D-2642-FE0F","emoji":"🏄🏽‍♂️","text":"","type":1,"order":2557,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man surfing: medium-dark skin tone","hexcode":"1F3C4-1F3FE-200D-2642-FE0F","emoji":"🏄🏾‍♂️","text":"","type":1,"order":2559,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man surfing: dark skin tone","hexcode":"1F3C4-1F3FF-200D-2642-FE0F","emoji":"🏄🏿‍♂️","text":"","type":1,"order":2561,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman surfing","hexcode":"1F3C4-200D-2640-FE0F","tags":["beach","ocean","person","sport","surf","surfer","surfing","swell","waves"],"emoji":"🏄‍♀️","text":"","type":1,"order":2563,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman surfing: light skin tone","hexcode":"1F3C4-1F3FB-200D-2640-FE0F","emoji":"🏄🏻‍♀️","text":"","type":1,"order":2565,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman surfing: medium-light skin tone","hexcode":"1F3C4-1F3FC-200D-2640-FE0F","emoji":"🏄🏼‍♀️","text":"","type":1,"order":2567,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman surfing: medium skin tone","hexcode":"1F3C4-1F3FD-200D-2640-FE0F","emoji":"🏄🏽‍♀️","text":"","type":1,"order":2569,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman surfing: medium-dark skin tone","hexcode":"1F3C4-1F3FE-200D-2640-FE0F","emoji":"🏄🏾‍♀️","text":"","type":1,"order":2571,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman surfing: dark skin tone","hexcode":"1F3C4-1F3FF-200D-2640-FE0F","emoji":"🏄🏿‍♀️","text":"","type":1,"order":2573,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person rowing boat","hexcode":"1F6A3","tags":["boat","canoe","cruise","fishing","lake","oar","paddle","person","raft","river","row","rowboat","rowing"],"emoji":"🚣","text":"","type":1,"order":2575,"group":1,"subgroup":28,"version":1,"skins":[{"label":"person rowing boat: light skin tone","hexcode":"1F6A3-1F3FB","emoji":"🚣🏻","text":"","type":1,"order":2576,"group":1,"subgroup":28,"version":1,"tone":1},{"label":"person rowing boat: medium-light skin tone","hexcode":"1F6A3-1F3FC","emoji":"🚣🏼","text":"","type":1,"order":2577,"group":1,"subgroup":28,"version":1,"tone":2},{"label":"person rowing boat: medium skin tone","hexcode":"1F6A3-1F3FD","emoji":"🚣🏽","text":"","type":1,"order":2578,"group":1,"subgroup":28,"version":1,"tone":3},{"label":"person rowing boat: medium-dark skin tone","hexcode":"1F6A3-1F3FE","emoji":"🚣🏾","text":"","type":1,"order":2579,"group":1,"subgroup":28,"version":1,"tone":4},{"label":"person rowing boat: dark skin tone","hexcode":"1F6A3-1F3FF","emoji":"🚣🏿","text":"","type":1,"order":2580,"group":1,"subgroup":28,"version":1,"tone":5}]},{"label":"man rowing boat","hexcode":"1F6A3-200D-2642-FE0F","tags":["boat","canoe","cruise","fishing","lake","man","oar","paddle","raft","river","row","rowboat","rowing"],"emoji":"🚣‍♂️","text":"","type":1,"order":2581,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man rowing boat: light skin tone","hexcode":"1F6A3-1F3FB-200D-2642-FE0F","emoji":"🚣🏻‍♂️","text":"","type":1,"order":2583,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man rowing boat: medium-light skin tone","hexcode":"1F6A3-1F3FC-200D-2642-FE0F","emoji":"🚣🏼‍♂️","text":"","type":1,"order":2585,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man rowing boat: medium skin tone","hexcode":"1F6A3-1F3FD-200D-2642-FE0F","emoji":"🚣🏽‍♂️","text":"","type":1,"order":2587,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man rowing boat: medium-dark skin tone","hexcode":"1F6A3-1F3FE-200D-2642-FE0F","emoji":"🚣🏾‍♂️","text":"","type":1,"order":2589,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man rowing boat: dark skin tone","hexcode":"1F6A3-1F3FF-200D-2642-FE0F","emoji":"🚣🏿‍♂️","text":"","type":1,"order":2591,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman rowing boat","hexcode":"1F6A3-200D-2640-FE0F","tags":["boat","canoe","cruise","fishing","lake","oar","paddle","raft","river","row","rowboat","rowing","woman"],"emoji":"🚣‍♀️","text":"","type":1,"order":2593,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman rowing boat: light skin tone","hexcode":"1F6A3-1F3FB-200D-2640-FE0F","emoji":"🚣🏻‍♀️","text":"","type":1,"order":2595,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman rowing boat: medium-light skin tone","hexcode":"1F6A3-1F3FC-200D-2640-FE0F","emoji":"🚣🏼‍♀️","text":"","type":1,"order":2597,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman rowing boat: medium skin tone","hexcode":"1F6A3-1F3FD-200D-2640-FE0F","emoji":"🚣🏽‍♀️","text":"","type":1,"order":2599,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman rowing boat: medium-dark skin tone","hexcode":"1F6A3-1F3FE-200D-2640-FE0F","emoji":"🚣🏾‍♀️","text":"","type":1,"order":2601,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman rowing boat: dark skin tone","hexcode":"1F6A3-1F3FF-200D-2640-FE0F","emoji":"🚣🏿‍♀️","text":"","type":1,"order":2603,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person swimming","hexcode":"1F3CA","tags":["freestyle","person","sport","swim","swimmer","swimming","triathlon"],"emoji":"🏊️","text":"🏊︎","type":1,"order":2605,"group":1,"subgroup":28,"version":0.6,"skins":[{"label":"person swimming: light skin tone","hexcode":"1F3CA-1F3FB","emoji":"🏊🏻","text":"","type":1,"order":2606,"group":1,"subgroup":28,"version":1,"tone":1},{"label":"person swimming: medium-light skin tone","hexcode":"1F3CA-1F3FC","emoji":"🏊🏼","text":"","type":1,"order":2607,"group":1,"subgroup":28,"version":1,"tone":2},{"label":"person swimming: medium skin tone","hexcode":"1F3CA-1F3FD","emoji":"🏊🏽","text":"","type":1,"order":2608,"group":1,"subgroup":28,"version":1,"tone":3},{"label":"person swimming: medium-dark skin tone","hexcode":"1F3CA-1F3FE","emoji":"🏊🏾","text":"","type":1,"order":2609,"group":1,"subgroup":28,"version":1,"tone":4},{"label":"person swimming: dark skin tone","hexcode":"1F3CA-1F3FF","emoji":"🏊🏿","text":"","type":1,"order":2610,"group":1,"subgroup":28,"version":1,"tone":5}]},{"label":"man swimming","hexcode":"1F3CA-200D-2642-FE0F","tags":["freestyle","man","sport","swim","swimmer","swimming","triathlon"],"emoji":"🏊‍♂️","text":"","type":1,"order":2611,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man swimming: light skin tone","hexcode":"1F3CA-1F3FB-200D-2642-FE0F","emoji":"🏊🏻‍♂️","text":"","type":1,"order":2613,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man swimming: medium-light skin tone","hexcode":"1F3CA-1F3FC-200D-2642-FE0F","emoji":"🏊🏼‍♂️","text":"","type":1,"order":2615,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man swimming: medium skin tone","hexcode":"1F3CA-1F3FD-200D-2642-FE0F","emoji":"🏊🏽‍♂️","text":"","type":1,"order":2617,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man swimming: medium-dark skin tone","hexcode":"1F3CA-1F3FE-200D-2642-FE0F","emoji":"🏊🏾‍♂️","text":"","type":1,"order":2619,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man swimming: dark skin tone","hexcode":"1F3CA-1F3FF-200D-2642-FE0F","emoji":"🏊🏿‍♂️","text":"","type":1,"order":2621,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman swimming","hexcode":"1F3CA-200D-2640-FE0F","tags":["freestyle","man","sport","swim","swimmer","swimming","triathlon"],"emoji":"🏊‍♀️","text":"","type":1,"order":2623,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman swimming: light skin tone","hexcode":"1F3CA-1F3FB-200D-2640-FE0F","emoji":"🏊🏻‍♀️","text":"","type":1,"order":2625,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman swimming: medium-light skin tone","hexcode":"1F3CA-1F3FC-200D-2640-FE0F","emoji":"🏊🏼‍♀️","text":"","type":1,"order":2627,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman swimming: medium skin tone","hexcode":"1F3CA-1F3FD-200D-2640-FE0F","emoji":"🏊🏽‍♀️","text":"","type":1,"order":2629,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman swimming: medium-dark skin tone","hexcode":"1F3CA-1F3FE-200D-2640-FE0F","emoji":"🏊🏾‍♀️","text":"","type":1,"order":2631,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman swimming: dark skin tone","hexcode":"1F3CA-1F3FF-200D-2640-FE0F","emoji":"🏊🏿‍♀️","text":"","type":1,"order":2633,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person bouncing ball","hexcode":"26F9","tags":["athletic","ball","basketball","bouncing","championship","dribble","net","person","player","throw"],"emoji":"⛹️","text":"⛹︎","type":0,"order":2636,"group":1,"subgroup":28,"version":0.7,"skins":[{"label":"person bouncing ball: light skin tone","hexcode":"26F9-1F3FB","emoji":"⛹🏻","text":"","type":1,"order":2637,"group":1,"subgroup":28,"version":2,"tone":1},{"label":"person bouncing ball: medium-light skin tone","hexcode":"26F9-1F3FC","emoji":"⛹🏼","text":"","type":1,"order":2638,"group":1,"subgroup":28,"version":2,"tone":2},{"label":"person bouncing ball: medium skin tone","hexcode":"26F9-1F3FD","emoji":"⛹🏽","text":"","type":1,"order":2639,"group":1,"subgroup":28,"version":2,"tone":3},{"label":"person bouncing ball: medium-dark skin tone","hexcode":"26F9-1F3FE","emoji":"⛹🏾","text":"","type":1,"order":2640,"group":1,"subgroup":28,"version":2,"tone":4},{"label":"person bouncing ball: dark skin tone","hexcode":"26F9-1F3FF","emoji":"⛹🏿","text":"","type":1,"order":2641,"group":1,"subgroup":28,"version":2,"tone":5}]},{"label":"man bouncing ball","hexcode":"26F9-FE0F-200D-2642-FE0F","tags":["athletic","ball","basketball","bouncing","championship","dribble","man","net","player","throw"],"emoji":"⛹️‍♂️","text":"","type":1,"order":2642,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man bouncing ball: light skin tone","hexcode":"26F9-1F3FB-200D-2642-FE0F","emoji":"⛹🏻‍♂️","text":"","type":1,"order":2646,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man bouncing ball: medium-light skin tone","hexcode":"26F9-1F3FC-200D-2642-FE0F","emoji":"⛹🏼‍♂️","text":"","type":1,"order":2648,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man bouncing ball: medium skin tone","hexcode":"26F9-1F3FD-200D-2642-FE0F","emoji":"⛹🏽‍♂️","text":"","type":1,"order":2650,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man bouncing ball: medium-dark skin tone","hexcode":"26F9-1F3FE-200D-2642-FE0F","emoji":"⛹🏾‍♂️","text":"","type":1,"order":2652,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man bouncing ball: dark skin tone","hexcode":"26F9-1F3FF-200D-2642-FE0F","emoji":"⛹🏿‍♂️","text":"","type":1,"order":2654,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman bouncing ball","hexcode":"26F9-FE0F-200D-2640-FE0F","tags":["athletic","ball","basketball","bouncing","championship","dribble","net","player","throw","woman"],"emoji":"⛹️‍♀️","text":"","type":1,"order":2656,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman bouncing ball: light skin tone","hexcode":"26F9-1F3FB-200D-2640-FE0F","emoji":"⛹🏻‍♀️","text":"","type":1,"order":2660,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman bouncing ball: medium-light skin tone","hexcode":"26F9-1F3FC-200D-2640-FE0F","emoji":"⛹🏼‍♀️","text":"","type":1,"order":2662,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman bouncing ball: medium skin tone","hexcode":"26F9-1F3FD-200D-2640-FE0F","emoji":"⛹🏽‍♀️","text":"","type":1,"order":2664,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman bouncing ball: medium-dark skin tone","hexcode":"26F9-1F3FE-200D-2640-FE0F","emoji":"⛹🏾‍♀️","text":"","type":1,"order":2666,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman bouncing ball: dark skin tone","hexcode":"26F9-1F3FF-200D-2640-FE0F","emoji":"⛹🏿‍♀️","text":"","type":1,"order":2668,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person lifting weights","hexcode":"1F3CB","tags":["barbell","bodybuilder","deadlift","lifter","lifting","person","powerlifting","weight","weightlifter","weights","workout"],"emoji":"🏋️","text":"🏋︎","type":0,"order":2671,"group":1,"subgroup":28,"version":0.7,"skins":[{"label":"person lifting weights: light skin tone","hexcode":"1F3CB-1F3FB","emoji":"🏋🏻","text":"","type":1,"order":2672,"group":1,"subgroup":28,"version":2,"tone":1},{"label":"person lifting weights: medium-light skin tone","hexcode":"1F3CB-1F3FC","emoji":"🏋🏼","text":"","type":1,"order":2673,"group":1,"subgroup":28,"version":2,"tone":2},{"label":"person lifting weights: medium skin tone","hexcode":"1F3CB-1F3FD","emoji":"🏋🏽","text":"","type":1,"order":2674,"group":1,"subgroup":28,"version":2,"tone":3},{"label":"person lifting weights: medium-dark skin tone","hexcode":"1F3CB-1F3FE","emoji":"🏋🏾","text":"","type":1,"order":2675,"group":1,"subgroup":28,"version":2,"tone":4},{"label":"person lifting weights: dark skin tone","hexcode":"1F3CB-1F3FF","emoji":"🏋🏿","text":"","type":1,"order":2676,"group":1,"subgroup":28,"version":2,"tone":5}]},{"label":"man lifting weights","hexcode":"1F3CB-FE0F-200D-2642-FE0F","tags":["barbell","bodybuilder","deadlift","lifter","lifting","man","powerlifting","weight","weightlifter","weights","workout"],"emoji":"🏋️‍♂️","text":"","type":1,"order":2677,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man lifting weights: light skin tone","hexcode":"1F3CB-1F3FB-200D-2642-FE0F","emoji":"🏋🏻‍♂️","text":"","type":1,"order":2681,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man lifting weights: medium-light skin tone","hexcode":"1F3CB-1F3FC-200D-2642-FE0F","emoji":"🏋🏼‍♂️","text":"","type":1,"order":2683,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man lifting weights: medium skin tone","hexcode":"1F3CB-1F3FD-200D-2642-FE0F","emoji":"🏋🏽‍♂️","text":"","type":1,"order":2685,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man lifting weights: medium-dark skin tone","hexcode":"1F3CB-1F3FE-200D-2642-FE0F","emoji":"🏋🏾‍♂️","text":"","type":1,"order":2687,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man lifting weights: dark skin tone","hexcode":"1F3CB-1F3FF-200D-2642-FE0F","emoji":"🏋🏿‍♂️","text":"","type":1,"order":2689,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman lifting weights","hexcode":"1F3CB-FE0F-200D-2640-FE0F","tags":["barbell","bodybuilder","deadlift","lifter","lifting","powerlifting","weight","weightlifter","weights","woman","workout"],"emoji":"🏋️‍♀️","text":"","type":1,"order":2691,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman lifting weights: light skin tone","hexcode":"1F3CB-1F3FB-200D-2640-FE0F","emoji":"🏋🏻‍♀️","text":"","type":1,"order":2695,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman lifting weights: medium-light skin tone","hexcode":"1F3CB-1F3FC-200D-2640-FE0F","emoji":"🏋🏼‍♀️","text":"","type":1,"order":2697,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman lifting weights: medium skin tone","hexcode":"1F3CB-1F3FD-200D-2640-FE0F","emoji":"🏋🏽‍♀️","text":"","type":1,"order":2699,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman lifting weights: medium-dark skin tone","hexcode":"1F3CB-1F3FE-200D-2640-FE0F","emoji":"🏋🏾‍♀️","text":"","type":1,"order":2701,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman lifting weights: dark skin tone","hexcode":"1F3CB-1F3FF-200D-2640-FE0F","emoji":"🏋🏿‍♀️","text":"","type":1,"order":2703,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person biking","hexcode":"1F6B4","tags":["bicycle","bicyclist","bike","biking","cycle","cyclist","person","riding","sport"],"emoji":"🚴","text":"","type":1,"order":2705,"group":1,"subgroup":28,"version":1,"skins":[{"label":"person biking: light skin tone","hexcode":"1F6B4-1F3FB","emoji":"🚴🏻","text":"","type":1,"order":2706,"group":1,"subgroup":28,"version":1,"tone":1},{"label":"person biking: medium-light skin tone","hexcode":"1F6B4-1F3FC","emoji":"🚴🏼","text":"","type":1,"order":2707,"group":1,"subgroup":28,"version":1,"tone":2},{"label":"person biking: medium skin tone","hexcode":"1F6B4-1F3FD","emoji":"🚴🏽","text":"","type":1,"order":2708,"group":1,"subgroup":28,"version":1,"tone":3},{"label":"person biking: medium-dark skin tone","hexcode":"1F6B4-1F3FE","emoji":"🚴🏾","text":"","type":1,"order":2709,"group":1,"subgroup":28,"version":1,"tone":4},{"label":"person biking: dark skin tone","hexcode":"1F6B4-1F3FF","emoji":"🚴🏿","text":"","type":1,"order":2710,"group":1,"subgroup":28,"version":1,"tone":5}]},{"label":"man biking","hexcode":"1F6B4-200D-2642-FE0F","tags":["bicycle","bicyclist","bike","biking","cycle","cyclist","man","riding","sport"],"emoji":"🚴‍♂️","text":"","type":1,"order":2711,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man biking: light skin tone","hexcode":"1F6B4-1F3FB-200D-2642-FE0F","emoji":"🚴🏻‍♂️","text":"","type":1,"order":2713,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man biking: medium-light skin tone","hexcode":"1F6B4-1F3FC-200D-2642-FE0F","emoji":"🚴🏼‍♂️","text":"","type":1,"order":2715,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man biking: medium skin tone","hexcode":"1F6B4-1F3FD-200D-2642-FE0F","emoji":"🚴🏽‍♂️","text":"","type":1,"order":2717,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man biking: medium-dark skin tone","hexcode":"1F6B4-1F3FE-200D-2642-FE0F","emoji":"🚴🏾‍♂️","text":"","type":1,"order":2719,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man biking: dark skin tone","hexcode":"1F6B4-1F3FF-200D-2642-FE0F","emoji":"🚴🏿‍♂️","text":"","type":1,"order":2721,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman biking","hexcode":"1F6B4-200D-2640-FE0F","tags":["bicycle","bicyclist","bike","biking","cycle","cyclist","riding","sport","woman"],"emoji":"🚴‍♀️","text":"","type":1,"order":2723,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman biking: light skin tone","hexcode":"1F6B4-1F3FB-200D-2640-FE0F","emoji":"🚴🏻‍♀️","text":"","type":1,"order":2725,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman biking: medium-light skin tone","hexcode":"1F6B4-1F3FC-200D-2640-FE0F","emoji":"🚴🏼‍♀️","text":"","type":1,"order":2727,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman biking: medium skin tone","hexcode":"1F6B4-1F3FD-200D-2640-FE0F","emoji":"🚴🏽‍♀️","text":"","type":1,"order":2729,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman biking: medium-dark skin tone","hexcode":"1F6B4-1F3FE-200D-2640-FE0F","emoji":"🚴🏾‍♀️","text":"","type":1,"order":2731,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman biking: dark skin tone","hexcode":"1F6B4-1F3FF-200D-2640-FE0F","emoji":"🚴🏿‍♀️","text":"","type":1,"order":2733,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person mountain biking","hexcode":"1F6B5","tags":["bicycle","bicyclist","bike","biking","cycle","cyclist","mountain","person","riding","sport"],"emoji":"🚵","text":"","type":1,"order":2735,"group":1,"subgroup":28,"version":1,"skins":[{"label":"person mountain biking: light skin tone","hexcode":"1F6B5-1F3FB","emoji":"🚵🏻","text":"","type":1,"order":2736,"group":1,"subgroup":28,"version":1,"tone":1},{"label":"person mountain biking: medium-light skin tone","hexcode":"1F6B5-1F3FC","emoji":"🚵🏼","text":"","type":1,"order":2737,"group":1,"subgroup":28,"version":1,"tone":2},{"label":"person mountain biking: medium skin tone","hexcode":"1F6B5-1F3FD","emoji":"🚵🏽","text":"","type":1,"order":2738,"group":1,"subgroup":28,"version":1,"tone":3},{"label":"person mountain biking: medium-dark skin tone","hexcode":"1F6B5-1F3FE","emoji":"🚵🏾","text":"","type":1,"order":2739,"group":1,"subgroup":28,"version":1,"tone":4},{"label":"person mountain biking: dark skin tone","hexcode":"1F6B5-1F3FF","emoji":"🚵🏿","text":"","type":1,"order":2740,"group":1,"subgroup":28,"version":1,"tone":5}]},{"label":"man mountain biking","hexcode":"1F6B5-200D-2642-FE0F","tags":["bicycle","bicyclist","bike","biking","cycle","cyclist","man","mountain","riding","sport"],"emoji":"🚵‍♂️","text":"","type":1,"order":2741,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man mountain biking: light skin tone","hexcode":"1F6B5-1F3FB-200D-2642-FE0F","emoji":"🚵🏻‍♂️","text":"","type":1,"order":2743,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man mountain biking: medium-light skin tone","hexcode":"1F6B5-1F3FC-200D-2642-FE0F","emoji":"🚵🏼‍♂️","text":"","type":1,"order":2745,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man mountain biking: medium skin tone","hexcode":"1F6B5-1F3FD-200D-2642-FE0F","emoji":"🚵🏽‍♂️","text":"","type":1,"order":2747,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man mountain biking: medium-dark skin tone","hexcode":"1F6B5-1F3FE-200D-2642-FE0F","emoji":"🚵🏾‍♂️","text":"","type":1,"order":2749,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man mountain biking: dark skin tone","hexcode":"1F6B5-1F3FF-200D-2642-FE0F","emoji":"🚵🏿‍♂️","text":"","type":1,"order":2751,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman mountain biking","hexcode":"1F6B5-200D-2640-FE0F","tags":["bicycle","bicyclist","bike","biking","cycle","cyclist","mountain","riding","sport","woman"],"emoji":"🚵‍♀️","text":"","type":1,"order":2753,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman mountain biking: light skin tone","hexcode":"1F6B5-1F3FB-200D-2640-FE0F","emoji":"🚵🏻‍♀️","text":"","type":1,"order":2755,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman mountain biking: medium-light skin tone","hexcode":"1F6B5-1F3FC-200D-2640-FE0F","emoji":"🚵🏼‍♀️","text":"","type":1,"order":2757,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman mountain biking: medium skin tone","hexcode":"1F6B5-1F3FD-200D-2640-FE0F","emoji":"🚵🏽‍♀️","text":"","type":1,"order":2759,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman mountain biking: medium-dark skin tone","hexcode":"1F6B5-1F3FE-200D-2640-FE0F","emoji":"🚵🏾‍♀️","text":"","type":1,"order":2761,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman mountain biking: dark skin tone","hexcode":"1F6B5-1F3FF-200D-2640-FE0F","emoji":"🚵🏿‍♀️","text":"","type":1,"order":2763,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person cartwheeling","hexcode":"1F938","tags":["active","cartwheel","cartwheeling","excited","flip","gymnastics","happy","person","somersault"],"emoji":"🤸","text":"","type":1,"order":2765,"group":1,"subgroup":28,"version":3,"skins":[{"label":"person cartwheeling: light skin tone","hexcode":"1F938-1F3FB","emoji":"🤸🏻","text":"","type":1,"order":2766,"group":1,"subgroup":28,"version":3,"tone":1},{"label":"person cartwheeling: medium-light skin tone","hexcode":"1F938-1F3FC","emoji":"🤸🏼","text":"","type":1,"order":2767,"group":1,"subgroup":28,"version":3,"tone":2},{"label":"person cartwheeling: medium skin tone","hexcode":"1F938-1F3FD","emoji":"🤸🏽","text":"","type":1,"order":2768,"group":1,"subgroup":28,"version":3,"tone":3},{"label":"person cartwheeling: medium-dark skin tone","hexcode":"1F938-1F3FE","emoji":"🤸🏾","text":"","type":1,"order":2769,"group":1,"subgroup":28,"version":3,"tone":4},{"label":"person cartwheeling: dark skin tone","hexcode":"1F938-1F3FF","emoji":"🤸🏿","text":"","type":1,"order":2770,"group":1,"subgroup":28,"version":3,"tone":5}]},{"label":"man cartwheeling","hexcode":"1F938-200D-2642-FE0F","tags":["active","cartwheel","cartwheeling","excited","flip","gymnastics","happy","man","somersault"],"emoji":"🤸‍♂️","text":"","type":1,"order":2771,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man cartwheeling: light skin tone","hexcode":"1F938-1F3FB-200D-2642-FE0F","emoji":"🤸🏻‍♂️","text":"","type":1,"order":2773,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man cartwheeling: medium-light skin tone","hexcode":"1F938-1F3FC-200D-2642-FE0F","emoji":"🤸🏼‍♂️","text":"","type":1,"order":2775,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man cartwheeling: medium skin tone","hexcode":"1F938-1F3FD-200D-2642-FE0F","emoji":"🤸🏽‍♂️","text":"","type":1,"order":2777,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man cartwheeling: medium-dark skin tone","hexcode":"1F938-1F3FE-200D-2642-FE0F","emoji":"🤸🏾‍♂️","text":"","type":1,"order":2779,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man cartwheeling: dark skin tone","hexcode":"1F938-1F3FF-200D-2642-FE0F","emoji":"🤸🏿‍♂️","text":"","type":1,"order":2781,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman cartwheeling","hexcode":"1F938-200D-2640-FE0F","tags":["active","cartwheel","cartwheeling","excited","flip","gymnastics","happy","somersault","woman"],"emoji":"🤸‍♀️","text":"","type":1,"order":2783,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman cartwheeling: light skin tone","hexcode":"1F938-1F3FB-200D-2640-FE0F","emoji":"🤸🏻‍♀️","text":"","type":1,"order":2785,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman cartwheeling: medium-light skin tone","hexcode":"1F938-1F3FC-200D-2640-FE0F","emoji":"🤸🏼‍♀️","text":"","type":1,"order":2787,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman cartwheeling: medium skin tone","hexcode":"1F938-1F3FD-200D-2640-FE0F","emoji":"🤸🏽‍♀️","text":"","type":1,"order":2789,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman cartwheeling: medium-dark skin tone","hexcode":"1F938-1F3FE-200D-2640-FE0F","emoji":"🤸🏾‍♀️","text":"","type":1,"order":2791,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman cartwheeling: dark skin tone","hexcode":"1F938-1F3FF-200D-2640-FE0F","emoji":"🤸🏿‍♀️","text":"","type":1,"order":2793,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"people wrestling","hexcode":"1F93C","tags":["combat","duel","grapple","people","ring","tournament","wrestle","wrestling"],"emoji":"🤼","text":"","type":1,"order":2795,"group":1,"subgroup":28,"version":3},{"label":"men wrestling","hexcode":"1F93C-200D-2642-FE0F","tags":["combat","duel","grapple","men","ring","tournament","wrestle","wrestling"],"emoji":"🤼‍♂️","text":"","type":1,"order":2796,"group":1,"subgroup":28,"version":4,"gender":1},{"label":"women wrestling","hexcode":"1F93C-200D-2640-FE0F","tags":["combat","duel","grapple","ring","tournament","women","wrestle","wrestling"],"emoji":"🤼‍♀️","text":"","type":1,"order":2798,"group":1,"subgroup":28,"version":4,"gender":0},{"label":"person playing water polo","hexcode":"1F93D","tags":["person","playing","polo","sport","swimming","water","waterpolo"],"emoji":"🤽","text":"","type":1,"order":2800,"group":1,"subgroup":28,"version":3,"skins":[{"label":"person playing water polo: light skin tone","hexcode":"1F93D-1F3FB","emoji":"🤽🏻","text":"","type":1,"order":2801,"group":1,"subgroup":28,"version":3,"tone":1},{"label":"person playing water polo: medium-light skin tone","hexcode":"1F93D-1F3FC","emoji":"🤽🏼","text":"","type":1,"order":2802,"group":1,"subgroup":28,"version":3,"tone":2},{"label":"person playing water polo: medium skin tone","hexcode":"1F93D-1F3FD","emoji":"🤽🏽","text":"","type":1,"order":2803,"group":1,"subgroup":28,"version":3,"tone":3},{"label":"person playing water polo: medium-dark skin tone","hexcode":"1F93D-1F3FE","emoji":"🤽🏾","text":"","type":1,"order":2804,"group":1,"subgroup":28,"version":3,"tone":4},{"label":"person playing water polo: dark skin tone","hexcode":"1F93D-1F3FF","emoji":"🤽🏿","text":"","type":1,"order":2805,"group":1,"subgroup":28,"version":3,"tone":5}]},{"label":"man playing water polo","hexcode":"1F93D-200D-2642-FE0F","tags":["man","playing","polo","sport","swimming","water","waterpolo"],"emoji":"🤽‍♂️","text":"","type":1,"order":2806,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man playing water polo: light skin tone","hexcode":"1F93D-1F3FB-200D-2642-FE0F","emoji":"🤽🏻‍♂️","text":"","type":1,"order":2808,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man playing water polo: medium-light skin tone","hexcode":"1F93D-1F3FC-200D-2642-FE0F","emoji":"🤽🏼‍♂️","text":"","type":1,"order":2810,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man playing water polo: medium skin tone","hexcode":"1F93D-1F3FD-200D-2642-FE0F","emoji":"🤽🏽‍♂️","text":"","type":1,"order":2812,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man playing water polo: medium-dark skin tone","hexcode":"1F93D-1F3FE-200D-2642-FE0F","emoji":"🤽🏾‍♂️","text":"","type":1,"order":2814,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man playing water polo: dark skin tone","hexcode":"1F93D-1F3FF-200D-2642-FE0F","emoji":"🤽🏿‍♂️","text":"","type":1,"order":2816,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman playing water polo","hexcode":"1F93D-200D-2640-FE0F","tags":["playing","polo","sport","swimming","water","waterpolo","woman"],"emoji":"🤽‍♀️","text":"","type":1,"order":2818,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman playing water polo: light skin tone","hexcode":"1F93D-1F3FB-200D-2640-FE0F","emoji":"🤽🏻‍♀️","text":"","type":1,"order":2820,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman playing water polo: medium-light skin tone","hexcode":"1F93D-1F3FC-200D-2640-FE0F","emoji":"🤽🏼‍♀️","text":"","type":1,"order":2822,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman playing water polo: medium skin tone","hexcode":"1F93D-1F3FD-200D-2640-FE0F","emoji":"🤽🏽‍♀️","text":"","type":1,"order":2824,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman playing water polo: medium-dark skin tone","hexcode":"1F93D-1F3FE-200D-2640-FE0F","emoji":"🤽🏾‍♀️","text":"","type":1,"order":2826,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman playing water polo: dark skin tone","hexcode":"1F93D-1F3FF-200D-2640-FE0F","emoji":"🤽🏿‍♀️","text":"","type":1,"order":2828,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person playing handball","hexcode":"1F93E","tags":["athletics","ball","catch","chuck","handball","hurl","lob","person","pitch","playing","sport","throw","toss"],"emoji":"🤾","text":"","type":1,"order":2830,"group":1,"subgroup":28,"version":3,"skins":[{"label":"person playing handball: light skin tone","hexcode":"1F93E-1F3FB","emoji":"🤾🏻","text":"","type":1,"order":2831,"group":1,"subgroup":28,"version":3,"tone":1},{"label":"person playing handball: medium-light skin tone","hexcode":"1F93E-1F3FC","emoji":"🤾🏼","text":"","type":1,"order":2832,"group":1,"subgroup":28,"version":3,"tone":2},{"label":"person playing handball: medium skin tone","hexcode":"1F93E-1F3FD","emoji":"🤾🏽","text":"","type":1,"order":2833,"group":1,"subgroup":28,"version":3,"tone":3},{"label":"person playing handball: medium-dark skin tone","hexcode":"1F93E-1F3FE","emoji":"🤾🏾","text":"","type":1,"order":2834,"group":1,"subgroup":28,"version":3,"tone":4},{"label":"person playing handball: dark skin tone","hexcode":"1F93E-1F3FF","emoji":"🤾🏿","text":"","type":1,"order":2835,"group":1,"subgroup":28,"version":3,"tone":5}]},{"label":"man playing handball","hexcode":"1F93E-200D-2642-FE0F","tags":["athletics","ball","catch","chuck","handball","hurl","lob","man","pitch","playing","sport","throw","toss"],"emoji":"🤾‍♂️","text":"","type":1,"order":2836,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man playing handball: light skin tone","hexcode":"1F93E-1F3FB-200D-2642-FE0F","emoji":"🤾🏻‍♂️","text":"","type":1,"order":2838,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man playing handball: medium-light skin tone","hexcode":"1F93E-1F3FC-200D-2642-FE0F","emoji":"🤾🏼‍♂️","text":"","type":1,"order":2840,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man playing handball: medium skin tone","hexcode":"1F93E-1F3FD-200D-2642-FE0F","emoji":"🤾🏽‍♂️","text":"","type":1,"order":2842,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man playing handball: medium-dark skin tone","hexcode":"1F93E-1F3FE-200D-2642-FE0F","emoji":"🤾🏾‍♂️","text":"","type":1,"order":2844,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man playing handball: dark skin tone","hexcode":"1F93E-1F3FF-200D-2642-FE0F","emoji":"🤾🏿‍♂️","text":"","type":1,"order":2846,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman playing handball","hexcode":"1F93E-200D-2640-FE0F","tags":["athletics","ball","catch","chuck","handball","hurl","lob","pitch","playing","sport","throw","toss","woman"],"emoji":"🤾‍♀️","text":"","type":1,"order":2848,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman playing handball: light skin tone","hexcode":"1F93E-1F3FB-200D-2640-FE0F","emoji":"🤾🏻‍♀️","text":"","type":1,"order":2850,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman playing handball: medium-light skin tone","hexcode":"1F93E-1F3FC-200D-2640-FE0F","emoji":"🤾🏼‍♀️","text":"","type":1,"order":2852,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman playing handball: medium skin tone","hexcode":"1F93E-1F3FD-200D-2640-FE0F","emoji":"🤾🏽‍♀️","text":"","type":1,"order":2854,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman playing handball: medium-dark skin tone","hexcode":"1F93E-1F3FE-200D-2640-FE0F","emoji":"🤾🏾‍♀️","text":"","type":1,"order":2856,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman playing handball: dark skin tone","hexcode":"1F93E-1F3FF-200D-2640-FE0F","emoji":"🤾🏿‍♀️","text":"","type":1,"order":2858,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person juggling","hexcode":"1F939","tags":["act","balance","balancing","handle","juggle","juggling","manage","multitask","person","skill"],"emoji":"🤹","text":"","type":1,"order":2860,"group":1,"subgroup":28,"version":3,"skins":[{"label":"person juggling: light skin tone","hexcode":"1F939-1F3FB","emoji":"🤹🏻","text":"","type":1,"order":2861,"group":1,"subgroup":28,"version":3,"tone":1},{"label":"person juggling: medium-light skin tone","hexcode":"1F939-1F3FC","emoji":"🤹🏼","text":"","type":1,"order":2862,"group":1,"subgroup":28,"version":3,"tone":2},{"label":"person juggling: medium skin tone","hexcode":"1F939-1F3FD","emoji":"🤹🏽","text":"","type":1,"order":2863,"group":1,"subgroup":28,"version":3,"tone":3},{"label":"person juggling: medium-dark skin tone","hexcode":"1F939-1F3FE","emoji":"🤹🏾","text":"","type":1,"order":2864,"group":1,"subgroup":28,"version":3,"tone":4},{"label":"person juggling: dark skin tone","hexcode":"1F939-1F3FF","emoji":"🤹🏿","text":"","type":1,"order":2865,"group":1,"subgroup":28,"version":3,"tone":5}]},{"label":"man juggling","hexcode":"1F939-200D-2642-FE0F","tags":["act","balance","balancing","handle","juggle","juggling","man","manage","multitask","skill"],"emoji":"🤹‍♂️","text":"","type":1,"order":2866,"group":1,"subgroup":28,"version":4,"gender":1,"skins":[{"label":"man juggling: light skin tone","hexcode":"1F939-1F3FB-200D-2642-FE0F","emoji":"🤹🏻‍♂️","text":"","type":1,"order":2868,"group":1,"subgroup":28,"version":4,"gender":1,"tone":1},{"label":"man juggling: medium-light skin tone","hexcode":"1F939-1F3FC-200D-2642-FE0F","emoji":"🤹🏼‍♂️","text":"","type":1,"order":2870,"group":1,"subgroup":28,"version":4,"gender":1,"tone":2},{"label":"man juggling: medium skin tone","hexcode":"1F939-1F3FD-200D-2642-FE0F","emoji":"🤹🏽‍♂️","text":"","type":1,"order":2872,"group":1,"subgroup":28,"version":4,"gender":1,"tone":3},{"label":"man juggling: medium-dark skin tone","hexcode":"1F939-1F3FE-200D-2642-FE0F","emoji":"🤹🏾‍♂️","text":"","type":1,"order":2874,"group":1,"subgroup":28,"version":4,"gender":1,"tone":4},{"label":"man juggling: dark skin tone","hexcode":"1F939-1F3FF-200D-2642-FE0F","emoji":"🤹🏿‍♂️","text":"","type":1,"order":2876,"group":1,"subgroup":28,"version":4,"gender":1,"tone":5}]},{"label":"woman juggling","hexcode":"1F939-200D-2640-FE0F","tags":["act","balance","balancing","handle","juggle","juggling","manage","multitask","skill","woman"],"emoji":"🤹‍♀️","text":"","type":1,"order":2878,"group":1,"subgroup":28,"version":4,"gender":0,"skins":[{"label":"woman juggling: light skin tone","hexcode":"1F939-1F3FB-200D-2640-FE0F","emoji":"🤹🏻‍♀️","text":"","type":1,"order":2880,"group":1,"subgroup":28,"version":4,"gender":0,"tone":1},{"label":"woman juggling: medium-light skin tone","hexcode":"1F939-1F3FC-200D-2640-FE0F","emoji":"🤹🏼‍♀️","text":"","type":1,"order":2882,"group":1,"subgroup":28,"version":4,"gender":0,"tone":2},{"label":"woman juggling: medium skin tone","hexcode":"1F939-1F3FD-200D-2640-FE0F","emoji":"🤹🏽‍♀️","text":"","type":1,"order":2884,"group":1,"subgroup":28,"version":4,"gender":0,"tone":3},{"label":"woman juggling: medium-dark skin tone","hexcode":"1F939-1F3FE-200D-2640-FE0F","emoji":"🤹🏾‍♀️","text":"","type":1,"order":2886,"group":1,"subgroup":28,"version":4,"gender":0,"tone":4},{"label":"woman juggling: dark skin tone","hexcode":"1F939-1F3FF-200D-2640-FE0F","emoji":"🤹🏿‍♀️","text":"","type":1,"order":2888,"group":1,"subgroup":28,"version":4,"gender":0,"tone":5}]},{"label":"person in lotus position","hexcode":"1F9D8","tags":["cross","legged","legs","lotus","meditation","peace","person","position","relax","serenity","yoga","yogi","zen"],"emoji":"🧘","text":"","type":1,"order":2890,"group":1,"subgroup":29,"version":5,"skins":[{"label":"person in lotus position: light skin tone","hexcode":"1F9D8-1F3FB","emoji":"🧘🏻","text":"","type":1,"order":2891,"group":1,"subgroup":29,"version":5,"tone":1},{"label":"person in lotus position: medium-light skin tone","hexcode":"1F9D8-1F3FC","emoji":"🧘🏼","text":"","type":1,"order":2892,"group":1,"subgroup":29,"version":5,"tone":2},{"label":"person in lotus position: medium skin tone","hexcode":"1F9D8-1F3FD","emoji":"🧘🏽","text":"","type":1,"order":2893,"group":1,"subgroup":29,"version":5,"tone":3},{"label":"person in lotus position: medium-dark skin tone","hexcode":"1F9D8-1F3FE","emoji":"🧘🏾","text":"","type":1,"order":2894,"group":1,"subgroup":29,"version":5,"tone":4},{"label":"person in lotus position: dark skin tone","hexcode":"1F9D8-1F3FF","emoji":"🧘🏿","text":"","type":1,"order":2895,"group":1,"subgroup":29,"version":5,"tone":5}]},{"label":"man in lotus position","hexcode":"1F9D8-200D-2642-FE0F","tags":["cross","legged","legs","lotus","man","meditation","peace","position","relax","serenity","yoga","yogi","zen"],"emoji":"🧘‍♂️","text":"","type":1,"order":2896,"group":1,"subgroup":29,"version":5,"gender":1,"skins":[{"label":"man in lotus position: light skin tone","hexcode":"1F9D8-1F3FB-200D-2642-FE0F","emoji":"🧘🏻‍♂️","text":"","type":1,"order":2898,"group":1,"subgroup":29,"version":5,"gender":1,"tone":1},{"label":"man in lotus position: medium-light skin tone","hexcode":"1F9D8-1F3FC-200D-2642-FE0F","emoji":"🧘🏼‍♂️","text":"","type":1,"order":2900,"group":1,"subgroup":29,"version":5,"gender":1,"tone":2},{"label":"man in lotus position: medium skin tone","hexcode":"1F9D8-1F3FD-200D-2642-FE0F","emoji":"🧘🏽‍♂️","text":"","type":1,"order":2902,"group":1,"subgroup":29,"version":5,"gender":1,"tone":3},{"label":"man in lotus position: medium-dark skin tone","hexcode":"1F9D8-1F3FE-200D-2642-FE0F","emoji":"🧘🏾‍♂️","text":"","type":1,"order":2904,"group":1,"subgroup":29,"version":5,"gender":1,"tone":4},{"label":"man in lotus position: dark skin tone","hexcode":"1F9D8-1F3FF-200D-2642-FE0F","emoji":"🧘🏿‍♂️","text":"","type":1,"order":2906,"group":1,"subgroup":29,"version":5,"gender":1,"tone":5}]},{"label":"woman in lotus position","hexcode":"1F9D8-200D-2640-FE0F","tags":["cross","legged","legs","lotus","meditation","peace","position","relax","serenity","woman","yoga","yogi","zen"],"emoji":"🧘‍♀️","text":"","type":1,"order":2908,"group":1,"subgroup":29,"version":5,"gender":0,"skins":[{"label":"woman in lotus position: light skin tone","hexcode":"1F9D8-1F3FB-200D-2640-FE0F","emoji":"🧘🏻‍♀️","text":"","type":1,"order":2910,"group":1,"subgroup":29,"version":5,"gender":0,"tone":1},{"label":"woman in lotus position: medium-light skin tone","hexcode":"1F9D8-1F3FC-200D-2640-FE0F","emoji":"🧘🏼‍♀️","text":"","type":1,"order":2912,"group":1,"subgroup":29,"version":5,"gender":0,"tone":2},{"label":"woman in lotus position: medium skin tone","hexcode":"1F9D8-1F3FD-200D-2640-FE0F","emoji":"🧘🏽‍♀️","text":"","type":1,"order":2914,"group":1,"subgroup":29,"version":5,"gender":0,"tone":3},{"label":"woman in lotus position: medium-dark skin tone","hexcode":"1F9D8-1F3FE-200D-2640-FE0F","emoji":"🧘🏾‍♀️","text":"","type":1,"order":2916,"group":1,"subgroup":29,"version":5,"gender":0,"tone":4},{"label":"woman in lotus position: dark skin tone","hexcode":"1F9D8-1F3FF-200D-2640-FE0F","emoji":"🧘🏿‍♀️","text":"","type":1,"order":2918,"group":1,"subgroup":29,"version":5,"gender":0,"tone":5}]},{"label":"person taking bath","hexcode":"1F6C0","tags":["bath","bathtub","person","taking","tub"],"emoji":"🛀","text":"","type":1,"order":2920,"group":1,"subgroup":29,"version":0.6,"skins":[{"label":"person taking bath: light skin tone","hexcode":"1F6C0-1F3FB","emoji":"🛀🏻","text":"","type":1,"order":2921,"group":1,"subgroup":29,"version":1,"tone":1},{"label":"person taking bath: medium-light skin tone","hexcode":"1F6C0-1F3FC","emoji":"🛀🏼","text":"","type":1,"order":2922,"group":1,"subgroup":29,"version":1,"tone":2},{"label":"person taking bath: medium skin tone","hexcode":"1F6C0-1F3FD","emoji":"🛀🏽","text":"","type":1,"order":2923,"group":1,"subgroup":29,"version":1,"tone":3},{"label":"person taking bath: medium-dark skin tone","hexcode":"1F6C0-1F3FE","emoji":"🛀🏾","text":"","type":1,"order":2924,"group":1,"subgroup":29,"version":1,"tone":4},{"label":"person taking bath: dark skin tone","hexcode":"1F6C0-1F3FF","emoji":"🛀🏿","text":"","type":1,"order":2925,"group":1,"subgroup":29,"version":1,"tone":5}]},{"label":"person in bed","hexcode":"1F6CC","tags":["bed","bedtime","good","goodnight","hotel","nap","night","person","sleep","tired","zzz"],"emoji":"🛌","text":"","type":1,"order":2926,"group":1,"subgroup":29,"version":1,"skins":[{"label":"person in bed: light skin tone","hexcode":"1F6CC-1F3FB","emoji":"🛌🏻","text":"","type":1,"order":2927,"group":1,"subgroup":29,"version":4,"tone":1},{"label":"person in bed: medium-light skin tone","hexcode":"1F6CC-1F3FC","emoji":"🛌🏼","text":"","type":1,"order":2928,"group":1,"subgroup":29,"version":4,"tone":2},{"label":"person in bed: medium skin tone","hexcode":"1F6CC-1F3FD","emoji":"🛌🏽","text":"","type":1,"order":2929,"group":1,"subgroup":29,"version":4,"tone":3},{"label":"person in bed: medium-dark skin tone","hexcode":"1F6CC-1F3FE","emoji":"🛌🏾","text":"","type":1,"order":2930,"group":1,"subgroup":29,"version":4,"tone":4},{"label":"person in bed: dark skin tone","hexcode":"1F6CC-1F3FF","emoji":"🛌🏿","text":"","type":1,"order":2931,"group":1,"subgroup":29,"version":4,"tone":5}]},{"label":"people holding hands","hexcode":"1F9D1-200D-1F91D-200D-1F9D1","tags":["bae","bestie","bff","couple","dating","flirt","friends","hand","hold","people","twins"],"emoji":"🧑‍🤝‍🧑","text":"","type":1,"order":2932,"group":1,"subgroup":30,"version":12,"skins":[{"label":"people holding hands: light skin tone","hexcode":"1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FB","emoji":"🧑🏻‍🤝‍🧑🏻","text":"","type":1,"order":2933,"group":1,"subgroup":30,"version":12,"tone":1},{"label":"people holding hands: light skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FC","emoji":"🧑🏻‍🤝‍🧑🏼","text":"","type":1,"order":2934,"group":1,"subgroup":30,"version":12.1,"tone":[1,2]},{"label":"people holding hands: light skin tone, medium skin tone","hexcode":"1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FD","emoji":"🧑🏻‍🤝‍🧑🏽","text":"","type":1,"order":2935,"group":1,"subgroup":30,"version":12.1,"tone":[1,3]},{"label":"people holding hands: light skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FE","emoji":"🧑🏻‍🤝‍🧑🏾","text":"","type":1,"order":2936,"group":1,"subgroup":30,"version":12.1,"tone":[1,4]},{"label":"people holding hands: light skin tone, dark skin tone","hexcode":"1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FF","emoji":"🧑🏻‍🤝‍🧑🏿","text":"","type":1,"order":2937,"group":1,"subgroup":30,"version":12.1,"tone":[1,5]},{"label":"people holding hands: medium-light skin tone, light skin tone","hexcode":"1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FB","emoji":"🧑🏼‍🤝‍🧑🏻","text":"","type":1,"order":2938,"group":1,"subgroup":30,"version":12,"tone":[2,1]},{"label":"people holding hands: medium-light skin tone","hexcode":"1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FC","emoji":"🧑🏼‍🤝‍🧑🏼","text":"","type":1,"order":2939,"group":1,"subgroup":30,"version":12,"tone":2},{"label":"people holding hands: medium-light skin tone, medium skin tone","hexcode":"1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FD","emoji":"🧑🏼‍🤝‍🧑🏽","text":"","type":1,"order":2940,"group":1,"subgroup":30,"version":12.1,"tone":[2,3]},{"label":"people holding hands: medium-light skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FE","emoji":"🧑🏼‍🤝‍🧑🏾","text":"","type":1,"order":2941,"group":1,"subgroup":30,"version":12.1,"tone":[2,4]},{"label":"people holding hands: medium-light skin tone, dark skin tone","hexcode":"1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FF","emoji":"🧑🏼‍🤝‍🧑🏿","text":"","type":1,"order":2942,"group":1,"subgroup":30,"version":12.1,"tone":[2,5]},{"label":"people holding hands: medium skin tone, light skin tone","hexcode":"1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FB","emoji":"🧑🏽‍🤝‍🧑🏻","text":"","type":1,"order":2943,"group":1,"subgroup":30,"version":12,"tone":[3,1]},{"label":"people holding hands: medium skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FC","emoji":"🧑🏽‍🤝‍🧑🏼","text":"","type":1,"order":2944,"group":1,"subgroup":30,"version":12,"tone":[3,2]},{"label":"people holding hands: medium skin tone","hexcode":"1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FD","emoji":"🧑🏽‍🤝‍🧑🏽","text":"","type":1,"order":2945,"group":1,"subgroup":30,"version":12,"tone":3},{"label":"people holding hands: medium skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FE","emoji":"🧑🏽‍🤝‍🧑🏾","text":"","type":1,"order":2946,"group":1,"subgroup":30,"version":12.1,"tone":[3,4]},{"label":"people holding hands: medium skin tone, dark skin tone","hexcode":"1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FF","emoji":"🧑🏽‍🤝‍🧑🏿","text":"","type":1,"order":2947,"group":1,"subgroup":30,"version":12.1,"tone":[3,5]},{"label":"people holding hands: medium-dark skin tone, light skin tone","hexcode":"1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FB","emoji":"🧑🏾‍🤝‍🧑🏻","text":"","type":1,"order":2948,"group":1,"subgroup":30,"version":12,"tone":[4,1]},{"label":"people holding hands: medium-dark skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FC","emoji":"🧑🏾‍🤝‍🧑🏼","text":"","type":1,"order":2949,"group":1,"subgroup":30,"version":12,"tone":[4,2]},{"label":"people holding hands: medium-dark skin tone, medium skin tone","hexcode":"1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FD","emoji":"🧑🏾‍🤝‍🧑🏽","text":"","type":1,"order":2950,"group":1,"subgroup":30,"version":12,"tone":[4,3]},{"label":"people holding hands: medium-dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FE","emoji":"🧑🏾‍🤝‍🧑🏾","text":"","type":1,"order":2951,"group":1,"subgroup":30,"version":12,"tone":4},{"label":"people holding hands: medium-dark skin tone, dark skin tone","hexcode":"1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FF","emoji":"🧑🏾‍🤝‍🧑🏿","text":"","type":1,"order":2952,"group":1,"subgroup":30,"version":12.1,"tone":[4,5]},{"label":"people holding hands: dark skin tone, light skin tone","hexcode":"1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FB","emoji":"🧑🏿‍🤝‍🧑🏻","text":"","type":1,"order":2953,"group":1,"subgroup":30,"version":12,"tone":[5,1]},{"label":"people holding hands: dark skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FC","emoji":"🧑🏿‍🤝‍🧑🏼","text":"","type":1,"order":2954,"group":1,"subgroup":30,"version":12,"tone":[5,2]},{"label":"people holding hands: dark skin tone, medium skin tone","hexcode":"1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FD","emoji":"🧑🏿‍🤝‍🧑🏽","text":"","type":1,"order":2955,"group":1,"subgroup":30,"version":12,"tone":[5,3]},{"label":"people holding hands: dark skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FE","emoji":"🧑🏿‍🤝‍🧑🏾","text":"","type":1,"order":2956,"group":1,"subgroup":30,"version":12,"tone":[5,4]},{"label":"people holding hands: dark skin tone","hexcode":"1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FF","emoji":"🧑🏿‍🤝‍🧑🏿","text":"","type":1,"order":2957,"group":1,"subgroup":30,"version":12,"tone":5}]},{"label":"women holding hands","hexcode":"1F46D","tags":["bae","bestie","bff","couple","dating","flirt","friends","girls","hand","hold","sisters","twins","women"],"emoji":"👭","text":"","type":1,"order":2958,"group":1,"subgroup":30,"version":1,"skins":[{"label":"women holding hands: light skin tone","hexcode":"1F46D-1F3FB","emoji":"👭🏻","text":"","type":1,"order":2959,"group":1,"subgroup":30,"version":12,"tone":1},{"label":"women holding hands: medium-light skin tone","hexcode":"1F46D-1F3FC","emoji":"👭🏼","text":"","type":1,"order":2965,"group":1,"subgroup":30,"version":12,"tone":2},{"label":"women holding hands: medium skin tone","hexcode":"1F46D-1F3FD","emoji":"👭🏽","text":"","type":1,"order":2971,"group":1,"subgroup":30,"version":12,"tone":3},{"label":"women holding hands: medium-dark skin tone","hexcode":"1F46D-1F3FE","emoji":"👭🏾","text":"","type":1,"order":2977,"group":1,"subgroup":30,"version":12,"tone":4},{"label":"women holding hands: dark skin tone","hexcode":"1F46D-1F3FF","emoji":"👭🏿","text":"","type":1,"order":2983,"group":1,"subgroup":30,"version":12,"tone":5},{"label":"women holding hands: light skin tone, medium-light skin tone","hexcode":"1F469-1F3FB-200D-1F91D-200D-1F469-1F3FC","emoji":"👩🏻‍🤝‍👩🏼","text":"","type":1,"order":2960,"group":1,"subgroup":30,"version":12.1,"tone":[1,2]},{"label":"women holding hands: light skin tone, medium skin tone","hexcode":"1F469-1F3FB-200D-1F91D-200D-1F469-1F3FD","emoji":"👩🏻‍🤝‍👩🏽","text":"","type":1,"order":2961,"group":1,"subgroup":30,"version":12.1,"tone":[1,3]},{"label":"women holding hands: light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FB-200D-1F91D-200D-1F469-1F3FE","emoji":"👩🏻‍🤝‍👩🏾","text":"","type":1,"order":2962,"group":1,"subgroup":30,"version":12.1,"tone":[1,4]},{"label":"women holding hands: light skin tone, dark skin tone","hexcode":"1F469-1F3FB-200D-1F91D-200D-1F469-1F3FF","emoji":"👩🏻‍🤝‍👩🏿","text":"","type":1,"order":2963,"group":1,"subgroup":30,"version":12.1,"tone":[1,5]},{"label":"women holding hands: medium-light skin tone, light skin tone","hexcode":"1F469-1F3FC-200D-1F91D-200D-1F469-1F3FB","emoji":"👩🏼‍🤝‍👩🏻","text":"","type":1,"order":2964,"group":1,"subgroup":30,"version":12,"tone":[2,1]},{"label":"women holding hands: medium-light skin tone, medium skin tone","hexcode":"1F469-1F3FC-200D-1F91D-200D-1F469-1F3FD","emoji":"👩🏼‍🤝‍👩🏽","text":"","type":1,"order":2966,"group":1,"subgroup":30,"version":12.1,"tone":[2,3]},{"label":"women holding hands: medium-light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FC-200D-1F91D-200D-1F469-1F3FE","emoji":"👩🏼‍🤝‍👩🏾","text":"","type":1,"order":2967,"group":1,"subgroup":30,"version":12.1,"tone":[2,4]},{"label":"women holding hands: medium-light skin tone, dark skin tone","hexcode":"1F469-1F3FC-200D-1F91D-200D-1F469-1F3FF","emoji":"👩🏼‍🤝‍👩🏿","text":"","type":1,"order":2968,"group":1,"subgroup":30,"version":12.1,"tone":[2,5]},{"label":"women holding hands: medium skin tone, light skin tone","hexcode":"1F469-1F3FD-200D-1F91D-200D-1F469-1F3FB","emoji":"👩🏽‍🤝‍👩🏻","text":"","type":1,"order":2969,"group":1,"subgroup":30,"version":12,"tone":[3,1]},{"label":"women holding hands: medium skin tone, medium-light skin tone","hexcode":"1F469-1F3FD-200D-1F91D-200D-1F469-1F3FC","emoji":"👩🏽‍🤝‍👩🏼","text":"","type":1,"order":2970,"group":1,"subgroup":30,"version":12,"tone":[3,2]},{"label":"women holding hands: medium skin tone, medium-dark skin tone","hexcode":"1F469-1F3FD-200D-1F91D-200D-1F469-1F3FE","emoji":"👩🏽‍🤝‍👩🏾","text":"","type":1,"order":2972,"group":1,"subgroup":30,"version":12.1,"tone":[3,4]},{"label":"women holding hands: medium skin tone, dark skin tone","hexcode":"1F469-1F3FD-200D-1F91D-200D-1F469-1F3FF","emoji":"👩🏽‍🤝‍👩🏿","text":"","type":1,"order":2973,"group":1,"subgroup":30,"version":12.1,"tone":[3,5]},{"label":"women holding hands: medium-dark skin tone, light skin tone","hexcode":"1F469-1F3FE-200D-1F91D-200D-1F469-1F3FB","emoji":"👩🏾‍🤝‍👩🏻","text":"","type":1,"order":2974,"group":1,"subgroup":30,"version":12,"tone":[4,1]},{"label":"women holding hands: medium-dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FE-200D-1F91D-200D-1F469-1F3FC","emoji":"👩🏾‍🤝‍👩🏼","text":"","type":1,"order":2975,"group":1,"subgroup":30,"version":12,"tone":[4,2]},{"label":"women holding hands: medium-dark skin tone, medium skin tone","hexcode":"1F469-1F3FE-200D-1F91D-200D-1F469-1F3FD","emoji":"👩🏾‍🤝‍👩🏽","text":"","type":1,"order":2976,"group":1,"subgroup":30,"version":12,"tone":[4,3]},{"label":"women holding hands: medium-dark skin tone, dark skin tone","hexcode":"1F469-1F3FE-200D-1F91D-200D-1F469-1F3FF","emoji":"👩🏾‍🤝‍👩🏿","text":"","type":1,"order":2978,"group":1,"subgroup":30,"version":12.1,"tone":[4,5]},{"label":"women holding hands: dark skin tone, light skin tone","hexcode":"1F469-1F3FF-200D-1F91D-200D-1F469-1F3FB","emoji":"👩🏿‍🤝‍👩🏻","text":"","type":1,"order":2979,"group":1,"subgroup":30,"version":12,"tone":[5,1]},{"label":"women holding hands: dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FF-200D-1F91D-200D-1F469-1F3FC","emoji":"👩🏿‍🤝‍👩🏼","text":"","type":1,"order":2980,"group":1,"subgroup":30,"version":12,"tone":[5,2]},{"label":"women holding hands: dark skin tone, medium skin tone","hexcode":"1F469-1F3FF-200D-1F91D-200D-1F469-1F3FD","emoji":"👩🏿‍🤝‍👩🏽","text":"","type":1,"order":2981,"group":1,"subgroup":30,"version":12,"tone":[5,3]},{"label":"women holding hands: dark skin tone, medium-dark skin tone","hexcode":"1F469-1F3FF-200D-1F91D-200D-1F469-1F3FE","emoji":"👩🏿‍🤝‍👩🏾","text":"","type":1,"order":2982,"group":1,"subgroup":30,"version":12,"tone":[5,4]}]},{"label":"woman and man holding hands","hexcode":"1F46B","tags":["bae","bestie","bff","couple","dating","flirt","friends","hand","hold","man","twins","woman"],"emoji":"👫","text":"","type":1,"order":2984,"group":1,"subgroup":30,"version":0.6,"skins":[{"label":"woman and man holding hands: light skin tone","hexcode":"1F46B-1F3FB","emoji":"👫🏻","text":"","type":1,"order":2985,"group":1,"subgroup":30,"version":12,"tone":1},{"label":"woman and man holding hands: medium-light skin tone","hexcode":"1F46B-1F3FC","emoji":"👫🏼","text":"","type":1,"order":2991,"group":1,"subgroup":30,"version":12,"tone":2},{"label":"woman and man holding hands: medium skin tone","hexcode":"1F46B-1F3FD","emoji":"👫🏽","text":"","type":1,"order":2997,"group":1,"subgroup":30,"version":12,"tone":3},{"label":"woman and man holding hands: medium-dark skin tone","hexcode":"1F46B-1F3FE","emoji":"👫🏾","text":"","type":1,"order":3003,"group":1,"subgroup":30,"version":12,"tone":4},{"label":"woman and man holding hands: dark skin tone","hexcode":"1F46B-1F3FF","emoji":"👫🏿","text":"","type":1,"order":3009,"group":1,"subgroup":30,"version":12,"tone":5},{"label":"woman and man holding hands: light skin tone, medium-light skin tone","hexcode":"1F469-1F3FB-200D-1F91D-200D-1F468-1F3FC","emoji":"👩🏻‍🤝‍👨🏼","text":"","type":1,"order":2986,"group":1,"subgroup":30,"version":12,"tone":[1,2]},{"label":"woman and man holding hands: light skin tone, medium skin tone","hexcode":"1F469-1F3FB-200D-1F91D-200D-1F468-1F3FD","emoji":"👩🏻‍🤝‍👨🏽","text":"","type":1,"order":2987,"group":1,"subgroup":30,"version":12,"tone":[1,3]},{"label":"woman and man holding hands: light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FB-200D-1F91D-200D-1F468-1F3FE","emoji":"👩🏻‍🤝‍👨🏾","text":"","type":1,"order":2988,"group":1,"subgroup":30,"version":12,"tone":[1,4]},{"label":"woman and man holding hands: light skin tone, dark skin tone","hexcode":"1F469-1F3FB-200D-1F91D-200D-1F468-1F3FF","emoji":"👩🏻‍🤝‍👨🏿","text":"","type":1,"order":2989,"group":1,"subgroup":30,"version":12,"tone":[1,5]},{"label":"woman and man holding hands: medium-light skin tone, light skin tone","hexcode":"1F469-1F3FC-200D-1F91D-200D-1F468-1F3FB","emoji":"👩🏼‍🤝‍👨🏻","text":"","type":1,"order":2990,"group":1,"subgroup":30,"version":12,"tone":[2,1]},{"label":"woman and man holding hands: medium-light skin tone, medium skin tone","hexcode":"1F469-1F3FC-200D-1F91D-200D-1F468-1F3FD","emoji":"👩🏼‍🤝‍👨🏽","text":"","type":1,"order":2992,"group":1,"subgroup":30,"version":12,"tone":[2,3]},{"label":"woman and man holding hands: medium-light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FC-200D-1F91D-200D-1F468-1F3FE","emoji":"👩🏼‍🤝‍👨🏾","text":"","type":1,"order":2993,"group":1,"subgroup":30,"version":12,"tone":[2,4]},{"label":"woman and man holding hands: medium-light skin tone, dark skin tone","hexcode":"1F469-1F3FC-200D-1F91D-200D-1F468-1F3FF","emoji":"👩🏼‍🤝‍👨🏿","text":"","type":1,"order":2994,"group":1,"subgroup":30,"version":12,"tone":[2,5]},{"label":"woman and man holding hands: medium skin tone, light skin tone","hexcode":"1F469-1F3FD-200D-1F91D-200D-1F468-1F3FB","emoji":"👩🏽‍🤝‍👨🏻","text":"","type":1,"order":2995,"group":1,"subgroup":30,"version":12,"tone":[3,1]},{"label":"woman and man holding hands: medium skin tone, medium-light skin tone","hexcode":"1F469-1F3FD-200D-1F91D-200D-1F468-1F3FC","emoji":"👩🏽‍🤝‍👨🏼","text":"","type":1,"order":2996,"group":1,"subgroup":30,"version":12,"tone":[3,2]},{"label":"woman and man holding hands: medium skin tone, medium-dark skin tone","hexcode":"1F469-1F3FD-200D-1F91D-200D-1F468-1F3FE","emoji":"👩🏽‍🤝‍👨🏾","text":"","type":1,"order":2998,"group":1,"subgroup":30,"version":12,"tone":[3,4]},{"label":"woman and man holding hands: medium skin tone, dark skin tone","hexcode":"1F469-1F3FD-200D-1F91D-200D-1F468-1F3FF","emoji":"👩🏽‍🤝‍👨🏿","text":"","type":1,"order":2999,"group":1,"subgroup":30,"version":12,"tone":[3,5]},{"label":"woman and man holding hands: medium-dark skin tone, light skin tone","hexcode":"1F469-1F3FE-200D-1F91D-200D-1F468-1F3FB","emoji":"👩🏾‍🤝‍👨🏻","text":"","type":1,"order":3000,"group":1,"subgroup":30,"version":12,"tone":[4,1]},{"label":"woman and man holding hands: medium-dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FE-200D-1F91D-200D-1F468-1F3FC","emoji":"👩🏾‍🤝‍👨🏼","text":"","type":1,"order":3001,"group":1,"subgroup":30,"version":12,"tone":[4,2]},{"label":"woman and man holding hands: medium-dark skin tone, medium skin tone","hexcode":"1F469-1F3FE-200D-1F91D-200D-1F468-1F3FD","emoji":"👩🏾‍🤝‍👨🏽","text":"","type":1,"order":3002,"group":1,"subgroup":30,"version":12,"tone":[4,3]},{"label":"woman and man holding hands: medium-dark skin tone, dark skin tone","hexcode":"1F469-1F3FE-200D-1F91D-200D-1F468-1F3FF","emoji":"👩🏾‍🤝‍👨🏿","text":"","type":1,"order":3004,"group":1,"subgroup":30,"version":12,"tone":[4,5]},{"label":"woman and man holding hands: dark skin tone, light skin tone","hexcode":"1F469-1F3FF-200D-1F91D-200D-1F468-1F3FB","emoji":"👩🏿‍🤝‍👨🏻","text":"","type":1,"order":3005,"group":1,"subgroup":30,"version":12,"tone":[5,1]},{"label":"woman and man holding hands: dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FF-200D-1F91D-200D-1F468-1F3FC","emoji":"👩🏿‍🤝‍👨🏼","text":"","type":1,"order":3006,"group":1,"subgroup":30,"version":12,"tone":[5,2]},{"label":"woman and man holding hands: dark skin tone, medium skin tone","hexcode":"1F469-1F3FF-200D-1F91D-200D-1F468-1F3FD","emoji":"👩🏿‍🤝‍👨🏽","text":"","type":1,"order":3007,"group":1,"subgroup":30,"version":12,"tone":[5,3]},{"label":"woman and man holding hands: dark skin tone, medium-dark skin tone","hexcode":"1F469-1F3FF-200D-1F91D-200D-1F468-1F3FE","emoji":"👩🏿‍🤝‍👨🏾","text":"","type":1,"order":3008,"group":1,"subgroup":30,"version":12,"tone":[5,4]}]},{"label":"men holding hands","hexcode":"1F46C","tags":["bae","bestie","bff","boys","brothers","couple","dating","flirt","friends","hand","hold","men","twins"],"emoji":"👬","text":"","type":1,"order":3010,"group":1,"subgroup":30,"version":1,"skins":[{"label":"men holding hands: light skin tone","hexcode":"1F46C-1F3FB","emoji":"👬🏻","text":"","type":1,"order":3011,"group":1,"subgroup":30,"version":12,"tone":1},{"label":"men holding hands: medium-light skin tone","hexcode":"1F46C-1F3FC","emoji":"👬🏼","text":"","type":1,"order":3017,"group":1,"subgroup":30,"version":12,"tone":2},{"label":"men holding hands: medium skin tone","hexcode":"1F46C-1F3FD","emoji":"👬🏽","text":"","type":1,"order":3023,"group":1,"subgroup":30,"version":12,"tone":3},{"label":"men holding hands: medium-dark skin tone","hexcode":"1F46C-1F3FE","emoji":"👬🏾","text":"","type":1,"order":3029,"group":1,"subgroup":30,"version":12,"tone":4},{"label":"men holding hands: dark skin tone","hexcode":"1F46C-1F3FF","emoji":"👬🏿","text":"","type":1,"order":3035,"group":1,"subgroup":30,"version":12,"tone":5},{"label":"men holding hands: light skin tone, medium-light skin tone","hexcode":"1F468-1F3FB-200D-1F91D-200D-1F468-1F3FC","emoji":"👨🏻‍🤝‍👨🏼","text":"","type":1,"order":3012,"group":1,"subgroup":30,"version":12.1,"tone":[1,2]},{"label":"men holding hands: light skin tone, medium skin tone","hexcode":"1F468-1F3FB-200D-1F91D-200D-1F468-1F3FD","emoji":"👨🏻‍🤝‍👨🏽","text":"","type":1,"order":3013,"group":1,"subgroup":30,"version":12.1,"tone":[1,3]},{"label":"men holding hands: light skin tone, medium-dark skin tone","hexcode":"1F468-1F3FB-200D-1F91D-200D-1F468-1F3FE","emoji":"👨🏻‍🤝‍👨🏾","text":"","type":1,"order":3014,"group":1,"subgroup":30,"version":12.1,"tone":[1,4]},{"label":"men holding hands: light skin tone, dark skin tone","hexcode":"1F468-1F3FB-200D-1F91D-200D-1F468-1F3FF","emoji":"👨🏻‍🤝‍👨🏿","text":"","type":1,"order":3015,"group":1,"subgroup":30,"version":12.1,"tone":[1,5]},{"label":"men holding hands: medium-light skin tone, light skin tone","hexcode":"1F468-1F3FC-200D-1F91D-200D-1F468-1F3FB","emoji":"👨🏼‍🤝‍👨🏻","text":"","type":1,"order":3016,"group":1,"subgroup":30,"version":12,"tone":[2,1]},{"label":"men holding hands: medium-light skin tone, medium skin tone","hexcode":"1F468-1F3FC-200D-1F91D-200D-1F468-1F3FD","emoji":"👨🏼‍🤝‍👨🏽","text":"","type":1,"order":3018,"group":1,"subgroup":30,"version":12.1,"tone":[2,3]},{"label":"men holding hands: medium-light skin tone, medium-dark skin tone","hexcode":"1F468-1F3FC-200D-1F91D-200D-1F468-1F3FE","emoji":"👨🏼‍🤝‍👨🏾","text":"","type":1,"order":3019,"group":1,"subgroup":30,"version":12.1,"tone":[2,4]},{"label":"men holding hands: medium-light skin tone, dark skin tone","hexcode":"1F468-1F3FC-200D-1F91D-200D-1F468-1F3FF","emoji":"👨🏼‍🤝‍👨🏿","text":"","type":1,"order":3020,"group":1,"subgroup":30,"version":12.1,"tone":[2,5]},{"label":"men holding hands: medium skin tone, light skin tone","hexcode":"1F468-1F3FD-200D-1F91D-200D-1F468-1F3FB","emoji":"👨🏽‍🤝‍👨🏻","text":"","type":1,"order":3021,"group":1,"subgroup":30,"version":12,"tone":[3,1]},{"label":"men holding hands: medium skin tone, medium-light skin tone","hexcode":"1F468-1F3FD-200D-1F91D-200D-1F468-1F3FC","emoji":"👨🏽‍🤝‍👨🏼","text":"","type":1,"order":3022,"group":1,"subgroup":30,"version":12,"tone":[3,2]},{"label":"men holding hands: medium skin tone, medium-dark skin tone","hexcode":"1F468-1F3FD-200D-1F91D-200D-1F468-1F3FE","emoji":"👨🏽‍🤝‍👨🏾","text":"","type":1,"order":3024,"group":1,"subgroup":30,"version":12.1,"tone":[3,4]},{"label":"men holding hands: medium skin tone, dark skin tone","hexcode":"1F468-1F3FD-200D-1F91D-200D-1F468-1F3FF","emoji":"👨🏽‍🤝‍👨🏿","text":"","type":1,"order":3025,"group":1,"subgroup":30,"version":12.1,"tone":[3,5]},{"label":"men holding hands: medium-dark skin tone, light skin tone","hexcode":"1F468-1F3FE-200D-1F91D-200D-1F468-1F3FB","emoji":"👨🏾‍🤝‍👨🏻","text":"","type":1,"order":3026,"group":1,"subgroup":30,"version":12,"tone":[4,1]},{"label":"men holding hands: medium-dark skin tone, medium-light skin tone","hexcode":"1F468-1F3FE-200D-1F91D-200D-1F468-1F3FC","emoji":"👨🏾‍🤝‍👨🏼","text":"","type":1,"order":3027,"group":1,"subgroup":30,"version":12,"tone":[4,2]},{"label":"men holding hands: medium-dark skin tone, medium skin tone","hexcode":"1F468-1F3FE-200D-1F91D-200D-1F468-1F3FD","emoji":"👨🏾‍🤝‍👨🏽","text":"","type":1,"order":3028,"group":1,"subgroup":30,"version":12,"tone":[4,3]},{"label":"men holding hands: medium-dark skin tone, dark skin tone","hexcode":"1F468-1F3FE-200D-1F91D-200D-1F468-1F3FF","emoji":"👨🏾‍🤝‍👨🏿","text":"","type":1,"order":3030,"group":1,"subgroup":30,"version":12.1,"tone":[4,5]},{"label":"men holding hands: dark skin tone, light skin tone","hexcode":"1F468-1F3FF-200D-1F91D-200D-1F468-1F3FB","emoji":"👨🏿‍🤝‍👨🏻","text":"","type":1,"order":3031,"group":1,"subgroup":30,"version":12,"tone":[5,1]},{"label":"men holding hands: dark skin tone, medium-light skin tone","hexcode":"1F468-1F3FF-200D-1F91D-200D-1F468-1F3FC","emoji":"👨🏿‍🤝‍👨🏼","text":"","type":1,"order":3032,"group":1,"subgroup":30,"version":12,"tone":[5,2]},{"label":"men holding hands: dark skin tone, medium skin tone","hexcode":"1F468-1F3FF-200D-1F91D-200D-1F468-1F3FD","emoji":"👨🏿‍🤝‍👨🏽","text":"","type":1,"order":3033,"group":1,"subgroup":30,"version":12,"tone":[5,3]},{"label":"men holding hands: dark skin tone, medium-dark skin tone","hexcode":"1F468-1F3FF-200D-1F91D-200D-1F468-1F3FE","emoji":"👨🏿‍🤝‍👨🏾","text":"","type":1,"order":3034,"group":1,"subgroup":30,"version":12,"tone":[5,4]}]},{"label":"kiss","hexcode":"1F48F","tags":["anniversary","babe","bae","couple","date","dating","heart","love","mwah","person","romance","together","xoxo"],"emoji":"💏","text":"","type":1,"order":3036,"group":1,"subgroup":30,"version":0.6,"skins":[{"label":"kiss: light skin tone","hexcode":"1F48F-1F3FB","emoji":"💏🏻","text":"","type":1,"order":3037,"group":1,"subgroup":30,"version":13.1,"tone":1},{"label":"kiss: medium-light skin tone","hexcode":"1F48F-1F3FC","emoji":"💏🏼","text":"","type":1,"order":3038,"group":1,"subgroup":30,"version":13.1,"tone":2},{"label":"kiss: medium skin tone","hexcode":"1F48F-1F3FD","emoji":"💏🏽","text":"","type":1,"order":3039,"group":1,"subgroup":30,"version":13.1,"tone":3},{"label":"kiss: medium-dark skin tone","hexcode":"1F48F-1F3FE","emoji":"💏🏾","text":"","type":1,"order":3040,"group":1,"subgroup":30,"version":13.1,"tone":4},{"label":"kiss: dark skin tone","hexcode":"1F48F-1F3FF","emoji":"💏🏿","text":"","type":1,"order":3041,"group":1,"subgroup":30,"version":13.1,"tone":5},{"label":"kiss: person, person, light skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC","emoji":"🧑🏻‍❤️‍💋‍🧑🏼","text":"","type":1,"order":3042,"group":1,"subgroup":30,"version":13.1,"tone":[1,2]},{"label":"kiss: person, person, light skin tone, medium skin tone","hexcode":"1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD","emoji":"🧑🏻‍❤️‍💋‍🧑🏽","text":"","type":1,"order":3044,"group":1,"subgroup":30,"version":13.1,"tone":[1,3]},{"label":"kiss: person, person, light skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE","emoji":"🧑🏻‍❤️‍💋‍🧑🏾","text":"","type":1,"order":3046,"group":1,"subgroup":30,"version":13.1,"tone":[1,4]},{"label":"kiss: person, person, light skin tone, dark skin tone","hexcode":"1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF","emoji":"🧑🏻‍❤️‍💋‍🧑🏿","text":"","type":1,"order":3048,"group":1,"subgroup":30,"version":13.1,"tone":[1,5]},{"label":"kiss: person, person, medium-light skin tone, light skin tone","hexcode":"1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB","emoji":"🧑🏼‍❤️‍💋‍🧑🏻","text":"","type":1,"order":3050,"group":1,"subgroup":30,"version":13.1,"tone":[2,1]},{"label":"kiss: person, person, medium-light skin tone, medium skin tone","hexcode":"1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD","emoji":"🧑🏼‍❤️‍💋‍🧑🏽","text":"","type":1,"order":3052,"group":1,"subgroup":30,"version":13.1,"tone":[2,3]},{"label":"kiss: person, person, medium-light skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE","emoji":"🧑🏼‍❤️‍💋‍🧑🏾","text":"","type":1,"order":3054,"group":1,"subgroup":30,"version":13.1,"tone":[2,4]},{"label":"kiss: person, person, medium-light skin tone, dark skin tone","hexcode":"1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF","emoji":"🧑🏼‍❤️‍💋‍🧑🏿","text":"","type":1,"order":3056,"group":1,"subgroup":30,"version":13.1,"tone":[2,5]},{"label":"kiss: person, person, medium skin tone, light skin tone","hexcode":"1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB","emoji":"🧑🏽‍❤️‍💋‍🧑🏻","text":"","type":1,"order":3058,"group":1,"subgroup":30,"version":13.1,"tone":[3,1]},{"label":"kiss: person, person, medium skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC","emoji":"🧑🏽‍❤️‍💋‍🧑🏼","text":"","type":1,"order":3060,"group":1,"subgroup":30,"version":13.1,"tone":[3,2]},{"label":"kiss: person, person, medium skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE","emoji":"🧑🏽‍❤️‍💋‍🧑🏾","text":"","type":1,"order":3062,"group":1,"subgroup":30,"version":13.1,"tone":[3,4]},{"label":"kiss: person, person, medium skin tone, dark skin tone","hexcode":"1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF","emoji":"🧑🏽‍❤️‍💋‍🧑🏿","text":"","type":1,"order":3064,"group":1,"subgroup":30,"version":13.1,"tone":[3,5]},{"label":"kiss: person, person, medium-dark skin tone, light skin tone","hexcode":"1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB","emoji":"🧑🏾‍❤️‍💋‍🧑🏻","text":"","type":1,"order":3066,"group":1,"subgroup":30,"version":13.1,"tone":[4,1]},{"label":"kiss: person, person, medium-dark skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC","emoji":"🧑🏾‍❤️‍💋‍🧑🏼","text":"","type":1,"order":3068,"group":1,"subgroup":30,"version":13.1,"tone":[4,2]},{"label":"kiss: person, person, medium-dark skin tone, medium skin tone","hexcode":"1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD","emoji":"🧑🏾‍❤️‍💋‍🧑🏽","text":"","type":1,"order":3070,"group":1,"subgroup":30,"version":13.1,"tone":[4,3]},{"label":"kiss: person, person, medium-dark skin tone, dark skin tone","hexcode":"1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF","emoji":"🧑🏾‍❤️‍💋‍🧑🏿","text":"","type":1,"order":3072,"group":1,"subgroup":30,"version":13.1,"tone":[4,5]},{"label":"kiss: person, person, dark skin tone, light skin tone","hexcode":"1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB","emoji":"🧑🏿‍❤️‍💋‍🧑🏻","text":"","type":1,"order":3074,"group":1,"subgroup":30,"version":13.1,"tone":[5,1]},{"label":"kiss: person, person, dark skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC","emoji":"🧑🏿‍❤️‍💋‍🧑🏼","text":"","type":1,"order":3076,"group":1,"subgroup":30,"version":13.1,"tone":[5,2]},{"label":"kiss: person, person, dark skin tone, medium skin tone","hexcode":"1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD","emoji":"🧑🏿‍❤️‍💋‍🧑🏽","text":"","type":1,"order":3078,"group":1,"subgroup":30,"version":13.1,"tone":[5,3]},{"label":"kiss: person, person, dark skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE","emoji":"🧑🏿‍❤️‍💋‍🧑🏾","text":"","type":1,"order":3080,"group":1,"subgroup":30,"version":13.1,"tone":[5,4]}]},{"label":"kiss: woman, man","hexcode":"1F469-200D-2764-FE0F-200D-1F48B-200D-1F468","tags":["anniversary","babe","bae","couple","date","dating","heart","kiss","love","man","mwah","person","romance","together","woman","xoxo"],"emoji":"👩‍❤️‍💋‍👨","text":"","type":1,"order":3082,"group":1,"subgroup":30,"version":2,"skins":[{"label":"kiss: woman, man, light skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👩🏻‍❤️‍💋‍👨🏻","text":"","type":1,"order":3084,"group":1,"subgroup":30,"version":13.1,"tone":1},{"label":"kiss: woman, man, light skin tone, medium-light skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👩🏻‍❤️‍💋‍👨🏼","text":"","type":1,"order":3086,"group":1,"subgroup":30,"version":13.1,"tone":[1,2]},{"label":"kiss: woman, man, light skin tone, medium skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👩🏻‍❤️‍💋‍👨🏽","text":"","type":1,"order":3088,"group":1,"subgroup":30,"version":13.1,"tone":[1,3]},{"label":"kiss: woman, man, light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👩🏻‍❤️‍💋‍👨🏾","text":"","type":1,"order":3090,"group":1,"subgroup":30,"version":13.1,"tone":[1,4]},{"label":"kiss: woman, man, light skin tone, dark skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👩🏻‍❤️‍💋‍👨🏿","text":"","type":1,"order":3092,"group":1,"subgroup":30,"version":13.1,"tone":[1,5]},{"label":"kiss: woman, man, medium-light skin tone, light skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👩🏼‍❤️‍💋‍👨🏻","text":"","type":1,"order":3094,"group":1,"subgroup":30,"version":13.1,"tone":[2,1]},{"label":"kiss: woman, man, medium-light skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👩🏼‍❤️‍💋‍👨🏼","text":"","type":1,"order":3096,"group":1,"subgroup":30,"version":13.1,"tone":2},{"label":"kiss: woman, man, medium-light skin tone, medium skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👩🏼‍❤️‍💋‍👨🏽","text":"","type":1,"order":3098,"group":1,"subgroup":30,"version":13.1,"tone":[2,3]},{"label":"kiss: woman, man, medium-light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👩🏼‍❤️‍💋‍👨🏾","text":"","type":1,"order":3100,"group":1,"subgroup":30,"version":13.1,"tone":[2,4]},{"label":"kiss: woman, man, medium-light skin tone, dark skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👩🏼‍❤️‍💋‍👨🏿","text":"","type":1,"order":3102,"group":1,"subgroup":30,"version":13.1,"tone":[2,5]},{"label":"kiss: woman, man, medium skin tone, light skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👩🏽‍❤️‍💋‍👨🏻","text":"","type":1,"order":3104,"group":1,"subgroup":30,"version":13.1,"tone":[3,1]},{"label":"kiss: woman, man, medium skin tone, medium-light skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👩🏽‍❤️‍💋‍👨🏼","text":"","type":1,"order":3106,"group":1,"subgroup":30,"version":13.1,"tone":[3,2]},{"label":"kiss: woman, man, medium skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👩🏽‍❤️‍💋‍👨🏽","text":"","type":1,"order":3108,"group":1,"subgroup":30,"version":13.1,"tone":3},{"label":"kiss: woman, man, medium skin tone, medium-dark skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👩🏽‍❤️‍💋‍👨🏾","text":"","type":1,"order":3110,"group":1,"subgroup":30,"version":13.1,"tone":[3,4]},{"label":"kiss: woman, man, medium skin tone, dark skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👩🏽‍❤️‍💋‍👨🏿","text":"","type":1,"order":3112,"group":1,"subgroup":30,"version":13.1,"tone":[3,5]},{"label":"kiss: woman, man, medium-dark skin tone, light skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👩🏾‍❤️‍💋‍👨🏻","text":"","type":1,"order":3114,"group":1,"subgroup":30,"version":13.1,"tone":[4,1]},{"label":"kiss: woman, man, medium-dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👩🏾‍❤️‍💋‍👨🏼","text":"","type":1,"order":3116,"group":1,"subgroup":30,"version":13.1,"tone":[4,2]},{"label":"kiss: woman, man, medium-dark skin tone, medium skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👩🏾‍❤️‍💋‍👨🏽","text":"","type":1,"order":3118,"group":1,"subgroup":30,"version":13.1,"tone":[4,3]},{"label":"kiss: woman, man, medium-dark skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👩🏾‍❤️‍💋‍👨🏾","text":"","type":1,"order":3120,"group":1,"subgroup":30,"version":13.1,"tone":4},{"label":"kiss: woman, man, medium-dark skin tone, dark skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👩🏾‍❤️‍💋‍👨🏿","text":"","type":1,"order":3122,"group":1,"subgroup":30,"version":13.1,"tone":[4,5]},{"label":"kiss: woman, man, dark skin tone, light skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👩🏿‍❤️‍💋‍👨🏻","text":"","type":1,"order":3124,"group":1,"subgroup":30,"version":13.1,"tone":[5,1]},{"label":"kiss: woman, man, dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👩🏿‍❤️‍💋‍👨🏼","text":"","type":1,"order":3126,"group":1,"subgroup":30,"version":13.1,"tone":[5,2]},{"label":"kiss: woman, man, dark skin tone, medium skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👩🏿‍❤️‍💋‍👨🏽","text":"","type":1,"order":3128,"group":1,"subgroup":30,"version":13.1,"tone":[5,3]},{"label":"kiss: woman, man, dark skin tone, medium-dark skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👩🏿‍❤️‍💋‍👨🏾","text":"","type":1,"order":3130,"group":1,"subgroup":30,"version":13.1,"tone":[5,4]},{"label":"kiss: woman, man, dark skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👩🏿‍❤️‍💋‍👨🏿","text":"","type":1,"order":3132,"group":1,"subgroup":30,"version":13.1,"tone":5}]},{"label":"kiss: man, man","hexcode":"1F468-200D-2764-FE0F-200D-1F48B-200D-1F468","tags":["anniversary","babe","bae","couple","date","dating","heart","kiss","love","man","mwah","person","romance","together","xoxo"],"emoji":"👨‍❤️‍💋‍👨","text":"","type":1,"order":3134,"group":1,"subgroup":30,"version":2,"skins":[{"label":"kiss: man, man, light skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👨🏻‍❤️‍💋‍👨🏻","text":"","type":1,"order":3136,"group":1,"subgroup":30,"version":13.1,"tone":1},{"label":"kiss: man, man, light skin tone, medium-light skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👨🏻‍❤️‍💋‍👨🏼","text":"","type":1,"order":3138,"group":1,"subgroup":30,"version":13.1,"tone":[1,2]},{"label":"kiss: man, man, light skin tone, medium skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👨🏻‍❤️‍💋‍👨🏽","text":"","type":1,"order":3140,"group":1,"subgroup":30,"version":13.1,"tone":[1,3]},{"label":"kiss: man, man, light skin tone, medium-dark skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👨🏻‍❤️‍💋‍👨🏾","text":"","type":1,"order":3142,"group":1,"subgroup":30,"version":13.1,"tone":[1,4]},{"label":"kiss: man, man, light skin tone, dark skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👨🏻‍❤️‍💋‍👨🏿","text":"","type":1,"order":3144,"group":1,"subgroup":30,"version":13.1,"tone":[1,5]},{"label":"kiss: man, man, medium-light skin tone, light skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👨🏼‍❤️‍💋‍👨🏻","text":"","type":1,"order":3146,"group":1,"subgroup":30,"version":13.1,"tone":[2,1]},{"label":"kiss: man, man, medium-light skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👨🏼‍❤️‍💋‍👨🏼","text":"","type":1,"order":3148,"group":1,"subgroup":30,"version":13.1,"tone":2},{"label":"kiss: man, man, medium-light skin tone, medium skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👨🏼‍❤️‍💋‍👨🏽","text":"","type":1,"order":3150,"group":1,"subgroup":30,"version":13.1,"tone":[2,3]},{"label":"kiss: man, man, medium-light skin tone, medium-dark skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👨🏼‍❤️‍💋‍👨🏾","text":"","type":1,"order":3152,"group":1,"subgroup":30,"version":13.1,"tone":[2,4]},{"label":"kiss: man, man, medium-light skin tone, dark skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👨🏼‍❤️‍💋‍👨🏿","text":"","type":1,"order":3154,"group":1,"subgroup":30,"version":13.1,"tone":[2,5]},{"label":"kiss: man, man, medium skin tone, light skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👨🏽‍❤️‍💋‍👨🏻","text":"","type":1,"order":3156,"group":1,"subgroup":30,"version":13.1,"tone":[3,1]},{"label":"kiss: man, man, medium skin tone, medium-light skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👨🏽‍❤️‍💋‍👨🏼","text":"","type":1,"order":3158,"group":1,"subgroup":30,"version":13.1,"tone":[3,2]},{"label":"kiss: man, man, medium skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👨🏽‍❤️‍💋‍👨🏽","text":"","type":1,"order":3160,"group":1,"subgroup":30,"version":13.1,"tone":3},{"label":"kiss: man, man, medium skin tone, medium-dark skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👨🏽‍❤️‍💋‍👨🏾","text":"","type":1,"order":3162,"group":1,"subgroup":30,"version":13.1,"tone":[3,4]},{"label":"kiss: man, man, medium skin tone, dark skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👨🏽‍❤️‍💋‍👨🏿","text":"","type":1,"order":3164,"group":1,"subgroup":30,"version":13.1,"tone":[3,5]},{"label":"kiss: man, man, medium-dark skin tone, light skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👨🏾‍❤️‍💋‍👨🏻","text":"","type":1,"order":3166,"group":1,"subgroup":30,"version":13.1,"tone":[4,1]},{"label":"kiss: man, man, medium-dark skin tone, medium-light skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👨🏾‍❤️‍💋‍👨🏼","text":"","type":1,"order":3168,"group":1,"subgroup":30,"version":13.1,"tone":[4,2]},{"label":"kiss: man, man, medium-dark skin tone, medium skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👨🏾‍❤️‍💋‍👨🏽","text":"","type":1,"order":3170,"group":1,"subgroup":30,"version":13.1,"tone":[4,3]},{"label":"kiss: man, man, medium-dark skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👨🏾‍❤️‍💋‍👨🏾","text":"","type":1,"order":3172,"group":1,"subgroup":30,"version":13.1,"tone":4},{"label":"kiss: man, man, medium-dark skin tone, dark skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👨🏾‍❤️‍💋‍👨🏿","text":"","type":1,"order":3174,"group":1,"subgroup":30,"version":13.1,"tone":[4,5]},{"label":"kiss: man, man, dark skin tone, light skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB","emoji":"👨🏿‍❤️‍💋‍👨🏻","text":"","type":1,"order":3176,"group":1,"subgroup":30,"version":13.1,"tone":[5,1]},{"label":"kiss: man, man, dark skin tone, medium-light skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC","emoji":"👨🏿‍❤️‍💋‍👨🏼","text":"","type":1,"order":3178,"group":1,"subgroup":30,"version":13.1,"tone":[5,2]},{"label":"kiss: man, man, dark skin tone, medium skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD","emoji":"👨🏿‍❤️‍💋‍👨🏽","text":"","type":1,"order":3180,"group":1,"subgroup":30,"version":13.1,"tone":[5,3]},{"label":"kiss: man, man, dark skin tone, medium-dark skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE","emoji":"👨🏿‍❤️‍💋‍👨🏾","text":"","type":1,"order":3182,"group":1,"subgroup":30,"version":13.1,"tone":[5,4]},{"label":"kiss: man, man, dark skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF","emoji":"👨🏿‍❤️‍💋‍👨🏿","text":"","type":1,"order":3184,"group":1,"subgroup":30,"version":13.1,"tone":5}]},{"label":"kiss: woman, woman","hexcode":"1F469-200D-2764-FE0F-200D-1F48B-200D-1F469","tags":["anniversary","babe","bae","couple","date","dating","heart","kiss","love","mwah","person","romance","together","woman","xoxo"],"emoji":"👩‍❤️‍💋‍👩","text":"","type":1,"order":3186,"group":1,"subgroup":30,"version":2,"skins":[{"label":"kiss: woman, woman, light skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB","emoji":"👩🏻‍❤️‍💋‍👩🏻","text":"","type":1,"order":3188,"group":1,"subgroup":30,"version":13.1,"tone":1},{"label":"kiss: woman, woman, light skin tone, medium-light skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC","emoji":"👩🏻‍❤️‍💋‍👩🏼","text":"","type":1,"order":3190,"group":1,"subgroup":30,"version":13.1,"tone":[1,2]},{"label":"kiss: woman, woman, light skin tone, medium skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD","emoji":"👩🏻‍❤️‍💋‍👩🏽","text":"","type":1,"order":3192,"group":1,"subgroup":30,"version":13.1,"tone":[1,3]},{"label":"kiss: woman, woman, light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE","emoji":"👩🏻‍❤️‍💋‍👩🏾","text":"","type":1,"order":3194,"group":1,"subgroup":30,"version":13.1,"tone":[1,4]},{"label":"kiss: woman, woman, light skin tone, dark skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF","emoji":"👩🏻‍❤️‍💋‍👩🏿","text":"","type":1,"order":3196,"group":1,"subgroup":30,"version":13.1,"tone":[1,5]},{"label":"kiss: woman, woman, medium-light skin tone, light skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB","emoji":"👩🏼‍❤️‍💋‍👩🏻","text":"","type":1,"order":3198,"group":1,"subgroup":30,"version":13.1,"tone":[2,1]},{"label":"kiss: woman, woman, medium-light skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC","emoji":"👩🏼‍❤️‍💋‍👩🏼","text":"","type":1,"order":3200,"group":1,"subgroup":30,"version":13.1,"tone":2},{"label":"kiss: woman, woman, medium-light skin tone, medium skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD","emoji":"👩🏼‍❤️‍💋‍👩🏽","text":"","type":1,"order":3202,"group":1,"subgroup":30,"version":13.1,"tone":[2,3]},{"label":"kiss: woman, woman, medium-light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE","emoji":"👩🏼‍❤️‍💋‍👩🏾","text":"","type":1,"order":3204,"group":1,"subgroup":30,"version":13.1,"tone":[2,4]},{"label":"kiss: woman, woman, medium-light skin tone, dark skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF","emoji":"👩🏼‍❤️‍💋‍👩🏿","text":"","type":1,"order":3206,"group":1,"subgroup":30,"version":13.1,"tone":[2,5]},{"label":"kiss: woman, woman, medium skin tone, light skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB","emoji":"👩🏽‍❤️‍💋‍👩🏻","text":"","type":1,"order":3208,"group":1,"subgroup":30,"version":13.1,"tone":[3,1]},{"label":"kiss: woman, woman, medium skin tone, medium-light skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC","emoji":"👩🏽‍❤️‍💋‍👩🏼","text":"","type":1,"order":3210,"group":1,"subgroup":30,"version":13.1,"tone":[3,2]},{"label":"kiss: woman, woman, medium skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD","emoji":"👩🏽‍❤️‍💋‍👩🏽","text":"","type":1,"order":3212,"group":1,"subgroup":30,"version":13.1,"tone":3},{"label":"kiss: woman, woman, medium skin tone, medium-dark skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE","emoji":"👩🏽‍❤️‍💋‍👩🏾","text":"","type":1,"order":3214,"group":1,"subgroup":30,"version":13.1,"tone":[3,4]},{"label":"kiss: woman, woman, medium skin tone, dark skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF","emoji":"👩🏽‍❤️‍💋‍👩🏿","text":"","type":1,"order":3216,"group":1,"subgroup":30,"version":13.1,"tone":[3,5]},{"label":"kiss: woman, woman, medium-dark skin tone, light skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB","emoji":"👩🏾‍❤️‍💋‍👩🏻","text":"","type":1,"order":3218,"group":1,"subgroup":30,"version":13.1,"tone":[4,1]},{"label":"kiss: woman, woman, medium-dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC","emoji":"👩🏾‍❤️‍💋‍👩🏼","text":"","type":1,"order":3220,"group":1,"subgroup":30,"version":13.1,"tone":[4,2]},{"label":"kiss: woman, woman, medium-dark skin tone, medium skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD","emoji":"👩🏾‍❤️‍💋‍👩🏽","text":"","type":1,"order":3222,"group":1,"subgroup":30,"version":13.1,"tone":[4,3]},{"label":"kiss: woman, woman, medium-dark skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE","emoji":"👩🏾‍❤️‍💋‍👩🏾","text":"","type":1,"order":3224,"group":1,"subgroup":30,"version":13.1,"tone":4},{"label":"kiss: woman, woman, medium-dark skin tone, dark skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF","emoji":"👩🏾‍❤️‍💋‍👩🏿","text":"","type":1,"order":3226,"group":1,"subgroup":30,"version":13.1,"tone":[4,5]},{"label":"kiss: woman, woman, dark skin tone, light skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB","emoji":"👩🏿‍❤️‍💋‍👩🏻","text":"","type":1,"order":3228,"group":1,"subgroup":30,"version":13.1,"tone":[5,1]},{"label":"kiss: woman, woman, dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC","emoji":"👩🏿‍❤️‍💋‍👩🏼","text":"","type":1,"order":3230,"group":1,"subgroup":30,"version":13.1,"tone":[5,2]},{"label":"kiss: woman, woman, dark skin tone, medium skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD","emoji":"👩🏿‍❤️‍💋‍👩🏽","text":"","type":1,"order":3232,"group":1,"subgroup":30,"version":13.1,"tone":[5,3]},{"label":"kiss: woman, woman, dark skin tone, medium-dark skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE","emoji":"👩🏿‍❤️‍💋‍👩🏾","text":"","type":1,"order":3234,"group":1,"subgroup":30,"version":13.1,"tone":[5,4]},{"label":"kiss: woman, woman, dark skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF","emoji":"👩🏿‍❤️‍💋‍👩🏿","text":"","type":1,"order":3236,"group":1,"subgroup":30,"version":13.1,"tone":5}]},{"label":"couple with heart","hexcode":"1F491","tags":["anniversary","babe","bae","couple","dating","heart","kiss","love","person","relationship","romance","together","you"],"emoji":"💑","text":"","type":1,"order":3238,"group":1,"subgroup":30,"version":0.6,"skins":[{"label":"couple with heart: light skin tone","hexcode":"1F491-1F3FB","emoji":"💑🏻","text":"","type":1,"order":3239,"group":1,"subgroup":30,"version":13.1,"tone":1},{"label":"couple with heart: medium-light skin tone","hexcode":"1F491-1F3FC","emoji":"💑🏼","text":"","type":1,"order":3240,"group":1,"subgroup":30,"version":13.1,"tone":2},{"label":"couple with heart: medium skin tone","hexcode":"1F491-1F3FD","emoji":"💑🏽","text":"","type":1,"order":3241,"group":1,"subgroup":30,"version":13.1,"tone":3},{"label":"couple with heart: medium-dark skin tone","hexcode":"1F491-1F3FE","emoji":"💑🏾","text":"","type":1,"order":3242,"group":1,"subgroup":30,"version":13.1,"tone":4},{"label":"couple with heart: dark skin tone","hexcode":"1F491-1F3FF","emoji":"💑🏿","text":"","type":1,"order":3243,"group":1,"subgroup":30,"version":13.1,"tone":5},{"label":"couple with heart: person, person, light skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FC","emoji":"🧑🏻‍❤️‍🧑🏼","text":"","type":1,"order":3244,"group":1,"subgroup":30,"version":13.1,"tone":[1,2]},{"label":"couple with heart: person, person, light skin tone, medium skin tone","hexcode":"1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FD","emoji":"🧑🏻‍❤️‍🧑🏽","text":"","type":1,"order":3246,"group":1,"subgroup":30,"version":13.1,"tone":[1,3]},{"label":"couple with heart: person, person, light skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FE","emoji":"🧑🏻‍❤️‍🧑🏾","text":"","type":1,"order":3248,"group":1,"subgroup":30,"version":13.1,"tone":[1,4]},{"label":"couple with heart: person, person, light skin tone, dark skin tone","hexcode":"1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FF","emoji":"🧑🏻‍❤️‍🧑🏿","text":"","type":1,"order":3250,"group":1,"subgroup":30,"version":13.1,"tone":[1,5]},{"label":"couple with heart: person, person, medium-light skin tone, light skin tone","hexcode":"1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FB","emoji":"🧑🏼‍❤️‍🧑🏻","text":"","type":1,"order":3252,"group":1,"subgroup":30,"version":13.1,"tone":[2,1]},{"label":"couple with heart: person, person, medium-light skin tone, medium skin tone","hexcode":"1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FD","emoji":"🧑🏼‍❤️‍🧑🏽","text":"","type":1,"order":3254,"group":1,"subgroup":30,"version":13.1,"tone":[2,3]},{"label":"couple with heart: person, person, medium-light skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FE","emoji":"🧑🏼‍❤️‍🧑🏾","text":"","type":1,"order":3256,"group":1,"subgroup":30,"version":13.1,"tone":[2,4]},{"label":"couple with heart: person, person, medium-light skin tone, dark skin tone","hexcode":"1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FF","emoji":"🧑🏼‍❤️‍🧑🏿","text":"","type":1,"order":3258,"group":1,"subgroup":30,"version":13.1,"tone":[2,5]},{"label":"couple with heart: person, person, medium skin tone, light skin tone","hexcode":"1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FB","emoji":"🧑🏽‍❤️‍🧑🏻","text":"","type":1,"order":3260,"group":1,"subgroup":30,"version":13.1,"tone":[3,1]},{"label":"couple with heart: person, person, medium skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FC","emoji":"🧑🏽‍❤️‍🧑🏼","text":"","type":1,"order":3262,"group":1,"subgroup":30,"version":13.1,"tone":[3,2]},{"label":"couple with heart: person, person, medium skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FE","emoji":"🧑🏽‍❤️‍🧑🏾","text":"","type":1,"order":3264,"group":1,"subgroup":30,"version":13.1,"tone":[3,4]},{"label":"couple with heart: person, person, medium skin tone, dark skin tone","hexcode":"1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FF","emoji":"🧑🏽‍❤️‍🧑🏿","text":"","type":1,"order":3266,"group":1,"subgroup":30,"version":13.1,"tone":[3,5]},{"label":"couple with heart: person, person, medium-dark skin tone, light skin tone","hexcode":"1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FB","emoji":"🧑🏾‍❤️‍🧑🏻","text":"","type":1,"order":3268,"group":1,"subgroup":30,"version":13.1,"tone":[4,1]},{"label":"couple with heart: person, person, medium-dark skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FC","emoji":"🧑🏾‍❤️‍🧑🏼","text":"","type":1,"order":3270,"group":1,"subgroup":30,"version":13.1,"tone":[4,2]},{"label":"couple with heart: person, person, medium-dark skin tone, medium skin tone","hexcode":"1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FD","emoji":"🧑🏾‍❤️‍🧑🏽","text":"","type":1,"order":3272,"group":1,"subgroup":30,"version":13.1,"tone":[4,3]},{"label":"couple with heart: person, person, medium-dark skin tone, dark skin tone","hexcode":"1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FF","emoji":"🧑🏾‍❤️‍🧑🏿","text":"","type":1,"order":3274,"group":1,"subgroup":30,"version":13.1,"tone":[4,5]},{"label":"couple with heart: person, person, dark skin tone, light skin tone","hexcode":"1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FB","emoji":"🧑🏿‍❤️‍🧑🏻","text":"","type":1,"order":3276,"group":1,"subgroup":30,"version":13.1,"tone":[5,1]},{"label":"couple with heart: person, person, dark skin tone, medium-light skin tone","hexcode":"1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FC","emoji":"🧑🏿‍❤️‍🧑🏼","text":"","type":1,"order":3278,"group":1,"subgroup":30,"version":13.1,"tone":[5,2]},{"label":"couple with heart: person, person, dark skin tone, medium skin tone","hexcode":"1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FD","emoji":"🧑🏿‍❤️‍🧑🏽","text":"","type":1,"order":3280,"group":1,"subgroup":30,"version":13.1,"tone":[5,3]},{"label":"couple with heart: person, person, dark skin tone, medium-dark skin tone","hexcode":"1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FE","emoji":"🧑🏿‍❤️‍🧑🏾","text":"","type":1,"order":3282,"group":1,"subgroup":30,"version":13.1,"tone":[5,4]}]},{"label":"couple with heart: woman, man","hexcode":"1F469-200D-2764-FE0F-200D-1F468","tags":["anniversary","babe","bae","couple","dating","heart","kiss","love","man","person","relationship","romance","together","woman","you"],"emoji":"👩‍❤️‍👨","text":"","type":1,"order":3284,"group":1,"subgroup":30,"version":2,"skins":[{"label":"couple with heart: woman, man, light skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👩🏻‍❤️‍👨🏻","text":"","type":1,"order":3286,"group":1,"subgroup":30,"version":13.1,"tone":1},{"label":"couple with heart: woman, man, light skin tone, medium-light skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👩🏻‍❤️‍👨🏼","text":"","type":1,"order":3288,"group":1,"subgroup":30,"version":13.1,"tone":[1,2]},{"label":"couple with heart: woman, man, light skin tone, medium skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👩🏻‍❤️‍👨🏽","text":"","type":1,"order":3290,"group":1,"subgroup":30,"version":13.1,"tone":[1,3]},{"label":"couple with heart: woman, man, light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👩🏻‍❤️‍👨🏾","text":"","type":1,"order":3292,"group":1,"subgroup":30,"version":13.1,"tone":[1,4]},{"label":"couple with heart: woman, man, light skin tone, dark skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👩🏻‍❤️‍👨🏿","text":"","type":1,"order":3294,"group":1,"subgroup":30,"version":13.1,"tone":[1,5]},{"label":"couple with heart: woman, man, medium-light skin tone, light skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👩🏼‍❤️‍👨🏻","text":"","type":1,"order":3296,"group":1,"subgroup":30,"version":13.1,"tone":[2,1]},{"label":"couple with heart: woman, man, medium-light skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👩🏼‍❤️‍👨🏼","text":"","type":1,"order":3298,"group":1,"subgroup":30,"version":13.1,"tone":2},{"label":"couple with heart: woman, man, medium-light skin tone, medium skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👩🏼‍❤️‍👨🏽","text":"","type":1,"order":3300,"group":1,"subgroup":30,"version":13.1,"tone":[2,3]},{"label":"couple with heart: woman, man, medium-light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👩🏼‍❤️‍👨🏾","text":"","type":1,"order":3302,"group":1,"subgroup":30,"version":13.1,"tone":[2,4]},{"label":"couple with heart: woman, man, medium-light skin tone, dark skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👩🏼‍❤️‍👨🏿","text":"","type":1,"order":3304,"group":1,"subgroup":30,"version":13.1,"tone":[2,5]},{"label":"couple with heart: woman, man, medium skin tone, light skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👩🏽‍❤️‍👨🏻","text":"","type":1,"order":3306,"group":1,"subgroup":30,"version":13.1,"tone":[3,1]},{"label":"couple with heart: woman, man, medium skin tone, medium-light skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👩🏽‍❤️‍👨🏼","text":"","type":1,"order":3308,"group":1,"subgroup":30,"version":13.1,"tone":[3,2]},{"label":"couple with heart: woman, man, medium skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👩🏽‍❤️‍👨🏽","text":"","type":1,"order":3310,"group":1,"subgroup":30,"version":13.1,"tone":3},{"label":"couple with heart: woman, man, medium skin tone, medium-dark skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👩🏽‍❤️‍👨🏾","text":"","type":1,"order":3312,"group":1,"subgroup":30,"version":13.1,"tone":[3,4]},{"label":"couple with heart: woman, man, medium skin tone, dark skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👩🏽‍❤️‍👨🏿","text":"","type":1,"order":3314,"group":1,"subgroup":30,"version":13.1,"tone":[3,5]},{"label":"couple with heart: woman, man, medium-dark skin tone, light skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👩🏾‍❤️‍👨🏻","text":"","type":1,"order":3316,"group":1,"subgroup":30,"version":13.1,"tone":[4,1]},{"label":"couple with heart: woman, man, medium-dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👩🏾‍❤️‍👨🏼","text":"","type":1,"order":3318,"group":1,"subgroup":30,"version":13.1,"tone":[4,2]},{"label":"couple with heart: woman, man, medium-dark skin tone, medium skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👩🏾‍❤️‍👨🏽","text":"","type":1,"order":3320,"group":1,"subgroup":30,"version":13.1,"tone":[4,3]},{"label":"couple with heart: woman, man, medium-dark skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👩🏾‍❤️‍👨🏾","text":"","type":1,"order":3322,"group":1,"subgroup":30,"version":13.1,"tone":4},{"label":"couple with heart: woman, man, medium-dark skin tone, dark skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👩🏾‍❤️‍👨🏿","text":"","type":1,"order":3324,"group":1,"subgroup":30,"version":13.1,"tone":[4,5]},{"label":"couple with heart: woman, man, dark skin tone, light skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👩🏿‍❤️‍👨🏻","text":"","type":1,"order":3326,"group":1,"subgroup":30,"version":13.1,"tone":[5,1]},{"label":"couple with heart: woman, man, dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👩🏿‍❤️‍👨🏼","text":"","type":1,"order":3328,"group":1,"subgroup":30,"version":13.1,"tone":[5,2]},{"label":"couple with heart: woman, man, dark skin tone, medium skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👩🏿‍❤️‍👨🏽","text":"","type":1,"order":3330,"group":1,"subgroup":30,"version":13.1,"tone":[5,3]},{"label":"couple with heart: woman, man, dark skin tone, medium-dark skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👩🏿‍❤️‍👨🏾","text":"","type":1,"order":3332,"group":1,"subgroup":30,"version":13.1,"tone":[5,4]},{"label":"couple with heart: woman, man, dark skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👩🏿‍❤️‍👨🏿","text":"","type":1,"order":3334,"group":1,"subgroup":30,"version":13.1,"tone":5}]},{"label":"couple with heart: man, man","hexcode":"1F468-200D-2764-FE0F-200D-1F468","tags":["anniversary","babe","bae","couple","dating","heart","kiss","love","man","person","relationship","romance","together","you"],"emoji":"👨‍❤️‍👨","text":"","type":1,"order":3336,"group":1,"subgroup":30,"version":2,"skins":[{"label":"couple with heart: man, man, light skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👨🏻‍❤️‍👨🏻","text":"","type":1,"order":3338,"group":1,"subgroup":30,"version":13.1,"tone":1},{"label":"couple with heart: man, man, light skin tone, medium-light skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👨🏻‍❤️‍👨🏼","text":"","type":1,"order":3340,"group":1,"subgroup":30,"version":13.1,"tone":[1,2]},{"label":"couple with heart: man, man, light skin tone, medium skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👨🏻‍❤️‍👨🏽","text":"","type":1,"order":3342,"group":1,"subgroup":30,"version":13.1,"tone":[1,3]},{"label":"couple with heart: man, man, light skin tone, medium-dark skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👨🏻‍❤️‍👨🏾","text":"","type":1,"order":3344,"group":1,"subgroup":30,"version":13.1,"tone":[1,4]},{"label":"couple with heart: man, man, light skin tone, dark skin tone","hexcode":"1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👨🏻‍❤️‍👨🏿","text":"","type":1,"order":3346,"group":1,"subgroup":30,"version":13.1,"tone":[1,5]},{"label":"couple with heart: man, man, medium-light skin tone, light skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👨🏼‍❤️‍👨🏻","text":"","type":1,"order":3348,"group":1,"subgroup":30,"version":13.1,"tone":[2,1]},{"label":"couple with heart: man, man, medium-light skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👨🏼‍❤️‍👨🏼","text":"","type":1,"order":3350,"group":1,"subgroup":30,"version":13.1,"tone":2},{"label":"couple with heart: man, man, medium-light skin tone, medium skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👨🏼‍❤️‍👨🏽","text":"","type":1,"order":3352,"group":1,"subgroup":30,"version":13.1,"tone":[2,3]},{"label":"couple with heart: man, man, medium-light skin tone, medium-dark skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👨🏼‍❤️‍👨🏾","text":"","type":1,"order":3354,"group":1,"subgroup":30,"version":13.1,"tone":[2,4]},{"label":"couple with heart: man, man, medium-light skin tone, dark skin tone","hexcode":"1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👨🏼‍❤️‍👨🏿","text":"","type":1,"order":3356,"group":1,"subgroup":30,"version":13.1,"tone":[2,5]},{"label":"couple with heart: man, man, medium skin tone, light skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👨🏽‍❤️‍👨🏻","text":"","type":1,"order":3358,"group":1,"subgroup":30,"version":13.1,"tone":[3,1]},{"label":"couple with heart: man, man, medium skin tone, medium-light skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👨🏽‍❤️‍👨🏼","text":"","type":1,"order":3360,"group":1,"subgroup":30,"version":13.1,"tone":[3,2]},{"label":"couple with heart: man, man, medium skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👨🏽‍❤️‍👨🏽","text":"","type":1,"order":3362,"group":1,"subgroup":30,"version":13.1,"tone":3},{"label":"couple with heart: man, man, medium skin tone, medium-dark skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👨🏽‍❤️‍👨🏾","text":"","type":1,"order":3364,"group":1,"subgroup":30,"version":13.1,"tone":[3,4]},{"label":"couple with heart: man, man, medium skin tone, dark skin tone","hexcode":"1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👨🏽‍❤️‍👨🏿","text":"","type":1,"order":3366,"group":1,"subgroup":30,"version":13.1,"tone":[3,5]},{"label":"couple with heart: man, man, medium-dark skin tone, light skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👨🏾‍❤️‍👨🏻","text":"","type":1,"order":3368,"group":1,"subgroup":30,"version":13.1,"tone":[4,1]},{"label":"couple with heart: man, man, medium-dark skin tone, medium-light skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👨🏾‍❤️‍👨🏼","text":"","type":1,"order":3370,"group":1,"subgroup":30,"version":13.1,"tone":[4,2]},{"label":"couple with heart: man, man, medium-dark skin tone, medium skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👨🏾‍❤️‍👨🏽","text":"","type":1,"order":3372,"group":1,"subgroup":30,"version":13.1,"tone":[4,3]},{"label":"couple with heart: man, man, medium-dark skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👨🏾‍❤️‍👨🏾","text":"","type":1,"order":3374,"group":1,"subgroup":30,"version":13.1,"tone":4},{"label":"couple with heart: man, man, medium-dark skin tone, dark skin tone","hexcode":"1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👨🏾‍❤️‍👨🏿","text":"","type":1,"order":3376,"group":1,"subgroup":30,"version":13.1,"tone":[4,5]},{"label":"couple with heart: man, man, dark skin tone, light skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FB","emoji":"👨🏿‍❤️‍👨🏻","text":"","type":1,"order":3378,"group":1,"subgroup":30,"version":13.1,"tone":[5,1]},{"label":"couple with heart: man, man, dark skin tone, medium-light skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FC","emoji":"👨🏿‍❤️‍👨🏼","text":"","type":1,"order":3380,"group":1,"subgroup":30,"version":13.1,"tone":[5,2]},{"label":"couple with heart: man, man, dark skin tone, medium skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FD","emoji":"👨🏿‍❤️‍👨🏽","text":"","type":1,"order":3382,"group":1,"subgroup":30,"version":13.1,"tone":[5,3]},{"label":"couple with heart: man, man, dark skin tone, medium-dark skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FE","emoji":"👨🏿‍❤️‍👨🏾","text":"","type":1,"order":3384,"group":1,"subgroup":30,"version":13.1,"tone":[5,4]},{"label":"couple with heart: man, man, dark skin tone","hexcode":"1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FF","emoji":"👨🏿‍❤️‍👨🏿","text":"","type":1,"order":3386,"group":1,"subgroup":30,"version":13.1,"tone":5}]},{"label":"couple with heart: woman, woman","hexcode":"1F469-200D-2764-FE0F-200D-1F469","tags":["anniversary","babe","bae","couple","dating","heart","kiss","love","person","relationship","romance","together","woman","you"],"emoji":"👩‍❤️‍👩","text":"","type":1,"order":3388,"group":1,"subgroup":30,"version":2,"skins":[{"label":"couple with heart: woman, woman, light skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FB","emoji":"👩🏻‍❤️‍👩🏻","text":"","type":1,"order":3390,"group":1,"subgroup":30,"version":13.1,"tone":1},{"label":"couple with heart: woman, woman, light skin tone, medium-light skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FC","emoji":"👩🏻‍❤️‍👩🏼","text":"","type":1,"order":3392,"group":1,"subgroup":30,"version":13.1,"tone":[1,2]},{"label":"couple with heart: woman, woman, light skin tone, medium skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FD","emoji":"👩🏻‍❤️‍👩🏽","text":"","type":1,"order":3394,"group":1,"subgroup":30,"version":13.1,"tone":[1,3]},{"label":"couple with heart: woman, woman, light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FE","emoji":"👩🏻‍❤️‍👩🏾","text":"","type":1,"order":3396,"group":1,"subgroup":30,"version":13.1,"tone":[1,4]},{"label":"couple with heart: woman, woman, light skin tone, dark skin tone","hexcode":"1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FF","emoji":"👩🏻‍❤️‍👩🏿","text":"","type":1,"order":3398,"group":1,"subgroup":30,"version":13.1,"tone":[1,5]},{"label":"couple with heart: woman, woman, medium-light skin tone, light skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FB","emoji":"👩🏼‍❤️‍👩🏻","text":"","type":1,"order":3400,"group":1,"subgroup":30,"version":13.1,"tone":[2,1]},{"label":"couple with heart: woman, woman, medium-light skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FC","emoji":"👩🏼‍❤️‍👩🏼","text":"","type":1,"order":3402,"group":1,"subgroup":30,"version":13.1,"tone":2},{"label":"couple with heart: woman, woman, medium-light skin tone, medium skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FD","emoji":"👩🏼‍❤️‍👩🏽","text":"","type":1,"order":3404,"group":1,"subgroup":30,"version":13.1,"tone":[2,3]},{"label":"couple with heart: woman, woman, medium-light skin tone, medium-dark skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FE","emoji":"👩🏼‍❤️‍👩🏾","text":"","type":1,"order":3406,"group":1,"subgroup":30,"version":13.1,"tone":[2,4]},{"label":"couple with heart: woman, woman, medium-light skin tone, dark skin tone","hexcode":"1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FF","emoji":"👩🏼‍❤️‍👩🏿","text":"","type":1,"order":3408,"group":1,"subgroup":30,"version":13.1,"tone":[2,5]},{"label":"couple with heart: woman, woman, medium skin tone, light skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FB","emoji":"👩🏽‍❤️‍👩🏻","text":"","type":1,"order":3410,"group":1,"subgroup":30,"version":13.1,"tone":[3,1]},{"label":"couple with heart: woman, woman, medium skin tone, medium-light skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FC","emoji":"👩🏽‍❤️‍👩🏼","text":"","type":1,"order":3412,"group":1,"subgroup":30,"version":13.1,"tone":[3,2]},{"label":"couple with heart: woman, woman, medium skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FD","emoji":"👩🏽‍❤️‍👩🏽","text":"","type":1,"order":3414,"group":1,"subgroup":30,"version":13.1,"tone":3},{"label":"couple with heart: woman, woman, medium skin tone, medium-dark skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FE","emoji":"👩🏽‍❤️‍👩🏾","text":"","type":1,"order":3416,"group":1,"subgroup":30,"version":13.1,"tone":[3,4]},{"label":"couple with heart: woman, woman, medium skin tone, dark skin tone","hexcode":"1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FF","emoji":"👩🏽‍❤️‍👩🏿","text":"","type":1,"order":3418,"group":1,"subgroup":30,"version":13.1,"tone":[3,5]},{"label":"couple with heart: woman, woman, medium-dark skin tone, light skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FB","emoji":"👩🏾‍❤️‍👩🏻","text":"","type":1,"order":3420,"group":1,"subgroup":30,"version":13.1,"tone":[4,1]},{"label":"couple with heart: woman, woman, medium-dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FC","emoji":"👩🏾‍❤️‍👩🏼","text":"","type":1,"order":3422,"group":1,"subgroup":30,"version":13.1,"tone":[4,2]},{"label":"couple with heart: woman, woman, medium-dark skin tone, medium skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FD","emoji":"👩🏾‍❤️‍👩🏽","text":"","type":1,"order":3424,"group":1,"subgroup":30,"version":13.1,"tone":[4,3]},{"label":"couple with heart: woman, woman, medium-dark skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FE","emoji":"👩🏾‍❤️‍👩🏾","text":"","type":1,"order":3426,"group":1,"subgroup":30,"version":13.1,"tone":4},{"label":"couple with heart: woman, woman, medium-dark skin tone, dark skin tone","hexcode":"1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FF","emoji":"👩🏾‍❤️‍👩🏿","text":"","type":1,"order":3428,"group":1,"subgroup":30,"version":13.1,"tone":[4,5]},{"label":"couple with heart: woman, woman, dark skin tone, light skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FB","emoji":"👩🏿‍❤️‍👩🏻","text":"","type":1,"order":3430,"group":1,"subgroup":30,"version":13.1,"tone":[5,1]},{"label":"couple with heart: woman, woman, dark skin tone, medium-light skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FC","emoji":"👩🏿‍❤️‍👩🏼","text":"","type":1,"order":3432,"group":1,"subgroup":30,"version":13.1,"tone":[5,2]},{"label":"couple with heart: woman, woman, dark skin tone, medium skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FD","emoji":"👩🏿‍❤️‍👩🏽","text":"","type":1,"order":3434,"group":1,"subgroup":30,"version":13.1,"tone":[5,3]},{"label":"couple with heart: woman, woman, dark skin tone, medium-dark skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FE","emoji":"👩🏿‍❤️‍👩🏾","text":"","type":1,"order":3436,"group":1,"subgroup":30,"version":13.1,"tone":[5,4]},{"label":"couple with heart: woman, woman, dark skin tone","hexcode":"1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FF","emoji":"👩🏿‍❤️‍👩🏿","text":"","type":1,"order":3438,"group":1,"subgroup":30,"version":13.1,"tone":5}]},{"label":"family: man, woman, boy","hexcode":"1F468-200D-1F469-200D-1F466","tags":["boy","child","family","man","woman"],"emoji":"👨‍👩‍👦","text":"","type":1,"order":3440,"group":1,"subgroup":30,"version":2},{"label":"family: man, woman, girl","hexcode":"1F468-200D-1F469-200D-1F467","tags":["child","family","girl","man","woman"],"emoji":"👨‍👩‍👧","text":"","type":1,"order":3441,"group":1,"subgroup":30,"version":2},{"label":"family: man, woman, girl, boy","hexcode":"1F468-200D-1F469-200D-1F467-200D-1F466","tags":["boy","child","family","girl","man","woman"],"emoji":"👨‍👩‍👧‍👦","text":"","type":1,"order":3442,"group":1,"subgroup":30,"version":2},{"label":"family: man, woman, boy, boy","hexcode":"1F468-200D-1F469-200D-1F466-200D-1F466","tags":["boy","child","family","man","woman"],"emoji":"👨‍👩‍👦‍👦","text":"","type":1,"order":3443,"group":1,"subgroup":30,"version":2},{"label":"family: man, woman, girl, girl","hexcode":"1F468-200D-1F469-200D-1F467-200D-1F467","tags":["child","family","girl","man","woman"],"emoji":"👨‍👩‍👧‍👧","text":"","type":1,"order":3444,"group":1,"subgroup":30,"version":2},{"label":"family: man, man, boy","hexcode":"1F468-200D-1F468-200D-1F466","tags":["boy","child","family","man"],"emoji":"👨‍👨‍👦","text":"","type":1,"order":3445,"group":1,"subgroup":30,"version":2},{"label":"family: man, man, girl","hexcode":"1F468-200D-1F468-200D-1F467","tags":["child","family","girl","man"],"emoji":"👨‍👨‍👧","text":"","type":1,"order":3446,"group":1,"subgroup":30,"version":2},{"label":"family: man, man, girl, boy","hexcode":"1F468-200D-1F468-200D-1F467-200D-1F466","tags":["boy","child","family","girl","man"],"emoji":"👨‍👨‍👧‍👦","text":"","type":1,"order":3447,"group":1,"subgroup":30,"version":2},{"label":"family: man, man, boy, boy","hexcode":"1F468-200D-1F468-200D-1F466-200D-1F466","tags":["boy","child","family","man"],"emoji":"👨‍👨‍👦‍👦","text":"","type":1,"order":3448,"group":1,"subgroup":30,"version":2},{"label":"family: man, man, girl, girl","hexcode":"1F468-200D-1F468-200D-1F467-200D-1F467","tags":["child","family","girl","man"],"emoji":"👨‍👨‍👧‍👧","text":"","type":1,"order":3449,"group":1,"subgroup":30,"version":2},{"label":"family: woman, woman, boy","hexcode":"1F469-200D-1F469-200D-1F466","tags":["boy","child","family","woman"],"emoji":"👩‍👩‍👦","text":"","type":1,"order":3450,"group":1,"subgroup":30,"version":2},{"label":"family: woman, woman, girl","hexcode":"1F469-200D-1F469-200D-1F467","tags":["child","family","girl","woman"],"emoji":"👩‍👩‍👧","text":"","type":1,"order":3451,"group":1,"subgroup":30,"version":2},{"label":"family: woman, woman, girl, boy","hexcode":"1F469-200D-1F469-200D-1F467-200D-1F466","tags":["boy","child","family","girl","woman"],"emoji":"👩‍👩‍👧‍👦","text":"","type":1,"order":3452,"group":1,"subgroup":30,"version":2},{"label":"family: woman, woman, boy, boy","hexcode":"1F469-200D-1F469-200D-1F466-200D-1F466","tags":["boy","child","family","woman"],"emoji":"👩‍👩‍👦‍👦","text":"","type":1,"order":3453,"group":1,"subgroup":30,"version":2},{"label":"family: woman, woman, girl, girl","hexcode":"1F469-200D-1F469-200D-1F467-200D-1F467","tags":["child","family","girl","woman"],"emoji":"👩‍👩‍👧‍👧","text":"","type":1,"order":3454,"group":1,"subgroup":30,"version":2},{"label":"family: man, boy","hexcode":"1F468-200D-1F466","tags":["boy","child","family","man"],"emoji":"👨‍👦","text":"","type":1,"order":3455,"group":1,"subgroup":30,"version":4},{"label":"family: man, boy, boy","hexcode":"1F468-200D-1F466-200D-1F466","tags":["boy","child","family","man"],"emoji":"👨‍👦‍👦","text":"","type":1,"order":3456,"group":1,"subgroup":30,"version":4},{"label":"family: man, girl","hexcode":"1F468-200D-1F467","tags":["child","family","girl","man"],"emoji":"👨‍👧","text":"","type":1,"order":3457,"group":1,"subgroup":30,"version":4},{"label":"family: man, girl, boy","hexcode":"1F468-200D-1F467-200D-1F466","tags":["boy","child","family","girl","man"],"emoji":"👨‍👧‍👦","text":"","type":1,"order":3458,"group":1,"subgroup":30,"version":4},{"label":"family: man, girl, girl","hexcode":"1F468-200D-1F467-200D-1F467","tags":["child","family","girl","man"],"emoji":"👨‍👧‍👧","text":"","type":1,"order":3459,"group":1,"subgroup":30,"version":4},{"label":"family: woman, boy","hexcode":"1F469-200D-1F466","tags":["boy","child","family","woman"],"emoji":"👩‍👦","text":"","type":1,"order":3460,"group":1,"subgroup":30,"version":4},{"label":"family: woman, boy, boy","hexcode":"1F469-200D-1F466-200D-1F466","tags":["boy","child","family","woman"],"emoji":"👩‍👦‍👦","text":"","type":1,"order":3461,"group":1,"subgroup":30,"version":4},{"label":"family: woman, girl","hexcode":"1F469-200D-1F467","tags":["child","family","girl","woman"],"emoji":"👩‍👧","text":"","type":1,"order":3462,"group":1,"subgroup":30,"version":4},{"label":"family: woman, girl, boy","hexcode":"1F469-200D-1F467-200D-1F466","tags":["boy","child","family","girl","woman"],"emoji":"👩‍👧‍👦","text":"","type":1,"order":3463,"group":1,"subgroup":30,"version":4},{"label":"family: woman, girl, girl","hexcode":"1F469-200D-1F467-200D-1F467","tags":["child","family","girl","woman"],"emoji":"👩‍👧‍👧","text":"","type":1,"order":3464,"group":1,"subgroup":30,"version":4},{"label":"speaking head","hexcode":"1F5E3","tags":["face","head","silhouette","speak","speaking"],"emoji":"🗣️","text":"🗣︎","type":0,"order":3466,"group":1,"subgroup":31,"version":0.7},{"label":"bust in silhouette","hexcode":"1F464","tags":["bust","mysterious","shadow","silhouette"],"emoji":"👤","text":"","type":1,"order":3467,"group":1,"subgroup":31,"version":0.6},{"label":"busts in silhouette","hexcode":"1F465","tags":["bff","bust","busts","everyone","friend","friends","people","silhouette"],"emoji":"👥","text":"","type":1,"order":3468,"group":1,"subgroup":31,"version":1},{"label":"people hugging","hexcode":"1FAC2","tags":["comfort","embrace","farewell","friendship","goodbye","hello","hug","hugging","love","people","thanks"],"emoji":"🫂","text":"","type":1,"order":3469,"group":1,"subgroup":31,"version":13},{"label":"family","hexcode":"1F46A","tags":["child"],"emoji":"👪️","text":"👪︎","type":1,"order":3470,"group":1,"subgroup":31,"version":0.6},{"label":"family: adult, adult, child","hexcode":"1F9D1-200D-1F9D1-200D-1F9D2","tags":["adult","child","family"],"emoji":"🧑‍🧑‍🧒","text":"","type":1,"order":3471,"group":1,"subgroup":31,"version":15.1},{"label":"family: adult, adult, child, child","hexcode":"1F9D1-200D-1F9D1-200D-1F9D2-200D-1F9D2","tags":["adult","child","family"],"emoji":"🧑‍🧑‍🧒‍🧒","text":"","type":1,"order":3472,"group":1,"subgroup":31,"version":15.1},{"label":"family: adult, child","hexcode":"1F9D1-200D-1F9D2","tags":["adult","child","family"],"emoji":"🧑‍🧒","text":"","type":1,"order":3473,"group":1,"subgroup":31,"version":15.1},{"label":"family: adult, child, child","hexcode":"1F9D1-200D-1F9D2-200D-1F9D2","tags":["adult","child","family"],"emoji":"🧑‍🧒‍🧒","text":"","type":1,"order":3474,"group":1,"subgroup":31,"version":15.1},{"label":"footprints","hexcode":"1F463","tags":["barefoot","clothing","footprint","omw","print","walk"],"emoji":"👣","text":"","type":1,"order":3475,"group":1,"subgroup":31,"version":0.6},{"label":"fingerprint","hexcode":"1FAC6","tags":["clue","crime","detective","forensics","identity","mystery","print","safety","trace"],"emoji":"🫆","text":"","type":1,"order":3476,"group":1,"subgroup":31,"version":16},{"label":"light skin tone","hexcode":"1F3FB","tags":["1–2","light","skin","tone","type"],"emoji":"🏻","text":"","type":1,"order":3477,"group":2,"subgroup":32,"version":1},{"label":"medium-light skin tone","hexcode":"1F3FC","tags":["3","medium-light","skin","tone","type"],"emoji":"🏼","text":"","type":1,"order":3478,"group":2,"subgroup":32,"version":1},{"label":"medium skin tone","hexcode":"1F3FD","tags":["4","medium","skin","tone","type"],"emoji":"🏽","text":"","type":1,"order":3479,"group":2,"subgroup":32,"version":1},{"label":"medium-dark skin tone","hexcode":"1F3FE","tags":["5","medium-dark","skin","tone","type"],"emoji":"🏾","text":"","type":1,"order":3480,"group":2,"subgroup":32,"version":1},{"label":"dark skin tone","hexcode":"1F3FF","tags":["6","dark","skin","tone","type"],"emoji":"🏿","text":"","type":1,"order":3481,"group":2,"subgroup":32,"version":1},{"label":"red hair","hexcode":"1F9B0","tags":["ginger","hair","red","redhead"],"emoji":"🦰","text":"","type":1,"order":3482,"group":2,"subgroup":33,"version":11},{"label":"curly hair","hexcode":"1F9B1","tags":["afro","curly","hair","ringlets"],"emoji":"🦱","text":"","type":1,"order":3483,"group":2,"subgroup":33,"version":11},{"label":"white hair","hexcode":"1F9B3","tags":["gray","hair","old","white"],"emoji":"🦳","text":"","type":1,"order":3484,"group":2,"subgroup":33,"version":11},{"label":"bald","hexcode":"1F9B2","tags":["chemotherapy","hair","hairless","no","shaven"],"emoji":"🦲","text":"","type":1,"order":3485,"group":2,"subgroup":33,"version":11},{"label":"monkey face","hexcode":"1F435","tags":["animal","banana","face","monkey"],"emoji":"🐵","text":"","type":1,"order":3486,"group":3,"subgroup":34,"version":0.6},{"label":"monkey","hexcode":"1F412","tags":["animal","banana"],"emoji":"🐒","text":"","type":1,"order":3487,"group":3,"subgroup":34,"version":0.6},{"label":"gorilla","hexcode":"1F98D","tags":["animal"],"emoji":"🦍","text":"","type":1,"order":3488,"group":3,"subgroup":34,"version":3},{"label":"orangutan","hexcode":"1F9A7","tags":["animal","ape","monkey"],"emoji":"🦧","text":"","type":1,"order":3489,"group":3,"subgroup":34,"version":12},{"label":"dog face","hexcode":"1F436","tags":["adorbs","animal","dog","face","pet","puppies","puppy"],"emoji":"🐶","text":"","type":1,"order":3490,"group":3,"subgroup":34,"version":0.6},{"label":"dog","hexcode":"1F415","tags":["animal","animals","dogs","pet"],"emoji":"🐕️","text":"🐕︎","type":1,"order":3491,"group":3,"subgroup":34,"version":0.7},{"label":"guide dog","hexcode":"1F9AE","tags":["accessibility","animal","blind","dog","guide"],"emoji":"🦮","text":"","type":1,"order":3492,"group":3,"subgroup":34,"version":12},{"label":"service dog","hexcode":"1F415-200D-1F9BA","tags":["accessibility","animal","assistance","dog","service"],"emoji":"🐕‍🦺","text":"","type":1,"order":3493,"group":3,"subgroup":34,"version":12},{"label":"poodle","hexcode":"1F429","tags":["animal","dog","fluffy"],"emoji":"🐩","text":"","type":1,"order":3494,"group":3,"subgroup":34,"version":0.6},{"label":"wolf","hexcode":"1F43A","tags":["animal","face"],"emoji":"🐺","text":"","type":1,"order":3495,"group":3,"subgroup":34,"version":0.6},{"label":"fox","hexcode":"1F98A","tags":["animal","face"],"emoji":"🦊","text":"","type":1,"order":3496,"group":3,"subgroup":34,"version":3},{"label":"raccoon","hexcode":"1F99D","tags":["animal","curious","sly"],"emoji":"🦝","text":"","type":1,"order":3497,"group":3,"subgroup":34,"version":11},{"label":"cat face","hexcode":"1F431","tags":["animal","cat","face","kitten","kitty","pet"],"emoji":"🐱","text":"","type":1,"order":3498,"group":3,"subgroup":34,"version":0.6},{"label":"cat","hexcode":"1F408","tags":["animal","animals","cats","kitten","pet"],"emoji":"🐈️","text":"🐈︎","type":1,"order":3499,"group":3,"subgroup":34,"version":0.7},{"label":"black cat","hexcode":"1F408-200D-2B1B","tags":["animal","black","cat","feline","halloween","meow","unlucky"],"emoji":"🐈‍⬛","text":"","type":1,"order":3500,"group":3,"subgroup":34,"version":13},{"label":"lion","hexcode":"1F981","tags":["alpha","animal","face","leo","mane","order","rawr","roar","safari","strong","zodiac"],"emoji":"🦁","text":"","type":1,"order":3501,"group":3,"subgroup":34,"version":1},{"label":"tiger face","hexcode":"1F42F","tags":["animal","big","cat","face","predator","tiger"],"emoji":"🐯","text":"","type":1,"order":3502,"group":3,"subgroup":34,"version":0.6},{"label":"tiger","hexcode":"1F405","tags":["animal","big","cat","predator","zoo"],"emoji":"🐅","text":"","type":1,"order":3503,"group":3,"subgroup":34,"version":1},{"label":"leopard","hexcode":"1F406","tags":["animal","big","cat","predator","zoo"],"emoji":"🐆","text":"","type":1,"order":3504,"group":3,"subgroup":34,"version":1},{"label":"horse face","hexcode":"1F434","tags":["animal","dressage","equine","face","farm","horse","horses"],"emoji":"🐴","text":"","type":1,"order":3505,"group":3,"subgroup":34,"version":0.6},{"label":"moose","hexcode":"1FACE","tags":["alces","animal","antlers","elk","mammal"],"emoji":"🫎","text":"","type":1,"order":3506,"group":3,"subgroup":34,"version":15},{"label":"donkey","hexcode":"1FACF","tags":["animal","ass","burro","hinny","mammal","mule","stubborn"],"emoji":"🫏","text":"","type":1,"order":3507,"group":3,"subgroup":34,"version":15},{"label":"horse","hexcode":"1F40E","tags":["animal","equestrian","farm","racehorse","racing"],"emoji":"🐎","text":"","type":1,"order":3508,"group":3,"subgroup":34,"version":0.6},{"label":"unicorn","hexcode":"1F984","tags":["face"],"emoji":"🦄","text":"","type":1,"order":3509,"group":3,"subgroup":34,"version":1},{"label":"zebra","hexcode":"1F993","tags":["animal","stripe"],"emoji":"🦓","text":"","type":1,"order":3510,"group":3,"subgroup":34,"version":5},{"label":"deer","hexcode":"1F98C","tags":["animal"],"emoji":"🦌","text":"","type":1,"order":3511,"group":3,"subgroup":34,"version":3},{"label":"bison","hexcode":"1F9AC","tags":["animal","buffalo","herd","wisent"],"emoji":"🦬","text":"","type":1,"order":3512,"group":3,"subgroup":34,"version":13},{"label":"cow face","hexcode":"1F42E","tags":["animal","cow","face","farm","milk","moo"],"emoji":"🐮","text":"","type":1,"order":3513,"group":3,"subgroup":34,"version":0.6},{"label":"ox","hexcode":"1F402","tags":["animal","animals","bull","farm","taurus","zodiac"],"emoji":"🐂","text":"","type":1,"order":3514,"group":3,"subgroup":34,"version":1},{"label":"water buffalo","hexcode":"1F403","tags":["animal","buffalo","water","zoo"],"emoji":"🐃","text":"","type":1,"order":3515,"group":3,"subgroup":34,"version":1},{"label":"cow","hexcode":"1F404","tags":["animal","animals","farm","milk","moo"],"emoji":"🐄","text":"","type":1,"order":3516,"group":3,"subgroup":34,"version":1},{"label":"pig face","hexcode":"1F437","tags":["animal","bacon","face","farm","pig","pork"],"emoji":"🐷","text":"","type":1,"order":3517,"group":3,"subgroup":34,"version":0.6},{"label":"pig","hexcode":"1F416","tags":["animal","bacon","farm","pork","sow"],"emoji":"🐖","text":"","type":1,"order":3518,"group":3,"subgroup":34,"version":1},{"label":"boar","hexcode":"1F417","tags":["animal","pig"],"emoji":"🐗","text":"","type":1,"order":3519,"group":3,"subgroup":34,"version":0.6},{"label":"pig nose","hexcode":"1F43D","tags":["animal","face","farm","nose","pig","smell","snout"],"emoji":"🐽","text":"","type":1,"order":3520,"group":3,"subgroup":34,"version":0.6},{"label":"ram","hexcode":"1F40F","tags":["animal","aries","horns","male","sheep","zodiac","zoo"],"emoji":"🐏","text":"","type":1,"order":3521,"group":3,"subgroup":34,"version":1},{"label":"ewe","hexcode":"1F411","tags":["animal","baa","farm","female","fluffy","lamb","sheep","wool"],"emoji":"🐑","text":"","type":1,"order":3522,"group":3,"subgroup":34,"version":0.6},{"label":"goat","hexcode":"1F410","tags":["animal","capricorn","farm","milk","zodiac"],"emoji":"🐐","text":"","type":1,"order":3523,"group":3,"subgroup":34,"version":1},{"label":"camel","hexcode":"1F42A","tags":["animal","desert","dromedary","hump","one"],"emoji":"🐪","text":"","type":1,"order":3524,"group":3,"subgroup":34,"version":1},{"label":"two-hump camel","hexcode":"1F42B","tags":["animal","bactrian","camel","desert","hump","two","two-hump"],"emoji":"🐫","text":"","type":1,"order":3525,"group":3,"subgroup":34,"version":0.6},{"label":"llama","hexcode":"1F999","tags":["alpaca","animal","guanaco","vicuña","wool"],"emoji":"🦙","text":"","type":1,"order":3526,"group":3,"subgroup":34,"version":11},{"label":"giraffe","hexcode":"1F992","tags":["animal","spots"],"emoji":"🦒","text":"","type":1,"order":3527,"group":3,"subgroup":34,"version":5},{"label":"elephant","hexcode":"1F418","tags":["animal"],"emoji":"🐘","text":"","type":1,"order":3528,"group":3,"subgroup":34,"version":0.6},{"label":"mammoth","hexcode":"1F9A3","tags":["animal","extinction","large","tusk","wooly"],"emoji":"🦣","text":"","type":1,"order":3529,"group":3,"subgroup":34,"version":13},{"label":"rhinoceros","hexcode":"1F98F","tags":["animal"],"emoji":"🦏","text":"","type":1,"order":3530,"group":3,"subgroup":34,"version":3},{"label":"hippopotamus","hexcode":"1F99B","tags":["animal","hippo"],"emoji":"🦛","text":"","type":1,"order":3531,"group":3,"subgroup":34,"version":11},{"label":"mouse face","hexcode":"1F42D","tags":["animal","face","mouse"],"emoji":"🐭","text":"","type":1,"order":3532,"group":3,"subgroup":34,"version":0.6},{"label":"mouse","hexcode":"1F401","tags":["animal","animals"],"emoji":"🐁","text":"","type":1,"order":3533,"group":3,"subgroup":34,"version":1},{"label":"rat","hexcode":"1F400","tags":["animal"],"emoji":"🐀","text":"","type":1,"order":3534,"group":3,"subgroup":34,"version":1},{"label":"hamster","hexcode":"1F439","tags":["animal","face","pet"],"emoji":"🐹","text":"","type":1,"order":3535,"group":3,"subgroup":34,"version":0.6},{"label":"rabbit face","hexcode":"1F430","tags":["animal","bunny","face","pet","rabbit"],"emoji":"🐰","text":"","type":1,"order":3536,"group":3,"subgroup":34,"version":0.6},{"label":"rabbit","hexcode":"1F407","tags":["animal","bunny","pet"],"emoji":"🐇","text":"","type":1,"order":3537,"group":3,"subgroup":34,"version":1},{"label":"chipmunk","hexcode":"1F43F","tags":["animal","squirrel"],"emoji":"🐿️","text":"🐿︎","type":0,"order":3539,"group":3,"subgroup":34,"version":0.7},{"label":"beaver","hexcode":"1F9AB","tags":["animal","dam","teeth"],"emoji":"🦫","text":"","type":1,"order":3540,"group":3,"subgroup":34,"version":13},{"label":"hedgehog","hexcode":"1F994","tags":["animal","spiny"],"emoji":"🦔","text":"","type":1,"order":3541,"group":3,"subgroup":34,"version":5},{"label":"bat","hexcode":"1F987","tags":["animal","vampire"],"emoji":"🦇","text":"","type":1,"order":3542,"group":3,"subgroup":34,"version":3},{"label":"bear","hexcode":"1F43B","tags":["animal","face","grizzly","growl","honey"],"emoji":"🐻","text":"","type":1,"order":3543,"group":3,"subgroup":34,"version":0.6},{"label":"polar bear","hexcode":"1F43B-200D-2744-FE0F","tags":["animal","arctic","bear","polar","white"],"emoji":"🐻‍❄️","text":"","type":1,"order":3544,"group":3,"subgroup":34,"version":13},{"label":"koala","hexcode":"1F428","tags":["animal","australia","bear","down","face","marsupial","under"],"emoji":"🐨","text":"","type":1,"order":3546,"group":3,"subgroup":34,"version":0.6},{"label":"panda","hexcode":"1F43C","tags":["animal","bamboo","face"],"emoji":"🐼","text":"","type":1,"order":3547,"group":3,"subgroup":34,"version":0.6},{"label":"sloth","hexcode":"1F9A5","tags":["lazy","slow"],"emoji":"🦥","text":"","type":1,"order":3548,"group":3,"subgroup":34,"version":12},{"label":"otter","hexcode":"1F9A6","tags":["animal","fishing","playful"],"emoji":"🦦","text":"","type":1,"order":3549,"group":3,"subgroup":34,"version":12},{"label":"skunk","hexcode":"1F9A8","tags":["animal","stink"],"emoji":"🦨","text":"","type":1,"order":3550,"group":3,"subgroup":34,"version":12},{"label":"kangaroo","hexcode":"1F998","tags":["animal","joey","jump","marsupial"],"emoji":"🦘","text":"","type":1,"order":3551,"group":3,"subgroup":34,"version":11},{"label":"badger","hexcode":"1F9A1","tags":["animal","honey","pester"],"emoji":"🦡","text":"","type":1,"order":3552,"group":3,"subgroup":34,"version":11},{"label":"paw prints","hexcode":"1F43E","tags":["feet","paw","paws","print","prints"],"emoji":"🐾","text":"","type":1,"order":3553,"group":3,"subgroup":34,"version":0.6},{"label":"turkey","hexcode":"1F983","tags":["bird","gobble","thanksgiving"],"emoji":"🦃","text":"","type":1,"order":3554,"group":3,"subgroup":35,"version":1},{"label":"chicken","hexcode":"1F414","tags":["animal","bird","ornithology"],"emoji":"🐔","text":"","type":1,"order":3555,"group":3,"subgroup":35,"version":0.6},{"label":"rooster","hexcode":"1F413","tags":["animal","bird","ornithology"],"emoji":"🐓","text":"","type":1,"order":3556,"group":3,"subgroup":35,"version":1},{"label":"hatching chick","hexcode":"1F423","tags":["animal","baby","bird","chick","egg","hatching"],"emoji":"🐣","text":"","type":1,"order":3557,"group":3,"subgroup":35,"version":0.6},{"label":"baby chick","hexcode":"1F424","tags":["animal","baby","bird","chick","ornithology"],"emoji":"🐤","text":"","type":1,"order":3558,"group":3,"subgroup":35,"version":0.6},{"label":"front-facing baby chick","hexcode":"1F425","tags":["animal","baby","bird","chick","front-facing","newborn","ornithology"],"emoji":"🐥","text":"","type":1,"order":3559,"group":3,"subgroup":35,"version":0.6},{"label":"bird","hexcode":"1F426","tags":["animal","ornithology"],"emoji":"🐦️","text":"🐦︎","type":1,"order":3560,"group":3,"subgroup":35,"version":0.6},{"label":"penguin","hexcode":"1F427","tags":["animal","antarctica","bird","ornithology"],"emoji":"🐧","text":"","type":1,"order":3561,"group":3,"subgroup":35,"version":0.6},{"label":"dove","hexcode":"1F54A","tags":["bird","fly","ornithology","peace"],"emoji":"🕊️","text":"🕊︎","type":0,"order":3563,"group":3,"subgroup":35,"version":0.7},{"label":"eagle","hexcode":"1F985","tags":["animal","bird","ornithology"],"emoji":"🦅","text":"","type":1,"order":3564,"group":3,"subgroup":35,"version":3},{"label":"duck","hexcode":"1F986","tags":["animal","bird","ornithology"],"emoji":"🦆","text":"","type":1,"order":3565,"group":3,"subgroup":35,"version":3},{"label":"swan","hexcode":"1F9A2","tags":["animal","bird","cygnet","duckling","ornithology","ugly"],"emoji":"🦢","text":"","type":1,"order":3566,"group":3,"subgroup":35,"version":11},{"label":"owl","hexcode":"1F989","tags":["animal","bird","ornithology","wise"],"emoji":"🦉","text":"","type":1,"order":3567,"group":3,"subgroup":35,"version":3},{"label":"dodo","hexcode":"1F9A4","tags":["animal","bird","extinction","large","ornithology"],"emoji":"🦤","text":"","type":1,"order":3568,"group":3,"subgroup":35,"version":13},{"label":"feather","hexcode":"1FAB6","tags":["bird","flight","light","plumage"],"emoji":"🪶","text":"","type":1,"order":3569,"group":3,"subgroup":35,"version":13},{"label":"flamingo","hexcode":"1F9A9","tags":["animal","bird","flamboyant","ornithology","tropical"],"emoji":"🦩","text":"","type":1,"order":3570,"group":3,"subgroup":35,"version":12},{"label":"peacock","hexcode":"1F99A","tags":["animal","bird","colorful","ornithology","ostentatious","peahen","pretty","proud"],"emoji":"🦚","text":"","type":1,"order":3571,"group":3,"subgroup":35,"version":11},{"label":"parrot","hexcode":"1F99C","tags":["animal","bird","ornithology","pirate","talk"],"emoji":"🦜","text":"","type":1,"order":3572,"group":3,"subgroup":35,"version":11},{"label":"wing","hexcode":"1FABD","tags":["angelic","ascend","aviation","bird","fly","flying","heavenly","mythology","soar"],"emoji":"🪽","text":"","type":1,"order":3573,"group":3,"subgroup":35,"version":15},{"label":"black bird","hexcode":"1F426-200D-2B1B","tags":["animal","beak","bird","black","caw","corvid","crow","ornithology","raven","rook"],"emoji":"🐦‍⬛","text":"","type":1,"order":3574,"group":3,"subgroup":35,"version":15},{"label":"goose","hexcode":"1FABF","tags":["animal","bird","duck","flock","fowl","gaggle","gander","geese","honk","ornithology","silly"],"emoji":"🪿","text":"","type":1,"order":3575,"group":3,"subgroup":35,"version":15},{"label":"phoenix","hexcode":"1F426-200D-1F525","tags":["ascend","ascension","emerge","fantasy","firebird","glory","immortal","rebirth","reincarnation","reinvent","renewal","revival","revive","rise","transform"],"emoji":"🐦‍🔥","text":"","type":1,"order":3576,"group":3,"subgroup":35,"version":15.1},{"label":"frog","hexcode":"1F438","tags":["animal","face"],"emoji":"🐸","text":"","type":1,"order":3577,"group":3,"subgroup":36,"version":0.6},{"label":"crocodile","hexcode":"1F40A","tags":["animal","zoo"],"emoji":"🐊","text":"","type":1,"order":3578,"group":3,"subgroup":37,"version":1},{"label":"turtle","hexcode":"1F422","tags":["animal","terrapin","tortoise"],"emoji":"🐢","text":"","type":1,"order":3579,"group":3,"subgroup":37,"version":0.6},{"label":"lizard","hexcode":"1F98E","tags":["animal","reptile"],"emoji":"🦎","text":"","type":1,"order":3580,"group":3,"subgroup":37,"version":3},{"label":"snake","hexcode":"1F40D","tags":["animal","bearer","ophiuchus","serpent","zodiac"],"emoji":"🐍","text":"","type":1,"order":3581,"group":3,"subgroup":37,"version":0.6},{"label":"dragon face","hexcode":"1F432","tags":["animal","dragon","face","fairy","fairytale","tale"],"emoji":"🐲","text":"","type":1,"order":3582,"group":3,"subgroup":37,"version":0.6},{"label":"dragon","hexcode":"1F409","tags":["animal","fairy","fairytale","knights","tale"],"emoji":"🐉","text":"","type":1,"order":3583,"group":3,"subgroup":37,"version":1},{"label":"sauropod","hexcode":"1F995","tags":["brachiosaurus","brontosaurus","dinosaur","diplodocus"],"emoji":"🦕","text":"","type":1,"order":3584,"group":3,"subgroup":37,"version":5},{"label":"T-Rex","hexcode":"1F996","tags":["dinosaur","rex","t","t-rex","tyrannosaurus"],"emoji":"🦖","text":"","type":1,"order":3585,"group":3,"subgroup":37,"version":5},{"label":"spouting whale","hexcode":"1F433","tags":["animal","beach","face","ocean","spouting","whale"],"emoji":"🐳","text":"","type":1,"order":3586,"group":3,"subgroup":38,"version":0.6},{"label":"whale","hexcode":"1F40B","tags":["animal","beach","ocean"],"emoji":"🐋","text":"","type":1,"order":3587,"group":3,"subgroup":38,"version":1},{"label":"dolphin","hexcode":"1F42C","tags":["animal","beach","flipper","ocean"],"emoji":"🐬","text":"","type":1,"order":3588,"group":3,"subgroup":38,"version":0.6},{"label":"seal","hexcode":"1F9AD","tags":["animal","lion","ocean","sea"],"emoji":"🦭","text":"","type":1,"order":3589,"group":3,"subgroup":38,"version":13},{"label":"fish","hexcode":"1F41F","tags":["animal","dinner","fishes","fishing","pisces","zodiac"],"emoji":"🐟️","text":"🐟︎","type":1,"order":3590,"group":3,"subgroup":38,"version":0.6},{"label":"tropical fish","hexcode":"1F420","tags":["animal","fish","fishes","tropical"],"emoji":"🐠","text":"","type":1,"order":3591,"group":3,"subgroup":38,"version":0.6},{"label":"blowfish","hexcode":"1F421","tags":["animal","fish"],"emoji":"🐡","text":"","type":1,"order":3592,"group":3,"subgroup":38,"version":0.6},{"label":"shark","hexcode":"1F988","tags":["animal","fish"],"emoji":"🦈","text":"","type":1,"order":3593,"group":3,"subgroup":38,"version":3},{"label":"octopus","hexcode":"1F419","tags":["animal","creature","ocean"],"emoji":"🐙","text":"","type":1,"order":3594,"group":3,"subgroup":38,"version":0.6},{"label":"spiral shell","hexcode":"1F41A","tags":["animal","beach","conch","sea","shell","spiral"],"emoji":"🐚","text":"","type":1,"order":3595,"group":3,"subgroup":38,"version":0.6},{"label":"coral","hexcode":"1FAB8","tags":["change","climate","ocean","reef","sea"],"emoji":"🪸","text":"","type":1,"order":3596,"group":3,"subgroup":38,"version":14},{"label":"jellyfish","hexcode":"1FABC","tags":["animal","aquarium","burn","invertebrate","jelly","life","marine","ocean","ouch","plankton","sea","sting","stinger","tentacles"],"emoji":"🪼","text":"","type":1,"order":3597,"group":3,"subgroup":38,"version":15},{"label":"crab","hexcode":"1F980","tags":["cancer","zodiac"],"emoji":"🦀","text":"","type":1,"order":3598,"group":3,"subgroup":38,"version":1},{"label":"lobster","hexcode":"1F99E","tags":["animal","bisque","claws","seafood"],"emoji":"🦞","text":"","type":1,"order":3599,"group":3,"subgroup":38,"version":11},{"label":"shrimp","hexcode":"1F990","tags":["food","shellfish","small"],"emoji":"🦐","text":"","type":1,"order":3600,"group":3,"subgroup":38,"version":3},{"label":"squid","hexcode":"1F991","tags":["animal","food","mollusk"],"emoji":"🦑","text":"","type":1,"order":3601,"group":3,"subgroup":38,"version":3},{"label":"oyster","hexcode":"1F9AA","tags":["diving","pearl"],"emoji":"🦪","text":"","type":1,"order":3602,"group":3,"subgroup":38,"version":12},{"label":"snail","hexcode":"1F40C","tags":["animal","escargot","garden","nature","slug"],"emoji":"🐌","text":"","type":1,"order":3603,"group":3,"subgroup":39,"version":0.6},{"label":"butterfly","hexcode":"1F98B","tags":["insect","pretty"],"emoji":"🦋","text":"","type":1,"order":3604,"group":3,"subgroup":39,"version":3},{"label":"bug","hexcode":"1F41B","tags":["animal","garden","insect"],"emoji":"🐛","text":"","type":1,"order":3605,"group":3,"subgroup":39,"version":0.6},{"label":"ant","hexcode":"1F41C","tags":["animal","garden","insect"],"emoji":"🐜","text":"","type":1,"order":3606,"group":3,"subgroup":39,"version":0.6},{"label":"honeybee","hexcode":"1F41D","tags":["animal","bee","bumblebee","honey","insect","nature","spring"],"emoji":"🐝","text":"","type":1,"order":3607,"group":3,"subgroup":39,"version":0.6},{"label":"beetle","hexcode":"1FAB2","tags":["animal","bug","insect"],"emoji":"🪲","text":"","type":1,"order":3608,"group":3,"subgroup":39,"version":13},{"label":"lady beetle","hexcode":"1F41E","tags":["animal","beetle","garden","insect","lady","ladybird","ladybug","nature"],"emoji":"🐞","text":"","type":1,"order":3609,"group":3,"subgroup":39,"version":0.6},{"label":"cricket","hexcode":"1F997","tags":["animal","bug","grasshopper","insect","orthoptera"],"emoji":"🦗","text":"","type":1,"order":3610,"group":3,"subgroup":39,"version":5},{"label":"cockroach","hexcode":"1FAB3","tags":["animal","insect","pest","roach"],"emoji":"🪳","text":"","type":1,"order":3611,"group":3,"subgroup":39,"version":13},{"label":"spider","hexcode":"1F577","tags":["animal","insect"],"emoji":"🕷️","text":"🕷︎","type":0,"order":3613,"group":3,"subgroup":39,"version":0.7},{"label":"spider web","hexcode":"1F578","tags":["spider","web"],"emoji":"🕸️","text":"🕸︎","type":0,"order":3615,"group":3,"subgroup":39,"version":0.7},{"label":"scorpion","hexcode":"1F982","tags":["scorpio","scorpius","zodiac"],"emoji":"🦂","text":"","type":1,"order":3616,"group":3,"subgroup":39,"version":1},{"label":"mosquito","hexcode":"1F99F","tags":["bite","disease","fever","insect","malaria","pest","virus"],"emoji":"🦟","text":"","type":1,"order":3617,"group":3,"subgroup":39,"version":11},{"label":"fly","hexcode":"1FAB0","tags":["animal","disease","insect","maggot","pest","rotting"],"emoji":"🪰","text":"","type":1,"order":3618,"group":3,"subgroup":39,"version":13},{"label":"worm","hexcode":"1FAB1","tags":["animal","annelid","earthworm","parasite"],"emoji":"🪱","text":"","type":1,"order":3619,"group":3,"subgroup":39,"version":13},{"label":"microbe","hexcode":"1F9A0","tags":["amoeba","bacteria","science","virus"],"emoji":"🦠","text":"","type":1,"order":3620,"group":3,"subgroup":39,"version":11},{"label":"bouquet","hexcode":"1F490","tags":["anniversary","birthday","date","flower","love","plant","romance"],"emoji":"💐","text":"","type":1,"order":3621,"group":3,"subgroup":40,"version":0.6},{"label":"cherry blossom","hexcode":"1F338","tags":["blossom","cherry","flower","plant","spring","springtime"],"emoji":"🌸","text":"","type":1,"order":3622,"group":3,"subgroup":40,"version":0.6},{"label":"white flower","hexcode":"1F4AE","tags":["flower","white"],"emoji":"💮","text":"","type":1,"order":3623,"group":3,"subgroup":40,"version":0.6},{"label":"lotus","hexcode":"1FAB7","tags":["beauty","buddhism","calm","flower","hinduism","peace","purity","serenity"],"emoji":"🪷","text":"","type":1,"order":3624,"group":3,"subgroup":40,"version":14},{"label":"rosette","hexcode":"1F3F5","tags":["plant"],"emoji":"🏵️","text":"🏵︎","type":0,"order":3626,"group":3,"subgroup":40,"version":0.7},{"label":"rose","hexcode":"1F339","tags":["beauty","elegant","flower","love","plant","red","valentine"],"emoji":"🌹","text":"","type":1,"order":3627,"group":3,"subgroup":40,"version":0.6},{"label":"wilted flower","hexcode":"1F940","tags":["dying","flower","wilted"],"emoji":"🥀","text":"","type":1,"order":3628,"group":3,"subgroup":40,"version":3},{"label":"hibiscus","hexcode":"1F33A","tags":["flower","plant"],"emoji":"🌺","text":"","type":1,"order":3629,"group":3,"subgroup":40,"version":0.6},{"label":"sunflower","hexcode":"1F33B","tags":["flower","outdoors","plant","sun"],"emoji":"🌻","text":"","type":1,"order":3630,"group":3,"subgroup":40,"version":0.6},{"label":"blossom","hexcode":"1F33C","tags":["buttercup","dandelion","flower","plant"],"emoji":"🌼","text":"","type":1,"order":3631,"group":3,"subgroup":40,"version":0.6},{"label":"tulip","hexcode":"1F337","tags":["blossom","flower","growth","plant"],"emoji":"🌷","text":"","type":1,"order":3632,"group":3,"subgroup":40,"version":0.6},{"label":"hyacinth","hexcode":"1FABB","tags":["bloom","bluebonnet","flower","indigo","lavender","lilac","lupine","plant","purple","shrub","snapdragon","spring","violet"],"emoji":"🪻","text":"","type":1,"order":3633,"group":3,"subgroup":40,"version":15},{"label":"seedling","hexcode":"1F331","tags":["plant","sapling","sprout","young"],"emoji":"🌱","text":"","type":1,"order":3634,"group":3,"subgroup":41,"version":0.6},{"label":"potted plant","hexcode":"1FAB4","tags":["decor","grow","house","nurturing","plant","pot","potted"],"emoji":"🪴","text":"","type":1,"order":3635,"group":3,"subgroup":41,"version":13},{"label":"evergreen tree","hexcode":"1F332","tags":["christmas","evergreen","forest","pine","tree"],"emoji":"🌲","text":"","type":1,"order":3636,"group":3,"subgroup":41,"version":1},{"label":"deciduous tree","hexcode":"1F333","tags":["deciduous","forest","green","habitat","shedding","tree"],"emoji":"🌳","text":"","type":1,"order":3637,"group":3,"subgroup":41,"version":1},{"label":"palm tree","hexcode":"1F334","tags":["beach","palm","plant","tree","tropical"],"emoji":"🌴","text":"","type":1,"order":3638,"group":3,"subgroup":41,"version":0.6},{"label":"cactus","hexcode":"1F335","tags":["desert","drought","nature","plant"],"emoji":"🌵","text":"","type":1,"order":3639,"group":3,"subgroup":41,"version":0.6},{"label":"sheaf of rice","hexcode":"1F33E","tags":["ear","grain","grains","plant","rice","sheaf"],"emoji":"🌾","text":"","type":1,"order":3640,"group":3,"subgroup":41,"version":0.6},{"label":"herb","hexcode":"1F33F","tags":["leaf","plant"],"emoji":"🌿","text":"","type":1,"order":3641,"group":3,"subgroup":41,"version":0.6},{"label":"shamrock","hexcode":"2618","tags":["irish","plant"],"emoji":"☘️","text":"☘︎","type":0,"order":3643,"group":3,"subgroup":41,"version":1},{"label":"four leaf clover","hexcode":"1F340","tags":["4","clover","four","four-leaf","irish","leaf","lucky","plant"],"emoji":"🍀","text":"","type":1,"order":3644,"group":3,"subgroup":41,"version":0.6},{"label":"maple leaf","hexcode":"1F341","tags":["falling","leaf","maple"],"emoji":"🍁","text":"","type":1,"order":3645,"group":3,"subgroup":41,"version":0.6},{"label":"fallen leaf","hexcode":"1F342","tags":["autumn","fall","fallen","falling","leaf"],"emoji":"🍂","text":"","type":1,"order":3646,"group":3,"subgroup":41,"version":0.6},{"label":"leaf fluttering in wind","hexcode":"1F343","tags":["blow","flutter","fluttering","leaf","wind"],"emoji":"🍃","text":"","type":1,"order":3647,"group":3,"subgroup":41,"version":0.6},{"label":"empty nest","hexcode":"1FAB9","tags":["branch","empty","home","nest","nesting"],"emoji":"🪹","text":"","type":1,"order":3648,"group":3,"subgroup":41,"version":14},{"label":"nest with eggs","hexcode":"1FABA","tags":["bird","branch","egg","eggs","nest","nesting"],"emoji":"🪺","text":"","type":1,"order":3649,"group":3,"subgroup":41,"version":14},{"label":"mushroom","hexcode":"1F344","tags":["fungus","toadstool"],"emoji":"🍄","text":"","type":1,"order":3650,"group":3,"subgroup":41,"version":0.6},{"label":"leafless tree","hexcode":"1FABE","tags":["bare","barren","branches","dead","drought","leafless","tree","trunk","winter","wood"],"emoji":"🪾","text":"","type":1,"order":3651,"group":3,"subgroup":41,"version":16},{"label":"grapes","hexcode":"1F347","tags":["dionysus","fruit","grape"],"emoji":"🍇","text":"","type":1,"order":3652,"group":4,"subgroup":42,"version":0.6},{"label":"melon","hexcode":"1F348","tags":["cantaloupe","fruit"],"emoji":"🍈","text":"","type":1,"order":3653,"group":4,"subgroup":42,"version":0.6},{"label":"watermelon","hexcode":"1F349","tags":["fruit"],"emoji":"🍉","text":"","type":1,"order":3654,"group":4,"subgroup":42,"version":0.6},{"label":"tangerine","hexcode":"1F34A","tags":["c","citrus","fruit","nectarine","orange","vitamin"],"emoji":"🍊","text":"","type":1,"order":3655,"group":4,"subgroup":42,"version":0.6},{"label":"lemon","hexcode":"1F34B","tags":["citrus","fruit","sour"],"emoji":"🍋","text":"","type":1,"order":3656,"group":4,"subgroup":42,"version":1},{"label":"lime","hexcode":"1F34B-200D-1F7E9","tags":["acidity","citrus","cocktail","fruit","garnish","key","margarita","mojito","refreshing","salsa","sour","tangy","tequila","tropical","zest"],"emoji":"🍋‍🟩","text":"","type":1,"order":3657,"group":4,"subgroup":42,"version":15.1},{"label":"banana","hexcode":"1F34C","tags":["fruit","potassium"],"emoji":"🍌","text":"","type":1,"order":3658,"group":4,"subgroup":42,"version":0.6},{"label":"pineapple","hexcode":"1F34D","tags":["colada","fruit","pina","tropical"],"emoji":"🍍","text":"","type":1,"order":3659,"group":4,"subgroup":42,"version":0.6},{"label":"mango","hexcode":"1F96D","tags":["food","fruit","tropical"],"emoji":"🥭","text":"","type":1,"order":3660,"group":4,"subgroup":42,"version":11},{"label":"red apple","hexcode":"1F34E","tags":["apple","diet","food","fruit","health","red","ripe"],"emoji":"🍎","text":"","type":1,"order":3661,"group":4,"subgroup":42,"version":0.6},{"label":"green apple","hexcode":"1F34F","tags":["apple","fruit","green"],"emoji":"🍏","text":"","type":1,"order":3662,"group":4,"subgroup":42,"version":0.6},{"label":"pear","hexcode":"1F350","tags":["fruit"],"emoji":"🍐","text":"","type":1,"order":3663,"group":4,"subgroup":42,"version":1},{"label":"peach","hexcode":"1F351","tags":["fruit"],"emoji":"🍑","text":"","type":1,"order":3664,"group":4,"subgroup":42,"version":0.6},{"label":"cherries","hexcode":"1F352","tags":["berries","cherry","fruit","red"],"emoji":"🍒","text":"","type":1,"order":3665,"group":4,"subgroup":42,"version":0.6},{"label":"strawberry","hexcode":"1F353","tags":["berry","fruit"],"emoji":"🍓","text":"","type":1,"order":3666,"group":4,"subgroup":42,"version":0.6},{"label":"blueberries","hexcode":"1FAD0","tags":["berries","berry","bilberry","blue","blueberry","food","fruit"],"emoji":"🫐","text":"","type":1,"order":3667,"group":4,"subgroup":42,"version":13},{"label":"kiwi fruit","hexcode":"1F95D","tags":["food","fruit","kiwi"],"emoji":"🥝","text":"","type":1,"order":3668,"group":4,"subgroup":42,"version":3},{"label":"tomato","hexcode":"1F345","tags":["food","fruit","vegetable"],"emoji":"🍅","text":"","type":1,"order":3669,"group":4,"subgroup":42,"version":0.6},{"label":"olive","hexcode":"1FAD2","tags":["food"],"emoji":"🫒","text":"","type":1,"order":3670,"group":4,"subgroup":42,"version":13},{"label":"coconut","hexcode":"1F965","tags":["colada","palm","piña"],"emoji":"🥥","text":"","type":1,"order":3671,"group":4,"subgroup":42,"version":5},{"label":"avocado","hexcode":"1F951","tags":["food","fruit"],"emoji":"🥑","text":"","type":1,"order":3672,"group":4,"subgroup":43,"version":3},{"label":"eggplant","hexcode":"1F346","tags":["aubergine","vegetable"],"emoji":"🍆","text":"","type":1,"order":3673,"group":4,"subgroup":43,"version":0.6},{"label":"potato","hexcode":"1F954","tags":["food","vegetable"],"emoji":"🥔","text":"","type":1,"order":3674,"group":4,"subgroup":43,"version":3},{"label":"carrot","hexcode":"1F955","tags":["food","vegetable"],"emoji":"🥕","text":"","type":1,"order":3675,"group":4,"subgroup":43,"version":3},{"label":"ear of corn","hexcode":"1F33D","tags":["corn","crops","ear","farm","maize","maze"],"emoji":"🌽","text":"","type":1,"order":3676,"group":4,"subgroup":43,"version":0.6},{"label":"hot pepper","hexcode":"1F336","tags":["hot","pepper"],"emoji":"🌶️","text":"🌶︎","type":0,"order":3678,"group":4,"subgroup":43,"version":0.7},{"label":"bell pepper","hexcode":"1FAD1","tags":["bell","capsicum","food","pepper","vegetable"],"emoji":"🫑","text":"","type":1,"order":3679,"group":4,"subgroup":43,"version":13},{"label":"cucumber","hexcode":"1F952","tags":["food","pickle","vegetable"],"emoji":"🥒","text":"","type":1,"order":3680,"group":4,"subgroup":43,"version":3},{"label":"leafy green","hexcode":"1F96C","tags":["bok","burgers","cabbage","choy","green","kale","leafy","lettuce","salad"],"emoji":"🥬","text":"","type":1,"order":3681,"group":4,"subgroup":43,"version":11},{"label":"broccoli","hexcode":"1F966","tags":["cabbage","wild"],"emoji":"🥦","text":"","type":1,"order":3682,"group":4,"subgroup":43,"version":5},{"label":"garlic","hexcode":"1F9C4","tags":["flavoring"],"emoji":"🧄","text":"","type":1,"order":3683,"group":4,"subgroup":43,"version":12},{"label":"onion","hexcode":"1F9C5","tags":["flavoring"],"emoji":"🧅","text":"","type":1,"order":3684,"group":4,"subgroup":43,"version":12},{"label":"peanuts","hexcode":"1F95C","tags":["food","nut","peanut","vegetable"],"emoji":"🥜","text":"","type":1,"order":3685,"group":4,"subgroup":43,"version":3},{"label":"beans","hexcode":"1FAD8","tags":["food","kidney","legume","small"],"emoji":"🫘","text":"","type":1,"order":3686,"group":4,"subgroup":43,"version":14},{"label":"chestnut","hexcode":"1F330","tags":["almond","plant"],"emoji":"🌰","text":"","type":1,"order":3687,"group":4,"subgroup":43,"version":0.6},{"label":"ginger root","hexcode":"1FADA","tags":["beer","ginger","health","herb","natural","root","spice"],"emoji":"🫚","text":"","type":1,"order":3688,"group":4,"subgroup":43,"version":15},{"label":"pea pod","hexcode":"1FADB","tags":["beans","beanstalk","edamame","legume","pea","pod","soybean","vegetable","veggie"],"emoji":"🫛","text":"","type":1,"order":3689,"group":4,"subgroup":43,"version":15},{"label":"brown mushroom","hexcode":"1F344-200D-1F7EB","tags":["food","fungi","fungus","mushroom","nature","pizza","portobello","shiitake","shroom","spore","sprout","toppings","truffle","vegetable","vegetarian","veggie"],"emoji":"🍄‍🟫","text":"","type":1,"order":3690,"group":4,"subgroup":43,"version":15.1},{"label":"root vegetable","hexcode":"1FADC","tags":["beet","food","garden","radish","root","salad","turnip","vegetable","vegetarian"],"emoji":"🫜","text":"","type":1,"order":3691,"group":4,"subgroup":43,"version":16},{"label":"bread","hexcode":"1F35E","tags":["carbs","food","grain","loaf","restaurant","toast","wheat"],"emoji":"🍞","text":"","type":1,"order":3692,"group":4,"subgroup":44,"version":0.6},{"label":"croissant","hexcode":"1F950","tags":["bread","breakfast","crescent","food","french","roll"],"emoji":"🥐","text":"","type":1,"order":3693,"group":4,"subgroup":44,"version":3},{"label":"baguette bread","hexcode":"1F956","tags":["baguette","bread","food","french"],"emoji":"🥖","text":"","type":1,"order":3694,"group":4,"subgroup":44,"version":3},{"label":"flatbread","hexcode":"1FAD3","tags":["arepa","bread","food","gordita","lavash","naan","pita"],"emoji":"🫓","text":"","type":1,"order":3695,"group":4,"subgroup":44,"version":13},{"label":"pretzel","hexcode":"1F968","tags":["convoluted","twisted"],"emoji":"🥨","text":"","type":1,"order":3696,"group":4,"subgroup":44,"version":5},{"label":"bagel","hexcode":"1F96F","tags":["bakery","bread","breakfast","schmear"],"emoji":"🥯","text":"","type":1,"order":3697,"group":4,"subgroup":44,"version":11},{"label":"pancakes","hexcode":"1F95E","tags":["breakfast","crêpe","food","hotcake","pancake"],"emoji":"🥞","text":"","type":1,"order":3698,"group":4,"subgroup":44,"version":3},{"label":"waffle","hexcode":"1F9C7","tags":["breakfast","indecisive","iron"],"emoji":"🧇","text":"","type":1,"order":3699,"group":4,"subgroup":44,"version":12},{"label":"cheese wedge","hexcode":"1F9C0","tags":["cheese","wedge"],"emoji":"🧀","text":"","type":1,"order":3700,"group":4,"subgroup":44,"version":1},{"label":"meat on bone","hexcode":"1F356","tags":["bone","meat"],"emoji":"🍖","text":"","type":1,"order":3701,"group":4,"subgroup":44,"version":0.6},{"label":"poultry leg","hexcode":"1F357","tags":["bone","chicken","drumstick","hungry","leg","poultry","turkey"],"emoji":"🍗","text":"","type":1,"order":3702,"group":4,"subgroup":44,"version":0.6},{"label":"cut of meat","hexcode":"1F969","tags":["chop","cut","lambchop","meat","porkchop","red","steak"],"emoji":"🥩","text":"","type":1,"order":3703,"group":4,"subgroup":44,"version":5},{"label":"bacon","hexcode":"1F953","tags":["breakfast","food","meat"],"emoji":"🥓","text":"","type":1,"order":3704,"group":4,"subgroup":44,"version":3},{"label":"hamburger","hexcode":"1F354","tags":["burger","eat","fast","food","hungry"],"emoji":"🍔","text":"","type":1,"order":3705,"group":4,"subgroup":44,"version":0.6},{"label":"french fries","hexcode":"1F35F","tags":["fast","food","french","fries"],"emoji":"🍟","text":"","type":1,"order":3706,"group":4,"subgroup":44,"version":0.6},{"label":"pizza","hexcode":"1F355","tags":["cheese","food","hungry","pepperoni","slice"],"emoji":"🍕","text":"","type":1,"order":3707,"group":4,"subgroup":44,"version":0.6},{"label":"hot dog","hexcode":"1F32D","tags":["dog","frankfurter","hot","hotdog","sausage"],"emoji":"🌭","text":"","type":1,"order":3708,"group":4,"subgroup":44,"version":1},{"label":"sandwich","hexcode":"1F96A","tags":["bread"],"emoji":"🥪","text":"","type":1,"order":3709,"group":4,"subgroup":44,"version":5},{"label":"taco","hexcode":"1F32E","tags":["mexican"],"emoji":"🌮","text":"","type":1,"order":3710,"group":4,"subgroup":44,"version":1},{"label":"burrito","hexcode":"1F32F","tags":["mexican","wrap"],"emoji":"🌯","text":"","type":1,"order":3711,"group":4,"subgroup":44,"version":1},{"label":"tamale","hexcode":"1FAD4","tags":["food","mexican","pamonha","wrapped"],"emoji":"🫔","text":"","type":1,"order":3712,"group":4,"subgroup":44,"version":13},{"label":"stuffed flatbread","hexcode":"1F959","tags":["falafel","flatbread","food","gyro","kebab","stuffed"],"emoji":"🥙","text":"","type":1,"order":3713,"group":4,"subgroup":44,"version":3},{"label":"falafel","hexcode":"1F9C6","tags":["chickpea","meatball"],"emoji":"🧆","text":"","type":1,"order":3714,"group":4,"subgroup":44,"version":12},{"label":"egg","hexcode":"1F95A","tags":["breakfast","food"],"emoji":"🥚","text":"","type":1,"order":3715,"group":4,"subgroup":44,"version":3},{"label":"cooking","hexcode":"1F373","tags":["breakfast","easy","egg","fry","frying","over","pan","restaurant","side","sunny","up"],"emoji":"🍳","text":"","type":1,"order":3716,"group":4,"subgroup":44,"version":0.6},{"label":"shallow pan of food","hexcode":"1F958","tags":["casserole","food","paella","pan","shallow"],"emoji":"🥘","text":"","type":1,"order":3717,"group":4,"subgroup":44,"version":3},{"label":"pot of food","hexcode":"1F372","tags":["food","pot","soup","stew"],"emoji":"🍲","text":"","type":1,"order":3718,"group":4,"subgroup":44,"version":0.6},{"label":"fondue","hexcode":"1FAD5","tags":["cheese","chocolate","food","melted","pot","ski"],"emoji":"🫕","text":"","type":1,"order":3719,"group":4,"subgroup":44,"version":13},{"label":"bowl with spoon","hexcode":"1F963","tags":["bowl","breakfast","cereal","congee","oatmeal","porridge","spoon"],"emoji":"🥣","text":"","type":1,"order":3720,"group":4,"subgroup":44,"version":5},{"label":"green salad","hexcode":"1F957","tags":["food","green","salad"],"emoji":"🥗","text":"","type":1,"order":3721,"group":4,"subgroup":44,"version":3},{"label":"popcorn","hexcode":"1F37F","tags":["corn","movie","pop"],"emoji":"🍿","text":"","type":1,"order":3722,"group":4,"subgroup":44,"version":1},{"label":"butter","hexcode":"1F9C8","tags":["dairy"],"emoji":"🧈","text":"","type":1,"order":3723,"group":4,"subgroup":44,"version":12},{"label":"salt","hexcode":"1F9C2","tags":["condiment","flavor","mad","salty","shaker","taste","upset"],"emoji":"🧂","text":"","type":1,"order":3724,"group":4,"subgroup":44,"version":11},{"label":"canned food","hexcode":"1F96B","tags":["can","canned","food"],"emoji":"🥫","text":"","type":1,"order":3725,"group":4,"subgroup":44,"version":5},{"label":"bento box","hexcode":"1F371","tags":["bento","box","food"],"emoji":"🍱","text":"","type":1,"order":3726,"group":4,"subgroup":45,"version":0.6},{"label":"rice cracker","hexcode":"1F358","tags":["cracker","food","rice"],"emoji":"🍘","text":"","type":1,"order":3727,"group":4,"subgroup":45,"version":0.6},{"label":"rice ball","hexcode":"1F359","tags":["ball","food","japanese","rice"],"emoji":"🍙","text":"","type":1,"order":3728,"group":4,"subgroup":45,"version":0.6},{"label":"cooked rice","hexcode":"1F35A","tags":["cooked","food","rice"],"emoji":"🍚","text":"","type":1,"order":3729,"group":4,"subgroup":45,"version":0.6},{"label":"curry rice","hexcode":"1F35B","tags":["curry","food","rice"],"emoji":"🍛","text":"","type":1,"order":3730,"group":4,"subgroup":45,"version":0.6},{"label":"steaming bowl","hexcode":"1F35C","tags":["bowl","chopsticks","food","noodle","pho","ramen","soup","steaming"],"emoji":"🍜","text":"","type":1,"order":3731,"group":4,"subgroup":45,"version":0.6},{"label":"spaghetti","hexcode":"1F35D","tags":["food","meatballs","pasta","restaurant"],"emoji":"🍝","text":"","type":1,"order":3732,"group":4,"subgroup":45,"version":0.6},{"label":"roasted sweet potato","hexcode":"1F360","tags":["food","potato","roasted","sweet"],"emoji":"🍠","text":"","type":1,"order":3733,"group":4,"subgroup":45,"version":0.6},{"label":"oden","hexcode":"1F362","tags":["food","kebab","restaurant","seafood","skewer","stick"],"emoji":"🍢","text":"","type":1,"order":3734,"group":4,"subgroup":45,"version":0.6},{"label":"sushi","hexcode":"1F363","tags":["food"],"emoji":"🍣","text":"","type":1,"order":3735,"group":4,"subgroup":45,"version":0.6},{"label":"fried shrimp","hexcode":"1F364","tags":["fried","prawn","shrimp","tempura"],"emoji":"🍤","text":"","type":1,"order":3736,"group":4,"subgroup":45,"version":0.6},{"label":"fish cake with swirl","hexcode":"1F365","tags":["cake","fish","food","pastry","restaurant","swirl"],"emoji":"🍥","text":"","type":1,"order":3737,"group":4,"subgroup":45,"version":0.6},{"label":"moon cake","hexcode":"1F96E","tags":["autumn","cake","festival","moon","yuèbǐng"],"emoji":"🥮","text":"","type":1,"order":3738,"group":4,"subgroup":45,"version":11},{"label":"dango","hexcode":"1F361","tags":["dessert","japanese","skewer","stick","sweet"],"emoji":"🍡","text":"","type":1,"order":3739,"group":4,"subgroup":45,"version":0.6},{"label":"dumpling","hexcode":"1F95F","tags":["empanada","gyōza","jiaozi","pierogi","potsticker"],"emoji":"🥟","text":"","type":1,"order":3740,"group":4,"subgroup":45,"version":5},{"label":"fortune cookie","hexcode":"1F960","tags":["cookie","fortune","prophecy"],"emoji":"🥠","text":"","type":1,"order":3741,"group":4,"subgroup":45,"version":5},{"label":"takeout box","hexcode":"1F961","tags":["box","chopsticks","delivery","food","oyster","pail","takeout"],"emoji":"🥡","text":"","type":1,"order":3742,"group":4,"subgroup":45,"version":5},{"label":"soft ice cream","hexcode":"1F366","tags":["cream","dessert","food","ice","icecream","restaurant","serve","soft","sweet"],"emoji":"🍦","text":"","type":1,"order":3743,"group":4,"subgroup":46,"version":0.6},{"label":"shaved ice","hexcode":"1F367","tags":["dessert","ice","restaurant","shaved","sweet"],"emoji":"🍧","text":"","type":1,"order":3744,"group":4,"subgroup":46,"version":0.6},{"label":"ice cream","hexcode":"1F368","tags":["cream","dessert","food","ice","restaurant","sweet"],"emoji":"🍨","text":"","type":1,"order":3745,"group":4,"subgroup":46,"version":0.6},{"label":"doughnut","hexcode":"1F369","tags":["breakfast","dessert","donut","food","sweet"],"emoji":"🍩","text":"","type":1,"order":3746,"group":4,"subgroup":46,"version":0.6},{"label":"cookie","hexcode":"1F36A","tags":["chip","chocolate","dessert","sweet"],"emoji":"🍪","text":"","type":1,"order":3747,"group":4,"subgroup":46,"version":0.6},{"label":"birthday cake","hexcode":"1F382","tags":["bday","birthday","cake","celebration","dessert","happy","pastry","sweet"],"emoji":"🎂","text":"","type":1,"order":3748,"group":4,"subgroup":46,"version":0.6},{"label":"shortcake","hexcode":"1F370","tags":["cake","dessert","pastry","slice","sweet"],"emoji":"🍰","text":"","type":1,"order":3749,"group":4,"subgroup":46,"version":0.6},{"label":"cupcake","hexcode":"1F9C1","tags":["bakery","dessert","sprinkles","sugar","sweet","treat"],"emoji":"🧁","text":"","type":1,"order":3750,"group":4,"subgroup":46,"version":11},{"label":"pie","hexcode":"1F967","tags":["apple","filling","fruit","meat","pastry","pumpkin","slice"],"emoji":"🥧","text":"","type":1,"order":3751,"group":4,"subgroup":46,"version":5},{"label":"chocolate bar","hexcode":"1F36B","tags":["bar","candy","chocolate","dessert","halloween","sweet","tooth"],"emoji":"🍫","text":"","type":1,"order":3752,"group":4,"subgroup":46,"version":0.6},{"label":"candy","hexcode":"1F36C","tags":["cavities","dessert","halloween","restaurant","sweet","tooth","wrapper"],"emoji":"🍬","text":"","type":1,"order":3753,"group":4,"subgroup":46,"version":0.6},{"label":"lollipop","hexcode":"1F36D","tags":["candy","dessert","food","restaurant","sweet"],"emoji":"🍭","text":"","type":1,"order":3754,"group":4,"subgroup":46,"version":0.6},{"label":"custard","hexcode":"1F36E","tags":["dessert","pudding","sweet"],"emoji":"🍮","text":"","type":1,"order":3755,"group":4,"subgroup":46,"version":0.6},{"label":"honey pot","hexcode":"1F36F","tags":["barrel","bear","food","honey","honeypot","jar","pot","sweet"],"emoji":"🍯","text":"","type":1,"order":3756,"group":4,"subgroup":46,"version":0.6},{"label":"baby bottle","hexcode":"1F37C","tags":["babies","baby","birth","born","bottle","drink","infant","milk","newborn"],"emoji":"🍼","text":"","type":1,"order":3757,"group":4,"subgroup":47,"version":1},{"label":"glass of milk","hexcode":"1F95B","tags":["drink","glass","milk"],"emoji":"🥛","text":"","type":1,"order":3758,"group":4,"subgroup":47,"version":3},{"label":"hot beverage","hexcode":"2615","tags":["beverage","cafe","caffeine","chai","coffee","drink","hot","morning","steaming","tea"],"emoji":"☕️","text":"☕︎","type":1,"order":3759,"group":4,"subgroup":47,"version":0.6},{"label":"teapot","hexcode":"1FAD6","tags":["brew","drink","food","pot","tea"],"emoji":"🫖","text":"","type":1,"order":3760,"group":4,"subgroup":47,"version":13},{"label":"teacup without handle","hexcode":"1F375","tags":["beverage","cup","drink","handle","oolong","tea","teacup"],"emoji":"🍵","text":"","type":1,"order":3761,"group":4,"subgroup":47,"version":0.6},{"label":"sake","hexcode":"1F376","tags":["bar","beverage","bottle","cup","drink","restaurant"],"emoji":"🍶","text":"","type":1,"order":3762,"group":4,"subgroup":47,"version":0.6},{"label":"bottle with popping cork","hexcode":"1F37E","tags":["bar","bottle","cork","drink","popping"],"emoji":"🍾","text":"","type":1,"order":3763,"group":4,"subgroup":47,"version":1},{"label":"wine glass","hexcode":"1F377","tags":["alcohol","bar","beverage","booze","club","drink","drinking","drinks","glass","restaurant","wine"],"emoji":"🍷","text":"","type":1,"order":3764,"group":4,"subgroup":47,"version":0.6},{"label":"cocktail glass","hexcode":"1F378","tags":["alcohol","bar","booze","club","cocktail","drink","drinking","drinks","glass","mad","martini","men"],"emoji":"🍸️","text":"🍸︎","type":1,"order":3765,"group":4,"subgroup":47,"version":0.6},{"label":"tropical drink","hexcode":"1F379","tags":["alcohol","bar","booze","club","cocktail","drink","drinking","drinks","drunk","mai","party","tai","tropical","tropics"],"emoji":"🍹","text":"","type":1,"order":3766,"group":4,"subgroup":47,"version":0.6},{"label":"beer mug","hexcode":"1F37A","tags":["alcohol","ale","bar","beer","booze","drink","drinking","drinks","mug","octoberfest","oktoberfest","pint","stein","summer"],"emoji":"🍺","text":"","type":1,"order":3767,"group":4,"subgroup":47,"version":0.6},{"label":"clinking beer mugs","hexcode":"1F37B","tags":["alcohol","bar","beer","booze","bottoms","cheers","clink","clinking","drinking","drinks","mugs"],"emoji":"🍻","text":"","type":1,"order":3768,"group":4,"subgroup":47,"version":0.6},{"label":"clinking glasses","hexcode":"1F942","tags":["celebrate","clink","clinking","drink","glass","glasses"],"emoji":"🥂","text":"","type":1,"order":3769,"group":4,"subgroup":47,"version":3},{"label":"tumbler glass","hexcode":"1F943","tags":["glass","liquor","scotch","shot","tumbler","whiskey","whisky"],"emoji":"🥃","text":"","type":1,"order":3770,"group":4,"subgroup":47,"version":3},{"label":"pouring liquid","hexcode":"1FAD7","tags":["accident","drink","empty","glass","liquid","oops","pour","pouring","spill","water"],"emoji":"🫗","text":"","type":1,"order":3771,"group":4,"subgroup":47,"version":14},{"label":"cup with straw","hexcode":"1F964","tags":["cup","drink","juice","malt","soda","soft","straw","water"],"emoji":"🥤","text":"","type":1,"order":3772,"group":4,"subgroup":47,"version":5},{"label":"bubble tea","hexcode":"1F9CB","tags":["boba","bubble","food","milk","pearl","tea"],"emoji":"🧋","text":"","type":1,"order":3773,"group":4,"subgroup":47,"version":13},{"label":"beverage box","hexcode":"1F9C3","tags":["beverage","box","juice","straw","sweet"],"emoji":"🧃","text":"","type":1,"order":3774,"group":4,"subgroup":47,"version":12},{"label":"mate","hexcode":"1F9C9","tags":["drink"],"emoji":"🧉","text":"","type":1,"order":3775,"group":4,"subgroup":47,"version":12},{"label":"ice","hexcode":"1F9CA","tags":["cold","cube","iceberg"],"emoji":"🧊","text":"","type":1,"order":3776,"group":4,"subgroup":47,"version":12},{"label":"chopsticks","hexcode":"1F962","tags":["hashi","jeotgarak","kuaizi"],"emoji":"🥢","text":"","type":1,"order":3777,"group":4,"subgroup":48,"version":5},{"label":"fork and knife with plate","hexcode":"1F37D","tags":["cooking","dinner","eat","fork","knife","plate"],"emoji":"🍽️","text":"🍽︎","type":0,"order":3779,"group":4,"subgroup":48,"version":0.7},{"label":"fork and knife","hexcode":"1F374","tags":["breakfast","breaky","cooking","cutlery","delicious","dinner","eat","feed","food","fork","hungry","knife","lunch","restaurant","yum","yummy"],"emoji":"🍴","text":"","type":1,"order":3780,"group":4,"subgroup":48,"version":0.6},{"label":"spoon","hexcode":"1F944","tags":["eat","tableware"],"emoji":"🥄","text":"","type":1,"order":3781,"group":4,"subgroup":48,"version":3},{"label":"kitchen knife","hexcode":"1F52A","tags":["chef","cooking","hocho","kitchen","knife","tool","weapon"],"emoji":"🔪","text":"","type":1,"order":3782,"group":4,"subgroup":48,"version":0.6},{"label":"jar","hexcode":"1FAD9","tags":["condiment","container","empty","nothing","sauce","store"],"emoji":"🫙","text":"","type":1,"order":3783,"group":4,"subgroup":48,"version":14},{"label":"amphora","hexcode":"1F3FA","tags":["aquarius","cooking","drink","jug","tool","weapon","zodiac"],"emoji":"🏺","text":"","type":1,"order":3784,"group":4,"subgroup":48,"version":1},{"label":"globe showing Europe-Africa","hexcode":"1F30D","tags":["africa","earth","europe","europe-africa","globe","showing","world"],"emoji":"🌍️","text":"🌍︎","type":1,"order":3785,"group":5,"subgroup":49,"version":0.7},{"label":"globe showing Americas","hexcode":"1F30E","tags":["americas","earth","globe","showing","world"],"emoji":"🌎️","text":"🌎︎","type":1,"order":3786,"group":5,"subgroup":49,"version":0.7},{"label":"globe showing Asia-Australia","hexcode":"1F30F","tags":["asia","asia-australia","australia","earth","globe","showing","world"],"emoji":"🌏️","text":"🌏︎","type":1,"order":3787,"group":5,"subgroup":49,"version":0.6},{"label":"globe with meridians","hexcode":"1F310","tags":["earth","globe","internet","meridians","web","world","worldwide"],"emoji":"🌐","text":"","type":1,"order":3788,"group":5,"subgroup":49,"version":1},{"label":"world map","hexcode":"1F5FA","tags":["map","world"],"emoji":"🗺️","text":"🗺︎","type":0,"order":3790,"group":5,"subgroup":49,"version":0.7},{"label":"map of Japan","hexcode":"1F5FE","tags":["japan","map"],"emoji":"🗾","text":"","type":1,"order":3791,"group":5,"subgroup":49,"version":0.6},{"label":"compass","hexcode":"1F9ED","tags":["direction","magnetic","navigation","orienteering"],"emoji":"🧭","text":"","type":1,"order":3792,"group":5,"subgroup":49,"version":11},{"label":"snow-capped mountain","hexcode":"1F3D4","tags":["cold","mountain","snow","snow-capped"],"emoji":"🏔️","text":"🏔︎","type":0,"order":3794,"group":5,"subgroup":50,"version":0.7},{"label":"mountain","hexcode":"26F0","tags":["mountain"],"emoji":"⛰️","text":"⛰︎","type":0,"order":3796,"group":5,"subgroup":50,"version":0.7},{"label":"volcano","hexcode":"1F30B","tags":["eruption","mountain","nature"],"emoji":"🌋","text":"","type":1,"order":3797,"group":5,"subgroup":50,"version":0.6},{"label":"mount fuji","hexcode":"1F5FB","tags":["fuji","mount","mountain","nature"],"emoji":"🗻","text":"","type":1,"order":3798,"group":5,"subgroup":50,"version":0.6},{"label":"camping","hexcode":"1F3D5","tags":["camping"],"emoji":"🏕️","text":"🏕︎","type":0,"order":3800,"group":5,"subgroup":50,"version":0.7},{"label":"beach with umbrella","hexcode":"1F3D6","tags":["beach","umbrella"],"emoji":"🏖️","text":"🏖︎","type":0,"order":3802,"group":5,"subgroup":50,"version":0.7},{"label":"desert","hexcode":"1F3DC","tags":["desert"],"emoji":"🏜️","text":"🏜︎","type":0,"order":3804,"group":5,"subgroup":50,"version":0.7},{"label":"desert island","hexcode":"1F3DD","tags":["desert","island"],"emoji":"🏝️","text":"🏝︎","type":0,"order":3806,"group":5,"subgroup":50,"version":0.7},{"label":"national park","hexcode":"1F3DE","tags":["national","park"],"emoji":"🏞️","text":"🏞︎","type":0,"order":3808,"group":5,"subgroup":50,"version":0.7},{"label":"stadium","hexcode":"1F3DF","tags":["stadium"],"emoji":"🏟️","text":"🏟︎","type":0,"order":3810,"group":5,"subgroup":51,"version":0.7},{"label":"classical building","hexcode":"1F3DB","tags":["building","classical"],"emoji":"🏛️","text":"🏛︎","type":0,"order":3812,"group":5,"subgroup":51,"version":0.7},{"label":"building construction","hexcode":"1F3D7","tags":["building","construction","crane"],"emoji":"🏗️","text":"🏗︎","type":0,"order":3814,"group":5,"subgroup":51,"version":0.7},{"label":"brick","hexcode":"1F9F1","tags":["bricks","clay","mortar","wall"],"emoji":"🧱","text":"","type":1,"order":3815,"group":5,"subgroup":51,"version":11},{"label":"rock","hexcode":"1FAA8","tags":["boulder","heavy","solid","stone","tough"],"emoji":"🪨","text":"","type":1,"order":3816,"group":5,"subgroup":51,"version":13},{"label":"wood","hexcode":"1FAB5","tags":["log","lumber","timber"],"emoji":"🪵","text":"","type":1,"order":3817,"group":5,"subgroup":51,"version":13},{"label":"hut","hexcode":"1F6D6","tags":["home","house","roundhouse","shelter","yurt"],"emoji":"🛖","text":"","type":1,"order":3818,"group":5,"subgroup":51,"version":13},{"label":"houses","hexcode":"1F3D8","tags":["house"],"emoji":"🏘️","text":"🏘︎","type":0,"order":3820,"group":5,"subgroup":51,"version":0.7},{"label":"derelict house","hexcode":"1F3DA","tags":["derelict","home","house"],"emoji":"🏚️","text":"🏚︎","type":0,"order":3822,"group":5,"subgroup":51,"version":0.7},{"label":"house","hexcode":"1F3E0","tags":["building","country","heart","home","ranch","settle","simple","suburban","suburbia","where"],"emoji":"🏠️","text":"🏠︎","type":1,"order":3823,"group":5,"subgroup":51,"version":0.6},{"label":"house with garden","hexcode":"1F3E1","tags":["building","country","garden","heart","home","house","ranch","settle","simple","suburban","suburbia","where"],"emoji":"🏡","text":"","type":1,"order":3824,"group":5,"subgroup":51,"version":0.6},{"label":"office building","hexcode":"1F3E2","tags":["building","city","cubical","job","office"],"emoji":"🏢","text":"","type":1,"order":3825,"group":5,"subgroup":51,"version":0.6},{"label":"Japanese post office","hexcode":"1F3E3","tags":["building","japanese","office","post"],"emoji":"🏣","text":"","type":1,"order":3826,"group":5,"subgroup":51,"version":0.6},{"label":"post office","hexcode":"1F3E4","tags":["building","european","office","post"],"emoji":"🏤","text":"","type":1,"order":3827,"group":5,"subgroup":51,"version":1},{"label":"hospital","hexcode":"1F3E5","tags":["building","doctor","medicine"],"emoji":"🏥","text":"","type":1,"order":3828,"group":5,"subgroup":51,"version":0.6},{"label":"bank","hexcode":"1F3E6","tags":["building"],"emoji":"🏦","text":"","type":1,"order":3829,"group":5,"subgroup":51,"version":0.6},{"label":"hotel","hexcode":"1F3E8","tags":["building"],"emoji":"🏨","text":"","type":1,"order":3830,"group":5,"subgroup":51,"version":0.6},{"label":"love hotel","hexcode":"1F3E9","tags":["building","hotel","love"],"emoji":"🏩","text":"","type":1,"order":3831,"group":5,"subgroup":51,"version":0.6},{"label":"convenience store","hexcode":"1F3EA","tags":["24","building","convenience","hours","store"],"emoji":"🏪","text":"","type":1,"order":3832,"group":5,"subgroup":51,"version":0.6},{"label":"school","hexcode":"1F3EB","tags":["building"],"emoji":"🏫","text":"","type":1,"order":3833,"group":5,"subgroup":51,"version":0.6},{"label":"department store","hexcode":"1F3EC","tags":["building","department","store"],"emoji":"🏬","text":"","type":1,"order":3834,"group":5,"subgroup":51,"version":0.6},{"label":"factory","hexcode":"1F3ED","tags":["building"],"emoji":"🏭️","text":"🏭︎","type":1,"order":3835,"group":5,"subgroup":51,"version":0.6},{"label":"Japanese castle","hexcode":"1F3EF","tags":["building","castle","japanese"],"emoji":"🏯","text":"","type":1,"order":3836,"group":5,"subgroup":51,"version":0.6},{"label":"castle","hexcode":"1F3F0","tags":["building","european"],"emoji":"🏰","text":"","type":1,"order":3837,"group":5,"subgroup":51,"version":0.6},{"label":"wedding","hexcode":"1F492","tags":["chapel","hitched","nuptials","romance"],"emoji":"💒","text":"","type":1,"order":3838,"group":5,"subgroup":51,"version":0.6},{"label":"Tokyo tower","hexcode":"1F5FC","tags":["tokyo","tower"],"emoji":"🗼","text":"","type":1,"order":3839,"group":5,"subgroup":51,"version":0.6},{"label":"Statue of Liberty","hexcode":"1F5FD","tags":["liberty","new","ny","nyc","statue","york"],"emoji":"🗽","text":"","type":1,"order":3840,"group":5,"subgroup":51,"version":0.6},{"label":"church","hexcode":"26EA","tags":["bless","chapel","christian","cross","religion"],"emoji":"⛪️","text":"⛪︎","type":1,"order":3841,"group":5,"subgroup":52,"version":0.6},{"label":"mosque","hexcode":"1F54C","tags":["islam","masjid","muslim","religion"],"emoji":"🕌","text":"","type":1,"order":3842,"group":5,"subgroup":52,"version":1},{"label":"hindu temple","hexcode":"1F6D5","tags":["hindu","temple"],"emoji":"🛕","text":"","type":1,"order":3843,"group":5,"subgroup":52,"version":12},{"label":"synagogue","hexcode":"1F54D","tags":["jew","jewish","judaism","religion","temple"],"emoji":"🕍","text":"","type":1,"order":3844,"group":5,"subgroup":52,"version":1},{"label":"shinto shrine","hexcode":"26E9","tags":["religion","shinto","shrine"],"emoji":"⛩️","text":"⛩︎","type":0,"order":3846,"group":5,"subgroup":52,"version":0.7},{"label":"kaaba","hexcode":"1F54B","tags":["hajj","islam","muslim","religion","umrah"],"emoji":"🕋","text":"","type":1,"order":3847,"group":5,"subgroup":52,"version":1},{"label":"fountain","hexcode":"26F2","tags":["fountain"],"emoji":"⛲️","text":"⛲︎","type":1,"order":3848,"group":5,"subgroup":53,"version":0.6},{"label":"tent","hexcode":"26FA","tags":["camping"],"emoji":"⛺️","text":"⛺︎","type":1,"order":3849,"group":5,"subgroup":53,"version":0.6},{"label":"foggy","hexcode":"1F301","tags":["fog"],"emoji":"🌁","text":"","type":1,"order":3850,"group":5,"subgroup":53,"version":0.6},{"label":"night with stars","hexcode":"1F303","tags":["night","star","stars"],"emoji":"🌃","text":"","type":1,"order":3851,"group":5,"subgroup":53,"version":0.6},{"label":"cityscape","hexcode":"1F3D9","tags":["city"],"emoji":"🏙️","text":"🏙︎","type":0,"order":3853,"group":5,"subgroup":53,"version":0.7},{"label":"sunrise over mountains","hexcode":"1F304","tags":["morning","mountains","over","sun","sunrise"],"emoji":"🌄","text":"","type":1,"order":3854,"group":5,"subgroup":53,"version":0.6},{"label":"sunrise","hexcode":"1F305","tags":["morning","nature","sun"],"emoji":"🌅","text":"","type":1,"order":3855,"group":5,"subgroup":53,"version":0.6},{"label":"cityscape at dusk","hexcode":"1F306","tags":["at","building","city","cityscape","dusk","evening","landscape","sun","sunset"],"emoji":"🌆","text":"","type":1,"order":3856,"group":5,"subgroup":53,"version":0.6},{"label":"sunset","hexcode":"1F307","tags":["building","dusk","sun"],"emoji":"🌇","text":"","type":1,"order":3857,"group":5,"subgroup":53,"version":0.6},{"label":"bridge at night","hexcode":"1F309","tags":["at","bridge","night"],"emoji":"🌉","text":"","type":1,"order":3858,"group":5,"subgroup":53,"version":0.6},{"label":"hot springs","hexcode":"2668","tags":["hot","hotsprings","springs","steaming"],"emoji":"♨️","text":"♨︎","type":0,"order":3860,"group":5,"subgroup":53,"version":0.6},{"label":"carousel horse","hexcode":"1F3A0","tags":["carousel","entertainment","horse"],"emoji":"🎠","text":"","type":1,"order":3861,"group":5,"subgroup":53,"version":0.6},{"label":"playground slide","hexcode":"1F6DD","tags":["amusement","park","play","playground","playing","slide","sliding","theme"],"emoji":"🛝","text":"","type":1,"order":3862,"group":5,"subgroup":53,"version":14},{"label":"ferris wheel","hexcode":"1F3A1","tags":["amusement","ferris","park","theme","wheel"],"emoji":"🎡","text":"","type":1,"order":3863,"group":5,"subgroup":53,"version":0.6},{"label":"roller coaster","hexcode":"1F3A2","tags":["amusement","coaster","park","roller","theme"],"emoji":"🎢","text":"","type":1,"order":3864,"group":5,"subgroup":53,"version":0.6},{"label":"barber pole","hexcode":"1F488","tags":["barber","cut","fresh","haircut","pole","shave"],"emoji":"💈","text":"","type":1,"order":3865,"group":5,"subgroup":53,"version":0.6},{"label":"circus tent","hexcode":"1F3AA","tags":["circus","tent"],"emoji":"🎪","text":"","type":1,"order":3866,"group":5,"subgroup":53,"version":0.6},{"label":"locomotive","hexcode":"1F682","tags":["caboose","engine","railway","steam","train","trains","travel"],"emoji":"🚂","text":"","type":1,"order":3867,"group":5,"subgroup":54,"version":1},{"label":"railway car","hexcode":"1F683","tags":["car","electric","railway","train","tram","travel","trolleybus"],"emoji":"🚃","text":"","type":1,"order":3868,"group":5,"subgroup":54,"version":0.6},{"label":"high-speed train","hexcode":"1F684","tags":["high-speed","railway","shinkansen","speed","train"],"emoji":"🚄","text":"","type":1,"order":3869,"group":5,"subgroup":54,"version":0.6},{"label":"bullet train","hexcode":"1F685","tags":["bullet","high-speed","nose","railway","shinkansen","speed","train","travel"],"emoji":"🚅","text":"","type":1,"order":3870,"group":5,"subgroup":54,"version":0.6},{"label":"train","hexcode":"1F686","tags":["arrived","choo","railway"],"emoji":"🚆","text":"","type":1,"order":3871,"group":5,"subgroup":54,"version":1},{"label":"metro","hexcode":"1F687","tags":["subway","travel"],"emoji":"🚇️","text":"🚇︎","type":1,"order":3872,"group":5,"subgroup":54,"version":0.6},{"label":"light rail","hexcode":"1F688","tags":["arrived","light","monorail","rail","railway"],"emoji":"🚈","text":"","type":1,"order":3873,"group":5,"subgroup":54,"version":1},{"label":"station","hexcode":"1F689","tags":["railway","train"],"emoji":"🚉","text":"","type":1,"order":3874,"group":5,"subgroup":54,"version":0.6},{"label":"tram","hexcode":"1F68A","tags":["trolleybus"],"emoji":"🚊","text":"","type":1,"order":3875,"group":5,"subgroup":54,"version":1},{"label":"monorail","hexcode":"1F69D","tags":["vehicle"],"emoji":"🚝","text":"","type":1,"order":3876,"group":5,"subgroup":54,"version":1},{"label":"mountain railway","hexcode":"1F69E","tags":["car","mountain","railway","trip"],"emoji":"🚞","text":"","type":1,"order":3877,"group":5,"subgroup":54,"version":1},{"label":"tram car","hexcode":"1F68B","tags":["bus","car","tram","trolley","trolleybus"],"emoji":"🚋","text":"","type":1,"order":3878,"group":5,"subgroup":54,"version":1},{"label":"bus","hexcode":"1F68C","tags":["school","vehicle"],"emoji":"🚌","text":"","type":1,"order":3879,"group":5,"subgroup":54,"version":0.6},{"label":"oncoming bus","hexcode":"1F68D","tags":["bus","cars","oncoming"],"emoji":"🚍️","text":"🚍︎","type":1,"order":3880,"group":5,"subgroup":54,"version":0.7},{"label":"trolleybus","hexcode":"1F68E","tags":["bus","tram","trolley"],"emoji":"🚎","text":"","type":1,"order":3881,"group":5,"subgroup":54,"version":1},{"label":"minibus","hexcode":"1F690","tags":["bus","drive","van","vehicle"],"emoji":"🚐","text":"","type":1,"order":3882,"group":5,"subgroup":54,"version":1},{"label":"ambulance","hexcode":"1F691","tags":["emergency","vehicle"],"emoji":"🚑️","text":"🚑︎","type":1,"order":3883,"group":5,"subgroup":54,"version":0.6},{"label":"fire engine","hexcode":"1F692","tags":["engine","fire","truck"],"emoji":"🚒","text":"","type":1,"order":3884,"group":5,"subgroup":54,"version":0.6},{"label":"police car","hexcode":"1F693","tags":["5–0","car","cops","patrol","police"],"emoji":"🚓","text":"","type":1,"order":3885,"group":5,"subgroup":54,"version":0.6},{"label":"oncoming police car","hexcode":"1F694","tags":["car","oncoming","police"],"emoji":"🚔️","text":"🚔︎","type":1,"order":3886,"group":5,"subgroup":54,"version":0.7},{"label":"taxi","hexcode":"1F695","tags":["cab","cabbie","car","drive","vehicle","yellow"],"emoji":"🚕","text":"","type":1,"order":3887,"group":5,"subgroup":54,"version":0.6},{"label":"oncoming taxi","hexcode":"1F696","tags":["cab","cabbie","cars","drove","hail","oncoming","taxi","yellow"],"emoji":"🚖","text":"","type":1,"order":3888,"group":5,"subgroup":54,"version":1},{"label":"automobile","hexcode":"1F697","tags":["car","driving","vehicle"],"emoji":"🚗","text":"","type":1,"order":3889,"group":5,"subgroup":54,"version":0.6},{"label":"oncoming automobile","hexcode":"1F698","tags":["automobile","car","cars","drove","oncoming","vehicle"],"emoji":"🚘️","text":"🚘︎","type":1,"order":3890,"group":5,"subgroup":54,"version":0.7},{"label":"sport utility vehicle","hexcode":"1F699","tags":["car","drive","recreational","sport","sportutility","utility","vehicle"],"emoji":"🚙","text":"","type":1,"order":3891,"group":5,"subgroup":54,"version":0.6},{"label":"pickup truck","hexcode":"1F6FB","tags":["automobile","car","flatbed","pick-up","pickup","transportation","truck"],"emoji":"🛻","text":"","type":1,"order":3892,"group":5,"subgroup":54,"version":13},{"label":"delivery truck","hexcode":"1F69A","tags":["car","delivery","drive","truck","vehicle"],"emoji":"🚚","text":"","type":1,"order":3893,"group":5,"subgroup":54,"version":0.6},{"label":"articulated lorry","hexcode":"1F69B","tags":["articulated","car","drive","lorry","move","semi","truck","vehicle"],"emoji":"🚛","text":"","type":1,"order":3894,"group":5,"subgroup":54,"version":1},{"label":"tractor","hexcode":"1F69C","tags":["vehicle"],"emoji":"🚜","text":"","type":1,"order":3895,"group":5,"subgroup":54,"version":1},{"label":"racing car","hexcode":"1F3CE","tags":["car","racing","zoom"],"emoji":"🏎️","text":"🏎︎","type":0,"order":3897,"group":5,"subgroup":54,"version":0.7},{"label":"motorcycle","hexcode":"1F3CD","tags":["racing"],"emoji":"🏍️","text":"🏍︎","type":0,"order":3899,"group":5,"subgroup":54,"version":0.7},{"label":"motor scooter","hexcode":"1F6F5","tags":["motor","scooter"],"emoji":"🛵","text":"","type":1,"order":3900,"group":5,"subgroup":54,"version":3},{"label":"manual wheelchair","hexcode":"1F9BD","tags":["accessibility","manual","wheelchair"],"emoji":"🦽","text":"","type":1,"order":3901,"group":5,"subgroup":54,"version":12},{"label":"motorized wheelchair","hexcode":"1F9BC","tags":["accessibility","motorized","wheelchair"],"emoji":"🦼","text":"","type":1,"order":3902,"group":5,"subgroup":54,"version":12},{"label":"auto rickshaw","hexcode":"1F6FA","tags":["auto","rickshaw","tuk"],"emoji":"🛺","text":"","type":1,"order":3903,"group":5,"subgroup":54,"version":12},{"label":"bicycle","hexcode":"1F6B2","tags":["bike","class","cycle","cycling","cyclist","gang","ride","spin","spinning"],"emoji":"🚲️","text":"🚲︎","type":1,"order":3904,"group":5,"subgroup":54,"version":0.6},{"label":"kick scooter","hexcode":"1F6F4","tags":["kick","scooter"],"emoji":"🛴","text":"","type":1,"order":3905,"group":5,"subgroup":54,"version":3},{"label":"skateboard","hexcode":"1F6F9","tags":["board","skate","skater","wheels"],"emoji":"🛹","text":"","type":1,"order":3906,"group":5,"subgroup":54,"version":11},{"label":"roller skate","hexcode":"1F6FC","tags":["blades","roller","skate","skates","sport"],"emoji":"🛼","text":"","type":1,"order":3907,"group":5,"subgroup":54,"version":13},{"label":"bus stop","hexcode":"1F68F","tags":["bus","busstop","stop"],"emoji":"🚏","text":"","type":1,"order":3908,"group":5,"subgroup":54,"version":0.6},{"label":"motorway","hexcode":"1F6E3","tags":["highway","road"],"emoji":"🛣️","text":"🛣︎","type":0,"order":3910,"group":5,"subgroup":54,"version":0.7},{"label":"railway track","hexcode":"1F6E4","tags":["railway","track","train"],"emoji":"🛤️","text":"🛤︎","type":0,"order":3912,"group":5,"subgroup":54,"version":0.7},{"label":"oil drum","hexcode":"1F6E2","tags":["drum","oil"],"emoji":"🛢️","text":"🛢︎","type":0,"order":3914,"group":5,"subgroup":54,"version":0.7},{"label":"fuel pump","hexcode":"26FD","tags":["diesel","fuel","fuelpump","gas","gasoline","pump","station"],"emoji":"⛽️","text":"⛽︎","type":1,"order":3915,"group":5,"subgroup":54,"version":0.6},{"label":"wheel","hexcode":"1F6DE","tags":["car","circle","tire","turn","vehicle"],"emoji":"🛞","text":"","type":1,"order":3916,"group":5,"subgroup":54,"version":14},{"label":"police car light","hexcode":"1F6A8","tags":["alarm","alert","beacon","car","emergency","light","police","revolving","siren"],"emoji":"🚨","text":"","type":1,"order":3917,"group":5,"subgroup":54,"version":0.6},{"label":"horizontal traffic light","hexcode":"1F6A5","tags":["horizontal","intersection","light","signal","stop","stoplight","traffic"],"emoji":"🚥","text":"","type":1,"order":3918,"group":5,"subgroup":54,"version":0.6},{"label":"vertical traffic light","hexcode":"1F6A6","tags":["drove","intersection","light","signal","stop","stoplight","traffic","vertical"],"emoji":"🚦","text":"","type":1,"order":3919,"group":5,"subgroup":54,"version":1},{"label":"stop sign","hexcode":"1F6D1","tags":["octagonal","sign","stop"],"emoji":"🛑","text":"","type":1,"order":3920,"group":5,"subgroup":54,"version":3},{"label":"construction","hexcode":"1F6A7","tags":["barrier"],"emoji":"🚧","text":"","type":1,"order":3921,"group":5,"subgroup":54,"version":0.6},{"label":"anchor","hexcode":"2693","tags":["ship","tool"],"emoji":"⚓️","text":"⚓︎","type":1,"order":3922,"group":5,"subgroup":55,"version":0.6},{"label":"ring buoy","hexcode":"1F6DF","tags":["buoy","float","life","lifesaver","preserver","rescue","ring","safety","save","saver","swim"],"emoji":"🛟","text":"","type":1,"order":3923,"group":5,"subgroup":55,"version":14},{"label":"sailboat","hexcode":"26F5","tags":["boat","resort","sailing","sea","yacht"],"emoji":"⛵️","text":"⛵︎","type":1,"order":3924,"group":5,"subgroup":55,"version":0.6},{"label":"canoe","hexcode":"1F6F6","tags":["boat"],"emoji":"🛶","text":"","type":1,"order":3925,"group":5,"subgroup":55,"version":3},{"label":"speedboat","hexcode":"1F6A4","tags":["billionaire","boat","lake","luxury","millionaire","summer","travel"],"emoji":"🚤","text":"","type":1,"order":3926,"group":5,"subgroup":55,"version":0.6},{"label":"passenger ship","hexcode":"1F6F3","tags":["passenger","ship"],"emoji":"🛳️","text":"🛳︎","type":0,"order":3928,"group":5,"subgroup":55,"version":0.7},{"label":"ferry","hexcode":"26F4","tags":["boat","passenger"],"emoji":"⛴️","text":"⛴︎","type":0,"order":3930,"group":5,"subgroup":55,"version":0.7},{"label":"motor boat","hexcode":"1F6E5","tags":["boat","motor","motorboat"],"emoji":"🛥️","text":"🛥︎","type":0,"order":3932,"group":5,"subgroup":55,"version":0.7},{"label":"ship","hexcode":"1F6A2","tags":["boat","passenger","travel"],"emoji":"🚢","text":"","type":1,"order":3933,"group":5,"subgroup":55,"version":0.6},{"label":"airplane","hexcode":"2708","tags":["aeroplane","fly","flying","jet","plane","travel"],"emoji":"✈️","text":"✈︎","type":0,"order":3935,"group":5,"subgroup":56,"version":0.6},{"label":"small airplane","hexcode":"1F6E9","tags":["aeroplane","airplane","plane","small"],"emoji":"🛩️","text":"🛩︎","type":0,"order":3937,"group":5,"subgroup":56,"version":0.7},{"label":"airplane departure","hexcode":"1F6EB","tags":["aeroplane","airplane","check-in","departure","departures","plane"],"emoji":"🛫","text":"","type":1,"order":3938,"group":5,"subgroup":56,"version":1},{"label":"airplane arrival","hexcode":"1F6EC","tags":["aeroplane","airplane","arrival","arrivals","arriving","landing","plane"],"emoji":"🛬","text":"","type":1,"order":3939,"group":5,"subgroup":56,"version":1},{"label":"parachute","hexcode":"1FA82","tags":["hang-glide","parasail","skydive"],"emoji":"🪂","text":"","type":1,"order":3940,"group":5,"subgroup":56,"version":12},{"label":"seat","hexcode":"1F4BA","tags":["chair"],"emoji":"💺","text":"","type":1,"order":3941,"group":5,"subgroup":56,"version":0.6},{"label":"helicopter","hexcode":"1F681","tags":["copter","roflcopter","travel","vehicle"],"emoji":"🚁","text":"","type":1,"order":3942,"group":5,"subgroup":56,"version":1},{"label":"suspension railway","hexcode":"1F69F","tags":["railway","suspension"],"emoji":"🚟","text":"","type":1,"order":3943,"group":5,"subgroup":56,"version":1},{"label":"mountain cableway","hexcode":"1F6A0","tags":["cable","cableway","gondola","lift","mountain","ski"],"emoji":"🚠","text":"","type":1,"order":3944,"group":5,"subgroup":56,"version":1},{"label":"aerial tramway","hexcode":"1F6A1","tags":["aerial","cable","car","gondola","ropeway","tramway"],"emoji":"🚡","text":"","type":1,"order":3945,"group":5,"subgroup":56,"version":1},{"label":"satellite","hexcode":"1F6F0","tags":["space"],"emoji":"🛰️","text":"🛰︎","type":0,"order":3947,"group":5,"subgroup":56,"version":0.7},{"label":"rocket","hexcode":"1F680","tags":["launch","rockets","space","travel"],"emoji":"🚀","text":"","type":1,"order":3948,"group":5,"subgroup":56,"version":0.6},{"label":"flying saucer","hexcode":"1F6F8","tags":["aliens","extra","flying","saucer","terrestrial","ufo"],"emoji":"🛸","text":"","type":1,"order":3949,"group":5,"subgroup":56,"version":5},{"label":"bellhop bell","hexcode":"1F6CE","tags":["bell","bellhop","hotel"],"emoji":"🛎️","text":"🛎︎","type":0,"order":3951,"group":5,"subgroup":57,"version":0.7},{"label":"luggage","hexcode":"1F9F3","tags":["bag","packing","roller","suitcase","travel"],"emoji":"🧳","text":"","type":1,"order":3952,"group":5,"subgroup":57,"version":11},{"label":"hourglass done","hexcode":"231B","tags":["done","hourglass","sand","time","timer"],"emoji":"⌛️","text":"⌛︎","type":1,"order":3953,"group":5,"subgroup":58,"version":0.6},{"label":"hourglass not done","hexcode":"23F3","tags":["done","flowing","hourglass","hours","not","sand","timer","waiting","yolo"],"emoji":"⏳️","text":"⏳︎","type":1,"order":3954,"group":5,"subgroup":58,"version":0.6},{"label":"watch","hexcode":"231A","tags":["clock","time"],"emoji":"⌚️","text":"⌚︎","type":1,"order":3955,"group":5,"subgroup":58,"version":0.6},{"label":"alarm clock","hexcode":"23F0","tags":["alarm","clock","hours","hrs","late","time","waiting"],"emoji":"⏰️","text":"⏰︎","type":1,"order":3956,"group":5,"subgroup":58,"version":0.6},{"label":"stopwatch","hexcode":"23F1","tags":["clock","time"],"emoji":"⏱️","text":"⏱︎","type":0,"order":3958,"group":5,"subgroup":58,"version":1},{"label":"timer clock","hexcode":"23F2","tags":["clock","timer"],"emoji":"⏲️","text":"⏲︎","type":0,"order":3960,"group":5,"subgroup":58,"version":1},{"label":"mantelpiece clock","hexcode":"1F570","tags":["clock","mantelpiece","time"],"emoji":"🕰️","text":"🕰︎","type":0,"order":3962,"group":5,"subgroup":58,"version":0.7},{"label":"twelve o’clock","hexcode":"1F55B","tags":["12","12:00","clock","o’clock","time","twelve"],"emoji":"🕛️","text":"🕛︎","type":1,"order":3963,"group":5,"subgroup":58,"version":0.6},{"label":"twelve-thirty","hexcode":"1F567","tags":["12","12:30","30","clock","thirty","time","twelve"],"emoji":"🕧️","text":"🕧︎","type":1,"order":3964,"group":5,"subgroup":58,"version":0.7},{"label":"one o’clock","hexcode":"1F550","tags":["1","1:00","clock","one","o’clock","time"],"emoji":"🕐️","text":"🕐︎","type":1,"order":3965,"group":5,"subgroup":58,"version":0.6},{"label":"one-thirty","hexcode":"1F55C","tags":["1","1:30","30","clock","one","thirty","time"],"emoji":"🕜️","text":"🕜︎","type":1,"order":3966,"group":5,"subgroup":58,"version":0.7},{"label":"two o’clock","hexcode":"1F551","tags":["2","2:00","clock","o’clock","time","two"],"emoji":"🕑️","text":"🕑︎","type":1,"order":3967,"group":5,"subgroup":58,"version":0.6},{"label":"two-thirty","hexcode":"1F55D","tags":["2","2:30","30","clock","thirty","time","two"],"emoji":"🕝️","text":"🕝︎","type":1,"order":3968,"group":5,"subgroup":58,"version":0.7},{"label":"three o’clock","hexcode":"1F552","tags":["3","3:00","clock","o’clock","three","time"],"emoji":"🕒️","text":"🕒︎","type":1,"order":3969,"group":5,"subgroup":58,"version":0.6},{"label":"three-thirty","hexcode":"1F55E","tags":["3","30","3:30","clock","thirty","three","time"],"emoji":"🕞️","text":"🕞︎","type":1,"order":3970,"group":5,"subgroup":58,"version":0.7},{"label":"four o’clock","hexcode":"1F553","tags":["4","4:00","clock","four","o’clock","time"],"emoji":"🕓️","text":"🕓︎","type":1,"order":3971,"group":5,"subgroup":58,"version":0.6},{"label":"four-thirty","hexcode":"1F55F","tags":["30","4","4:30","clock","four","thirty","time"],"emoji":"🕟️","text":"🕟︎","type":1,"order":3972,"group":5,"subgroup":58,"version":0.7},{"label":"five o’clock","hexcode":"1F554","tags":["5","5:00","clock","five","o’clock","time"],"emoji":"🕔️","text":"🕔︎","type":1,"order":3973,"group":5,"subgroup":58,"version":0.6},{"label":"five-thirty","hexcode":"1F560","tags":["30","5","5:30","clock","five","thirty","time"],"emoji":"🕠️","text":"🕠︎","type":1,"order":3974,"group":5,"subgroup":58,"version":0.7},{"label":"six o’clock","hexcode":"1F555","tags":["6","6:00","clock","o’clock","six","time"],"emoji":"🕕️","text":"🕕︎","type":1,"order":3975,"group":5,"subgroup":58,"version":0.6},{"label":"six-thirty","hexcode":"1F561","tags":["30","6","6:30","clock","six","thirty"],"emoji":"🕡️","text":"🕡︎","type":1,"order":3976,"group":5,"subgroup":58,"version":0.7},{"label":"seven o’clock","hexcode":"1F556","tags":["0","7","7:00","clock","o’clock","seven"],"emoji":"🕖️","text":"🕖︎","type":1,"order":3977,"group":5,"subgroup":58,"version":0.6},{"label":"seven-thirty","hexcode":"1F562","tags":["30","7","7:30","clock","seven","thirty"],"emoji":"🕢️","text":"🕢︎","type":1,"order":3978,"group":5,"subgroup":58,"version":0.7},{"label":"eight o’clock","hexcode":"1F557","tags":["8","8:00","clock","eight","o’clock","time"],"emoji":"🕗️","text":"🕗︎","type":1,"order":3979,"group":5,"subgroup":58,"version":0.6},{"label":"eight-thirty","hexcode":"1F563","tags":["30","8","8:30","clock","eight","thirty","time"],"emoji":"🕣️","text":"🕣︎","type":1,"order":3980,"group":5,"subgroup":58,"version":0.7},{"label":"nine o’clock","hexcode":"1F558","tags":["9","9:00","clock","nine","o’clock","time"],"emoji":"🕘️","text":"🕘︎","type":1,"order":3981,"group":5,"subgroup":58,"version":0.6},{"label":"nine-thirty","hexcode":"1F564","tags":["30","9","9:30","clock","nine","thirty","time"],"emoji":"🕤️","text":"🕤︎","type":1,"order":3982,"group":5,"subgroup":58,"version":0.7},{"label":"ten o’clock","hexcode":"1F559","tags":["0","10","10:00","clock","o’clock","ten"],"emoji":"🕙️","text":"🕙︎","type":1,"order":3983,"group":5,"subgroup":58,"version":0.6},{"label":"ten-thirty","hexcode":"1F565","tags":["10","10:30","30","clock","ten","thirty","time"],"emoji":"🕥️","text":"🕥︎","type":1,"order":3984,"group":5,"subgroup":58,"version":0.7},{"label":"eleven o’clock","hexcode":"1F55A","tags":["11","11:00","clock","eleven","o’clock","time"],"emoji":"🕚️","text":"🕚︎","type":1,"order":3985,"group":5,"subgroup":58,"version":0.6},{"label":"eleven-thirty","hexcode":"1F566","tags":["11","11:30","30","clock","eleven","thirty","time"],"emoji":"🕦️","text":"🕦︎","type":1,"order":3986,"group":5,"subgroup":58,"version":0.7},{"label":"new moon","hexcode":"1F311","tags":["dark","moon","new","space"],"emoji":"🌑","text":"","type":1,"order":3987,"group":5,"subgroup":59,"version":0.6},{"label":"waxing crescent moon","hexcode":"1F312","tags":["crescent","dreams","moon","space","waxing"],"emoji":"🌒","text":"","type":1,"order":3988,"group":5,"subgroup":59,"version":1},{"label":"first quarter moon","hexcode":"1F313","tags":["first","moon","quarter","space"],"emoji":"🌓","text":"","type":1,"order":3989,"group":5,"subgroup":59,"version":0.6},{"label":"waxing gibbous moon","hexcode":"1F314","tags":["gibbous","moon","space","waxing"],"emoji":"🌔","text":"","type":1,"order":3990,"group":5,"subgroup":59,"version":0.6},{"label":"full moon","hexcode":"1F315","tags":["full","moon","space"],"emoji":"🌕️","text":"🌕︎","type":1,"order":3991,"group":5,"subgroup":59,"version":0.6},{"label":"waning gibbous moon","hexcode":"1F316","tags":["gibbous","moon","space","waning"],"emoji":"🌖","text":"","type":1,"order":3992,"group":5,"subgroup":59,"version":1},{"label":"last quarter moon","hexcode":"1F317","tags":["last","moon","quarter","space"],"emoji":"🌗","text":"","type":1,"order":3993,"group":5,"subgroup":59,"version":1},{"label":"waning crescent moon","hexcode":"1F318","tags":["crescent","moon","space","waning"],"emoji":"🌘","text":"","type":1,"order":3994,"group":5,"subgroup":59,"version":1},{"label":"crescent moon","hexcode":"1F319","tags":["crescent","moon","ramadan","space"],"emoji":"🌙","text":"","type":1,"order":3995,"group":5,"subgroup":59,"version":0.6},{"label":"new moon face","hexcode":"1F31A","tags":["face","moon","new","space"],"emoji":"🌚","text":"","type":1,"order":3996,"group":5,"subgroup":59,"version":1},{"label":"first quarter moon face","hexcode":"1F31B","tags":["face","first","moon","quarter","space"],"emoji":"🌛","text":"","type":1,"order":3997,"group":5,"subgroup":59,"version":0.6},{"label":"last quarter moon face","hexcode":"1F31C","tags":["dreams","face","last","moon","quarter"],"emoji":"🌜️","text":"🌜︎","type":1,"order":3998,"group":5,"subgroup":59,"version":0.7},{"label":"thermometer","hexcode":"1F321","tags":["weather"],"emoji":"🌡️","text":"🌡︎","type":0,"order":4000,"group":5,"subgroup":59,"version":0.7},{"label":"sun","hexcode":"2600","tags":["bright","rays","space","sunny","weather"],"emoji":"☀️","text":"☀︎","type":0,"order":4002,"group":5,"subgroup":59,"version":0.6},{"label":"full moon face","hexcode":"1F31D","tags":["bright","face","full","moon"],"emoji":"🌝","text":"","type":1,"order":4003,"group":5,"subgroup":59,"version":1},{"label":"sun with face","hexcode":"1F31E","tags":["beach","bright","day","face","heat","shine","sun","sunny","sunshine","weather"],"emoji":"🌞","text":"","type":1,"order":4004,"group":5,"subgroup":59,"version":1},{"label":"ringed planet","hexcode":"1FA90","tags":["planet","ringed","saturn","saturnine"],"emoji":"🪐","text":"","type":1,"order":4005,"group":5,"subgroup":59,"version":12},{"label":"star","hexcode":"2B50","tags":["astronomy","medium","stars","white"],"emoji":"⭐️","text":"⭐︎","type":1,"order":4006,"group":5,"subgroup":59,"version":0.6},{"label":"glowing star","hexcode":"1F31F","tags":["glittery","glow","glowing","night","shining","sparkle","star","win"],"emoji":"🌟","text":"","type":1,"order":4007,"group":5,"subgroup":59,"version":0.6},{"label":"shooting star","hexcode":"1F320","tags":["falling","night","shooting","space","star"],"emoji":"🌠","text":"","type":1,"order":4008,"group":5,"subgroup":59,"version":0.6},{"label":"milky way","hexcode":"1F30C","tags":["milky","space","way"],"emoji":"🌌","text":"","type":1,"order":4009,"group":5,"subgroup":59,"version":0.6},{"label":"cloud","hexcode":"2601","tags":["weather"],"emoji":"☁️","text":"☁︎","type":0,"order":4011,"group":5,"subgroup":59,"version":0.6},{"label":"sun behind cloud","hexcode":"26C5","tags":["behind","cloud","cloudy","sun","weather"],"emoji":"⛅️","text":"⛅︎","type":1,"order":4012,"group":5,"subgroup":59,"version":0.6},{"label":"cloud with lightning and rain","hexcode":"26C8","tags":["cloud","lightning","rain","thunder","thunderstorm"],"emoji":"⛈️","text":"⛈︎","type":0,"order":4014,"group":5,"subgroup":59,"version":0.7},{"label":"sun behind small cloud","hexcode":"1F324","tags":["behind","cloud","sun","weather"],"emoji":"🌤️","text":"🌤︎","type":0,"order":4016,"group":5,"subgroup":59,"version":0.7},{"label":"sun behind large cloud","hexcode":"1F325","tags":["behind","cloud","sun","weather"],"emoji":"🌥️","text":"🌥︎","type":0,"order":4018,"group":5,"subgroup":59,"version":0.7},{"label":"sun behind rain cloud","hexcode":"1F326","tags":["behind","cloud","rain","sun","weather"],"emoji":"🌦️","text":"🌦︎","type":0,"order":4020,"group":5,"subgroup":59,"version":0.7},{"label":"cloud with rain","hexcode":"1F327","tags":["cloud","rain","weather"],"emoji":"🌧️","text":"🌧︎","type":0,"order":4022,"group":5,"subgroup":59,"version":0.7},{"label":"cloud with snow","hexcode":"1F328","tags":["cloud","cold","snow","weather"],"emoji":"🌨️","text":"🌨︎","type":0,"order":4024,"group":5,"subgroup":59,"version":0.7},{"label":"cloud with lightning","hexcode":"1F329","tags":["cloud","lightning","weather"],"emoji":"🌩️","text":"🌩︎","type":0,"order":4026,"group":5,"subgroup":59,"version":0.7},{"label":"tornado","hexcode":"1F32A","tags":["cloud","weather","whirlwind"],"emoji":"🌪️","text":"🌪︎","type":0,"order":4028,"group":5,"subgroup":59,"version":0.7},{"label":"fog","hexcode":"1F32B","tags":["cloud","weather"],"emoji":"🌫️","text":"🌫︎","type":0,"order":4030,"group":5,"subgroup":59,"version":0.7},{"label":"wind face","hexcode":"1F32C","tags":["blow","cloud","face","wind"],"emoji":"🌬️","text":"🌬︎","type":0,"order":4032,"group":5,"subgroup":59,"version":0.7},{"label":"cyclone","hexcode":"1F300","tags":["dizzy","hurricane","twister","typhoon","weather"],"emoji":"🌀","text":"","type":1,"order":4033,"group":5,"subgroup":59,"version":0.6},{"label":"rainbow","hexcode":"1F308","tags":["gay","genderqueer","glbt","glbtq","lesbian","lgbt","lgbtq","lgbtqia","nature","pride","queer","rain","trans","transgender","weather"],"emoji":"🌈","text":"","type":1,"order":4034,"group":5,"subgroup":59,"version":0.6},{"label":"closed umbrella","hexcode":"1F302","tags":["closed","clothing","rain","umbrella"],"emoji":"🌂","text":"","type":1,"order":4035,"group":5,"subgroup":59,"version":0.6},{"label":"umbrella","hexcode":"2602","tags":["clothing","rain"],"emoji":"☂️","text":"☂︎","type":0,"order":4037,"group":5,"subgroup":59,"version":0.7},{"label":"umbrella with rain drops","hexcode":"2614","tags":["clothing","drop","drops","rain","umbrella","weather"],"emoji":"☔️","text":"☔︎","type":1,"order":4038,"group":5,"subgroup":59,"version":0.6},{"label":"umbrella on ground","hexcode":"26F1","tags":["ground","rain","sun","umbrella"],"emoji":"⛱️","text":"⛱︎","type":0,"order":4040,"group":5,"subgroup":59,"version":0.7},{"label":"high voltage","hexcode":"26A1","tags":["danger","electric","electricity","high","lightning","nature","thunder","thunderbolt","voltage","zap"],"emoji":"⚡️","text":"⚡︎","type":1,"order":4041,"group":5,"subgroup":59,"version":0.6},{"label":"snowflake","hexcode":"2744","tags":["cold","snow","weather"],"emoji":"❄️","text":"❄︎","type":0,"order":4043,"group":5,"subgroup":59,"version":0.6},{"label":"snowman","hexcode":"2603","tags":["cold","man","snow"],"emoji":"☃️","text":"☃︎","type":0,"order":4045,"group":5,"subgroup":59,"version":0.7},{"label":"snowman without snow","hexcode":"26C4","tags":["cold","man","snow","snowman"],"emoji":"⛄️","text":"⛄︎","type":1,"order":4046,"group":5,"subgroup":59,"version":0.6},{"label":"comet","hexcode":"2604","tags":["space"],"emoji":"☄️","text":"☄︎","type":0,"order":4048,"group":5,"subgroup":59,"version":1},{"label":"fire","hexcode":"1F525","tags":["af","burn","flame","hot","lit","litaf","tool"],"emoji":"🔥","text":"","type":1,"order":4049,"group":5,"subgroup":59,"version":0.6},{"label":"droplet","hexcode":"1F4A7","tags":["cold","comic","drop","nature","sad","sweat","tear","water","weather"],"emoji":"💧","text":"","type":1,"order":4050,"group":5,"subgroup":59,"version":0.6},{"label":"water wave","hexcode":"1F30A","tags":["nature","ocean","surf","surfer","surfing","water","wave"],"emoji":"🌊","text":"","type":1,"order":4051,"group":5,"subgroup":59,"version":0.6},{"label":"jack-o-lantern","hexcode":"1F383","tags":["celebration","halloween","jack","lantern","pumpkin"],"emoji":"🎃","text":"","type":1,"order":4052,"group":6,"subgroup":60,"version":0.6},{"label":"Christmas tree","hexcode":"1F384","tags":["celebration","christmas","tree"],"emoji":"🎄","text":"","type":1,"order":4053,"group":6,"subgroup":60,"version":0.6},{"label":"fireworks","hexcode":"1F386","tags":["boom","celebration","entertainment","yolo"],"emoji":"🎆","text":"","type":1,"order":4054,"group":6,"subgroup":60,"version":0.6},{"label":"sparkler","hexcode":"1F387","tags":["boom","celebration","fireworks","sparkle"],"emoji":"🎇","text":"","type":1,"order":4055,"group":6,"subgroup":60,"version":0.6},{"label":"firecracker","hexcode":"1F9E8","tags":["dynamite","explosive","fire","fireworks","light","pop","popping","spark"],"emoji":"🧨","text":"","type":1,"order":4056,"group":6,"subgroup":60,"version":11},{"label":"sparkles","hexcode":"2728","tags":["*","magic","sparkle","star"],"emoji":"✨️","text":"✨︎","type":1,"order":4057,"group":6,"subgroup":60,"version":0.6},{"label":"balloon","hexcode":"1F388","tags":["birthday","celebrate","celebration"],"emoji":"🎈","text":"","type":1,"order":4058,"group":6,"subgroup":60,"version":0.6},{"label":"party popper","hexcode":"1F389","tags":["awesome","birthday","celebrate","celebration","excited","hooray","party","popper","tada","woohoo"],"emoji":"🎉","text":"","type":1,"order":4059,"group":6,"subgroup":60,"version":0.6},{"label":"confetti ball","hexcode":"1F38A","tags":["ball","celebrate","celebration","confetti","party","woohoo"],"emoji":"🎊","text":"","type":1,"order":4060,"group":6,"subgroup":60,"version":0.6},{"label":"tanabata tree","hexcode":"1F38B","tags":["banner","celebration","japanese","tanabata","tree"],"emoji":"🎋","text":"","type":1,"order":4061,"group":6,"subgroup":60,"version":0.6},{"label":"pine decoration","hexcode":"1F38D","tags":["bamboo","celebration","decoration","japanese","pine","plant"],"emoji":"🎍","text":"","type":1,"order":4062,"group":6,"subgroup":60,"version":0.6},{"label":"Japanese dolls","hexcode":"1F38E","tags":["celebration","doll","dolls","festival","japanese"],"emoji":"🎎","text":"","type":1,"order":4063,"group":6,"subgroup":60,"version":0.6},{"label":"carp streamer","hexcode":"1F38F","tags":["carp","celebration","streamer"],"emoji":"🎏","text":"","type":1,"order":4064,"group":6,"subgroup":60,"version":0.6},{"label":"wind chime","hexcode":"1F390","tags":["bell","celebration","chime","wind"],"emoji":"🎐","text":"","type":1,"order":4065,"group":6,"subgroup":60,"version":0.6},{"label":"moon viewing ceremony","hexcode":"1F391","tags":["celebration","ceremony","moon","viewing"],"emoji":"🎑","text":"","type":1,"order":4066,"group":6,"subgroup":60,"version":0.6},{"label":"red envelope","hexcode":"1F9E7","tags":["envelope","gift","good","hóngbāo","lai","luck","money","red","see"],"emoji":"🧧","text":"","type":1,"order":4067,"group":6,"subgroup":60,"version":11},{"label":"ribbon","hexcode":"1F380","tags":["celebration"],"emoji":"🎀","text":"","type":1,"order":4068,"group":6,"subgroup":60,"version":0.6},{"label":"wrapped gift","hexcode":"1F381","tags":["birthday","bow","box","celebration","christmas","gift","present","surprise","wrapped"],"emoji":"🎁","text":"","type":1,"order":4069,"group":6,"subgroup":60,"version":0.6},{"label":"reminder ribbon","hexcode":"1F397","tags":["celebration","reminder","ribbon"],"emoji":"🎗️","text":"🎗︎","type":0,"order":4071,"group":6,"subgroup":60,"version":0.7},{"label":"admission tickets","hexcode":"1F39F","tags":["admission","ticket","tickets"],"emoji":"🎟️","text":"🎟︎","type":0,"order":4073,"group":6,"subgroup":60,"version":0.7},{"label":"ticket","hexcode":"1F3AB","tags":["admission","stub"],"emoji":"🎫","text":"","type":1,"order":4074,"group":6,"subgroup":60,"version":0.6},{"label":"military medal","hexcode":"1F396","tags":["award","celebration","medal","military"],"emoji":"🎖️","text":"🎖︎","type":0,"order":4076,"group":6,"subgroup":61,"version":0.7},{"label":"trophy","hexcode":"1F3C6","tags":["champion","champs","prize","slay","sport","victory","win","winning"],"emoji":"🏆️","text":"🏆︎","type":1,"order":4077,"group":6,"subgroup":61,"version":0.6},{"label":"sports medal","hexcode":"1F3C5","tags":["award","gold","medal","sports","winner"],"emoji":"🏅","text":"","type":1,"order":4078,"group":6,"subgroup":61,"version":1},{"label":"1st place medal","hexcode":"1F947","tags":["1st","first","gold","medal","place"],"emoji":"🥇","text":"","type":1,"order":4079,"group":6,"subgroup":61,"version":3},{"label":"2nd place medal","hexcode":"1F948","tags":["2nd","medal","place","second","silver"],"emoji":"🥈","text":"","type":1,"order":4080,"group":6,"subgroup":61,"version":3},{"label":"3rd place medal","hexcode":"1F949","tags":["3rd","bronze","medal","place","third"],"emoji":"🥉","text":"","type":1,"order":4081,"group":6,"subgroup":61,"version":3},{"label":"soccer ball","hexcode":"26BD","tags":["ball","football","futbol","soccer","sport"],"emoji":"⚽️","text":"⚽︎","type":1,"order":4082,"group":6,"subgroup":62,"version":0.6},{"label":"baseball","hexcode":"26BE","tags":["ball","sport"],"emoji":"⚾️","text":"⚾︎","type":1,"order":4083,"group":6,"subgroup":62,"version":0.6},{"label":"softball","hexcode":"1F94E","tags":["ball","glove","sports","underarm"],"emoji":"🥎","text":"","type":1,"order":4084,"group":6,"subgroup":62,"version":11},{"label":"basketball","hexcode":"1F3C0","tags":["ball","hoop","sport"],"emoji":"🏀","text":"","type":1,"order":4085,"group":6,"subgroup":62,"version":0.6},{"label":"volleyball","hexcode":"1F3D0","tags":["ball","game"],"emoji":"🏐","text":"","type":1,"order":4086,"group":6,"subgroup":62,"version":1},{"label":"american football","hexcode":"1F3C8","tags":["american","ball","bowl","football","sport","super"],"emoji":"🏈","text":"","type":1,"order":4087,"group":6,"subgroup":62,"version":0.6},{"label":"rugby football","hexcode":"1F3C9","tags":["ball","football","rugby","sport"],"emoji":"🏉","text":"","type":1,"order":4088,"group":6,"subgroup":62,"version":1},{"label":"tennis","hexcode":"1F3BE","tags":["ball","racquet","sport"],"emoji":"🎾","text":"","type":1,"order":4089,"group":6,"subgroup":62,"version":0.6},{"label":"flying disc","hexcode":"1F94F","tags":["disc","flying","ultimate"],"emoji":"🥏","text":"","type":1,"order":4090,"group":6,"subgroup":62,"version":11},{"label":"bowling","hexcode":"1F3B3","tags":["ball","game","sport","strike"],"emoji":"🎳","text":"","type":1,"order":4091,"group":6,"subgroup":62,"version":0.6},{"label":"cricket game","hexcode":"1F3CF","tags":["ball","bat","cricket","game"],"emoji":"🏏","text":"","type":1,"order":4092,"group":6,"subgroup":62,"version":1},{"label":"field hockey","hexcode":"1F3D1","tags":["ball","field","game","hockey","stick"],"emoji":"🏑","text":"","type":1,"order":4093,"group":6,"subgroup":62,"version":1},{"label":"ice hockey","hexcode":"1F3D2","tags":["game","hockey","ice","puck","stick"],"emoji":"🏒","text":"","type":1,"order":4094,"group":6,"subgroup":62,"version":1},{"label":"lacrosse","hexcode":"1F94D","tags":["ball","goal","sports","stick"],"emoji":"🥍","text":"","type":1,"order":4095,"group":6,"subgroup":62,"version":11},{"label":"ping pong","hexcode":"1F3D3","tags":["ball","bat","game","paddle","ping","pingpong","pong","table","tennis"],"emoji":"🏓","text":"","type":1,"order":4096,"group":6,"subgroup":62,"version":1},{"label":"badminton","hexcode":"1F3F8","tags":["birdie","game","racquet","shuttlecock"],"emoji":"🏸","text":"","type":1,"order":4097,"group":6,"subgroup":62,"version":1},{"label":"boxing glove","hexcode":"1F94A","tags":["boxing","glove"],"emoji":"🥊","text":"","type":1,"order":4098,"group":6,"subgroup":62,"version":3},{"label":"martial arts uniform","hexcode":"1F94B","tags":["arts","judo","karate","martial","taekwondo","uniform"],"emoji":"🥋","text":"","type":1,"order":4099,"group":6,"subgroup":62,"version":3},{"label":"goal net","hexcode":"1F945","tags":["goal","net"],"emoji":"🥅","text":"","type":1,"order":4100,"group":6,"subgroup":62,"version":3},{"label":"flag in hole","hexcode":"26F3","tags":["flag","golf","hole","sport"],"emoji":"⛳️","text":"⛳︎","type":1,"order":4101,"group":6,"subgroup":62,"version":0.6},{"label":"ice skate","hexcode":"26F8","tags":["ice","skate","skating"],"emoji":"⛸️","text":"⛸︎","type":0,"order":4103,"group":6,"subgroup":62,"version":0.7},{"label":"fishing pole","hexcode":"1F3A3","tags":["entertainment","fish","fishing","pole","sport"],"emoji":"🎣","text":"","type":1,"order":4104,"group":6,"subgroup":62,"version":0.6},{"label":"diving mask","hexcode":"1F93F","tags":["diving","mask","scuba","snorkeling"],"emoji":"🤿","text":"","type":1,"order":4105,"group":6,"subgroup":62,"version":12},{"label":"running shirt","hexcode":"1F3BD","tags":["athletics","running","sash","shirt"],"emoji":"🎽","text":"","type":1,"order":4106,"group":6,"subgroup":62,"version":0.6},{"label":"skis","hexcode":"1F3BF","tags":["ski","snow","sport"],"emoji":"🎿","text":"","type":1,"order":4107,"group":6,"subgroup":62,"version":0.6},{"label":"sled","hexcode":"1F6F7","tags":["luge","sledge","sleigh","snow","toboggan"],"emoji":"🛷","text":"","type":1,"order":4108,"group":6,"subgroup":62,"version":5},{"label":"curling stone","hexcode":"1F94C","tags":["curling","game","rock","stone"],"emoji":"🥌","text":"","type":1,"order":4109,"group":6,"subgroup":62,"version":5},{"label":"bullseye","hexcode":"1F3AF","tags":["bull","dart","direct","entertainment","game","hit","target"],"emoji":"🎯","text":"","type":1,"order":4110,"group":6,"subgroup":63,"version":0.6},{"label":"yo-yo","hexcode":"1FA80","tags":["fluctuate","toy"],"emoji":"🪀","text":"","type":1,"order":4111,"group":6,"subgroup":63,"version":12},{"label":"kite","hexcode":"1FA81","tags":["fly","soar"],"emoji":"🪁","text":"","type":1,"order":4112,"group":6,"subgroup":63,"version":12},{"label":"water pistol","hexcode":"1F52B","tags":["gun","handgun","pistol","revolver","tool","water","weapon"],"emoji":"🔫","text":"","type":1,"order":4113,"group":6,"subgroup":63,"version":0.6},{"label":"pool 8 ball","hexcode":"1F3B1","tags":["8","8ball","ball","billiard","eight","game","pool"],"emoji":"🎱","text":"","type":1,"order":4114,"group":6,"subgroup":63,"version":0.6},{"label":"crystal ball","hexcode":"1F52E","tags":["ball","crystal","fairy","fairytale","fantasy","fortune","future","magic","tale","tool"],"emoji":"🔮","text":"","type":1,"order":4115,"group":6,"subgroup":63,"version":0.6},{"label":"magic wand","hexcode":"1FA84","tags":["magic","magician","wand","witch","wizard"],"emoji":"🪄","text":"","type":1,"order":4116,"group":6,"subgroup":63,"version":13},{"label":"video game","hexcode":"1F3AE","tags":["controller","entertainment","game","video"],"emoji":"🎮️","text":"🎮︎","type":1,"order":4117,"group":6,"subgroup":63,"version":0.6},{"label":"joystick","hexcode":"1F579","tags":["game","video","videogame"],"emoji":"🕹️","text":"🕹︎","type":0,"order":4119,"group":6,"subgroup":63,"version":0.7},{"label":"slot machine","hexcode":"1F3B0","tags":["casino","gamble","gambling","game","machine","slot","slots"],"emoji":"🎰","text":"","type":1,"order":4120,"group":6,"subgroup":63,"version":0.6},{"label":"game die","hexcode":"1F3B2","tags":["dice","die","entertainment","game"],"emoji":"🎲","text":"","type":1,"order":4121,"group":6,"subgroup":63,"version":0.6},{"label":"puzzle piece","hexcode":"1F9E9","tags":["clue","interlocking","jigsaw","piece","puzzle"],"emoji":"🧩","text":"","type":1,"order":4122,"group":6,"subgroup":63,"version":11},{"label":"teddy bear","hexcode":"1F9F8","tags":["bear","plaything","plush","stuffed","teddy","toy"],"emoji":"🧸","text":"","type":1,"order":4123,"group":6,"subgroup":63,"version":11},{"label":"piñata","hexcode":"1FA85","tags":["candy","celebrate","celebration","cinco","de","festive","mayo","party","pinada","pinata"],"emoji":"🪅","text":"","type":1,"order":4124,"group":6,"subgroup":63,"version":13},{"label":"mirror ball","hexcode":"1FAA9","tags":["ball","dance","disco","glitter","mirror","party"],"emoji":"🪩","text":"","type":1,"order":4125,"group":6,"subgroup":63,"version":14},{"label":"nesting dolls","hexcode":"1FA86","tags":["babooshka","baboushka","babushka","doll","dolls","matryoshka","nesting","russia"],"emoji":"🪆","text":"","type":1,"order":4126,"group":6,"subgroup":63,"version":13},{"label":"spade suit","hexcode":"2660","tags":["card","game","spade","suit"],"emoji":"♠️","text":"♠︎","type":0,"order":4128,"group":6,"subgroup":63,"version":0.6},{"label":"heart suit","hexcode":"2665","tags":["card","emotion","game","heart","hearts","suit"],"emoji":"♥️","text":"♥︎","type":0,"order":4130,"group":6,"subgroup":63,"version":0.6},{"label":"diamond suit","hexcode":"2666","tags":["card","diamond","game","suit"],"emoji":"♦️","text":"♦︎","type":0,"order":4132,"group":6,"subgroup":63,"version":0.6},{"label":"club suit","hexcode":"2663","tags":["card","club","clubs","game","suit"],"emoji":"♣️","text":"♣︎","type":0,"order":4134,"group":6,"subgroup":63,"version":0.6},{"label":"chess pawn","hexcode":"265F","tags":["chess","dupe","expendable","pawn"],"emoji":"♟️","text":"♟︎","type":0,"order":4136,"group":6,"subgroup":63,"version":11},{"label":"joker","hexcode":"1F0CF","tags":["card","game","wildcard"],"emoji":"🃏","text":"","type":1,"order":4137,"group":6,"subgroup":63,"version":0.6},{"label":"mahjong red dragon","hexcode":"1F004","tags":["dragon","game","mahjong","red"],"emoji":"🀄️","text":"🀄︎","type":1,"order":4138,"group":6,"subgroup":63,"version":0.6},{"label":"flower playing cards","hexcode":"1F3B4","tags":["card","cards","flower","game","japanese","playing"],"emoji":"🎴","text":"","type":1,"order":4139,"group":6,"subgroup":63,"version":0.6},{"label":"performing arts","hexcode":"1F3AD","tags":["actor","actress","art","arts","entertainment","mask","performing","theater","theatre","thespian"],"emoji":"🎭️","text":"🎭︎","type":1,"order":4140,"group":6,"subgroup":64,"version":0.6},{"label":"framed picture","hexcode":"1F5BC","tags":["art","frame","framed","museum","painting","picture"],"emoji":"🖼️","text":"🖼︎","type":0,"order":4142,"group":6,"subgroup":64,"version":0.7},{"label":"artist palette","hexcode":"1F3A8","tags":["art","artist","artsy","arty","colorful","creative","entertainment","museum","painter","painting","palette"],"emoji":"🎨","text":"","type":1,"order":4143,"group":6,"subgroup":64,"version":0.6},{"label":"thread","hexcode":"1F9F5","tags":["needle","sewing","spool","string"],"emoji":"🧵","text":"","type":1,"order":4144,"group":6,"subgroup":64,"version":11},{"label":"sewing needle","hexcode":"1FAA1","tags":["embroidery","needle","sew","sewing","stitches","sutures","tailoring","thread"],"emoji":"🪡","text":"","type":1,"order":4145,"group":6,"subgroup":64,"version":13},{"label":"yarn","hexcode":"1F9F6","tags":["ball","crochet","knit"],"emoji":"🧶","text":"","type":1,"order":4146,"group":6,"subgroup":64,"version":11},{"label":"knot","hexcode":"1FAA2","tags":["cord","rope","tangled","tie","twine","twist"],"emoji":"🪢","text":"","type":1,"order":4147,"group":6,"subgroup":64,"version":13},{"label":"glasses","hexcode":"1F453","tags":["clothing","eye","eyeglasses","eyewear"],"emoji":"👓️","text":"👓︎","type":1,"order":4148,"group":7,"subgroup":65,"version":0.6},{"label":"sunglasses","hexcode":"1F576","tags":["dark","eye","eyewear","glasses"],"emoji":"🕶️","text":"🕶︎","type":0,"order":4150,"group":7,"subgroup":65,"version":0.7},{"label":"goggles","hexcode":"1F97D","tags":["dive","eye","protection","scuba","swimming","welding"],"emoji":"🥽","text":"","type":1,"order":4151,"group":7,"subgroup":65,"version":11},{"label":"lab coat","hexcode":"1F97C","tags":["clothes","coat","doctor","dr","experiment","jacket","lab","scientist","white"],"emoji":"🥼","text":"","type":1,"order":4152,"group":7,"subgroup":65,"version":11},{"label":"safety vest","hexcode":"1F9BA","tags":["emergency","safety","vest"],"emoji":"🦺","text":"","type":1,"order":4153,"group":7,"subgroup":65,"version":12},{"label":"necktie","hexcode":"1F454","tags":["clothing","employed","serious","shirt","tie"],"emoji":"👔","text":"","type":1,"order":4154,"group":7,"subgroup":65,"version":0.6},{"label":"t-shirt","hexcode":"1F455","tags":["blue","casual","clothes","clothing","collar","dressed","shirt","shopping","tshirt","weekend"],"emoji":"👕","text":"","type":1,"order":4155,"group":7,"subgroup":65,"version":0.6},{"label":"jeans","hexcode":"1F456","tags":["blue","casual","clothes","clothing","denim","dressed","pants","shopping","trousers","weekend"],"emoji":"👖","text":"","type":1,"order":4156,"group":7,"subgroup":65,"version":0.6},{"label":"scarf","hexcode":"1F9E3","tags":["bundle","cold","neck","up"],"emoji":"🧣","text":"","type":1,"order":4157,"group":7,"subgroup":65,"version":5},{"label":"gloves","hexcode":"1F9E4","tags":["hand"],"emoji":"🧤","text":"","type":1,"order":4158,"group":7,"subgroup":65,"version":5},{"label":"coat","hexcode":"1F9E5","tags":["brr","bundle","cold","jacket","up"],"emoji":"🧥","text":"","type":1,"order":4159,"group":7,"subgroup":65,"version":5},{"label":"socks","hexcode":"1F9E6","tags":["stocking"],"emoji":"🧦","text":"","type":1,"order":4160,"group":7,"subgroup":65,"version":5},{"label":"dress","hexcode":"1F457","tags":["clothes","clothing","dressed","fancy","shopping"],"emoji":"👗","text":"","type":1,"order":4161,"group":7,"subgroup":65,"version":0.6},{"label":"kimono","hexcode":"1F458","tags":["clothing","comfortable"],"emoji":"👘","text":"","type":1,"order":4162,"group":7,"subgroup":65,"version":0.6},{"label":"sari","hexcode":"1F97B","tags":["clothing","dress"],"emoji":"🥻","text":"","type":1,"order":4163,"group":7,"subgroup":65,"version":12},{"label":"one-piece swimsuit","hexcode":"1FA71","tags":["bathing","one-piece","suit","swimsuit"],"emoji":"🩱","text":"","type":1,"order":4164,"group":7,"subgroup":65,"version":12},{"label":"briefs","hexcode":"1FA72","tags":["bathing","one-piece","suit","swimsuit","underwear"],"emoji":"🩲","text":"","type":1,"order":4165,"group":7,"subgroup":65,"version":12},{"label":"shorts","hexcode":"1FA73","tags":["bathing","pants","suit","swimsuit","underwear"],"emoji":"🩳","text":"","type":1,"order":4166,"group":7,"subgroup":65,"version":12},{"label":"bikini","hexcode":"1F459","tags":["bathing","beach","clothing","pool","suit","swim"],"emoji":"👙","text":"","type":1,"order":4167,"group":7,"subgroup":65,"version":0.6},{"label":"woman’s clothes","hexcode":"1F45A","tags":["blouse","clothes","clothing","collar","dress","dressed","lady","shirt","shopping","woman","woman’s"],"emoji":"👚","text":"","type":1,"order":4168,"group":7,"subgroup":65,"version":0.6},{"label":"folding hand fan","hexcode":"1FAAD","tags":["clack","clap","cool","cooling","dance","fan","flirt","flutter","folding","hand","hot","shy"],"emoji":"🪭","text":"","type":1,"order":4169,"group":7,"subgroup":65,"version":15},{"label":"purse","hexcode":"1F45B","tags":["clothes","clothing","coin","dress","fancy","handbag","shopping"],"emoji":"👛","text":"","type":1,"order":4170,"group":7,"subgroup":65,"version":0.6},{"label":"handbag","hexcode":"1F45C","tags":["bag","clothes","clothing","dress","lady","purse","shopping"],"emoji":"👜","text":"","type":1,"order":4171,"group":7,"subgroup":65,"version":0.6},{"label":"clutch bag","hexcode":"1F45D","tags":["bag","clothes","clothing","clutch","dress","handbag","pouch","purse"],"emoji":"👝","text":"","type":1,"order":4172,"group":7,"subgroup":65,"version":0.6},{"label":"shopping bags","hexcode":"1F6CD","tags":["bag","bags","hotel","shopping"],"emoji":"🛍️","text":"🛍︎","type":0,"order":4174,"group":7,"subgroup":65,"version":0.7},{"label":"backpack","hexcode":"1F392","tags":["backpacking","bag","bookbag","education","rucksack","satchel","school"],"emoji":"🎒","text":"","type":1,"order":4175,"group":7,"subgroup":65,"version":0.6},{"label":"thong sandal","hexcode":"1FA74","tags":["beach","flip","flop","sandal","sandals","shoe","thong","thongs","zōri"],"emoji":"🩴","text":"","type":1,"order":4176,"group":7,"subgroup":65,"version":13},{"label":"man’s shoe","hexcode":"1F45E","tags":["brown","clothes","clothing","feet","foot","kick","man","man’s","shoe","shoes","shopping"],"emoji":"👞","text":"","type":1,"order":4177,"group":7,"subgroup":65,"version":0.6},{"label":"running shoe","hexcode":"1F45F","tags":["athletic","clothes","clothing","fast","kick","running","shoe","shoes","shopping","sneaker","tennis"],"emoji":"👟","text":"","type":1,"order":4178,"group":7,"subgroup":65,"version":0.6},{"label":"hiking boot","hexcode":"1F97E","tags":["backpacking","boot","brown","camping","hiking","outdoors","shoe"],"emoji":"🥾","text":"","type":1,"order":4179,"group":7,"subgroup":65,"version":11},{"label":"flat shoe","hexcode":"1F97F","tags":["ballet","comfy","flat","flats","shoe","slip-on","slipper"],"emoji":"🥿","text":"","type":1,"order":4180,"group":7,"subgroup":65,"version":11},{"label":"high-heeled shoe","hexcode":"1F460","tags":["clothes","clothing","dress","fashion","heel","heels","high-heeled","shoe","shoes","shopping","stiletto","woman"],"emoji":"👠","text":"","type":1,"order":4181,"group":7,"subgroup":65,"version":0.6},{"label":"woman’s sandal","hexcode":"1F461","tags":["clothing","sandal","shoe","woman","woman’s"],"emoji":"👡","text":"","type":1,"order":4182,"group":7,"subgroup":65,"version":0.6},{"label":"ballet shoes","hexcode":"1FA70","tags":["ballet","dance","shoes"],"emoji":"🩰","text":"","type":1,"order":4183,"group":7,"subgroup":65,"version":12},{"label":"woman’s boot","hexcode":"1F462","tags":["boot","clothes","clothing","dress","shoe","shoes","shopping","woman","woman’s"],"emoji":"👢","text":"","type":1,"order":4184,"group":7,"subgroup":65,"version":0.6},{"label":"hair pick","hexcode":"1FAAE","tags":["afro","comb","groom","hair","pick"],"emoji":"🪮","text":"","type":1,"order":4185,"group":7,"subgroup":65,"version":15},{"label":"crown","hexcode":"1F451","tags":["clothing","family","king","medieval","queen","royal","royalty","win"],"emoji":"👑","text":"","type":1,"order":4186,"group":7,"subgroup":65,"version":0.6},{"label":"woman’s hat","hexcode":"1F452","tags":["clothes","clothing","garden","hat","hats","party","woman","woman’s"],"emoji":"👒","text":"","type":1,"order":4187,"group":7,"subgroup":65,"version":0.6},{"label":"top hat","hexcode":"1F3A9","tags":["clothes","clothing","fancy","formal","hat","magic","top","tophat"],"emoji":"🎩","text":"","type":1,"order":4188,"group":7,"subgroup":65,"version":0.6},{"label":"graduation cap","hexcode":"1F393","tags":["cap","celebration","clothing","education","graduation","hat","scholar"],"emoji":"🎓️","text":"🎓︎","type":1,"order":4189,"group":7,"subgroup":65,"version":0.6},{"label":"billed cap","hexcode":"1F9E2","tags":["baseball","bent","billed","cap","dad","hat"],"emoji":"🧢","text":"","type":1,"order":4190,"group":7,"subgroup":65,"version":5},{"label":"military helmet","hexcode":"1FA96","tags":["army","helmet","military","soldier","war","warrior"],"emoji":"🪖","text":"","type":1,"order":4191,"group":7,"subgroup":65,"version":13},{"label":"rescue worker’s helmet","hexcode":"26D1","tags":["aid","cross","face","hat","helmet","rescue","worker’s"],"emoji":"⛑️","text":"⛑︎","type":0,"order":4193,"group":7,"subgroup":65,"version":0.7},{"label":"prayer beads","hexcode":"1F4FF","tags":["beads","clothing","necklace","prayer","religion"],"emoji":"📿","text":"","type":1,"order":4194,"group":7,"subgroup":65,"version":1},{"label":"lipstick","hexcode":"1F484","tags":["cosmetics","date","makeup"],"emoji":"💄","text":"","type":1,"order":4195,"group":7,"subgroup":65,"version":0.6},{"label":"ring","hexcode":"1F48D","tags":["diamond","engaged","engagement","married","romance","shiny","sparkling","wedding"],"emoji":"💍","text":"","type":1,"order":4196,"group":7,"subgroup":65,"version":0.6},{"label":"gem stone","hexcode":"1F48E","tags":["diamond","engagement","gem","jewel","money","romance","stone","wedding"],"emoji":"💎","text":"","type":1,"order":4197,"group":7,"subgroup":65,"version":0.6},{"label":"muted speaker","hexcode":"1F507","tags":["mute","muted","quiet","silent","sound","speaker"],"emoji":"🔇","text":"","type":1,"order":4198,"group":7,"subgroup":66,"version":1},{"label":"speaker low volume","hexcode":"1F508","tags":["low","soft","sound","speaker","volume"],"emoji":"🔈️","text":"🔈︎","type":1,"order":4199,"group":7,"subgroup":66,"version":0.7},{"label":"speaker medium volume","hexcode":"1F509","tags":["medium","sound","speaker","volume"],"emoji":"🔉","text":"","type":1,"order":4200,"group":7,"subgroup":66,"version":1},{"label":"speaker high volume","hexcode":"1F50A","tags":["high","loud","music","sound","speaker","volume"],"emoji":"🔊","text":"","type":1,"order":4201,"group":7,"subgroup":66,"version":0.6},{"label":"loudspeaker","hexcode":"1F4E2","tags":["address","communication","loud","public","sound"],"emoji":"📢","text":"","type":1,"order":4202,"group":7,"subgroup":66,"version":0.6},{"label":"megaphone","hexcode":"1F4E3","tags":["cheering","sound"],"emoji":"📣","text":"","type":1,"order":4203,"group":7,"subgroup":66,"version":0.6},{"label":"postal horn","hexcode":"1F4EF","tags":["horn","post","postal"],"emoji":"📯","text":"","type":1,"order":4204,"group":7,"subgroup":66,"version":1},{"label":"bell","hexcode":"1F514","tags":["break","church","sound"],"emoji":"🔔","text":"","type":1,"order":4205,"group":7,"subgroup":66,"version":0.6},{"label":"bell with slash","hexcode":"1F515","tags":["bell","forbidden","mute","no","not","prohibited","quiet","silent","slash","sound"],"emoji":"🔕","text":"","type":1,"order":4206,"group":7,"subgroup":66,"version":1},{"label":"musical score","hexcode":"1F3BC","tags":["music","musical","note","score"],"emoji":"🎼","text":"","type":1,"order":4207,"group":7,"subgroup":67,"version":0.6},{"label":"musical note","hexcode":"1F3B5","tags":["music","musical","note","sound"],"emoji":"🎵","text":"","type":1,"order":4208,"group":7,"subgroup":67,"version":0.6},{"label":"musical notes","hexcode":"1F3B6","tags":["music","musical","note","notes","sound"],"emoji":"🎶","text":"","type":1,"order":4209,"group":7,"subgroup":67,"version":0.6},{"label":"studio microphone","hexcode":"1F399","tags":["mic","microphone","music","studio"],"emoji":"🎙️","text":"🎙︎","type":0,"order":4211,"group":7,"subgroup":67,"version":0.7},{"label":"level slider","hexcode":"1F39A","tags":["level","music","slider"],"emoji":"🎚️","text":"🎚︎","type":0,"order":4213,"group":7,"subgroup":67,"version":0.7},{"label":"control knobs","hexcode":"1F39B","tags":["control","knobs","music"],"emoji":"🎛️","text":"🎛︎","type":0,"order":4215,"group":7,"subgroup":67,"version":0.7},{"label":"microphone","hexcode":"1F3A4","tags":["karaoke","mic","music","sing","sound"],"emoji":"🎤","text":"","type":1,"order":4216,"group":7,"subgroup":67,"version":0.6},{"label":"headphone","hexcode":"1F3A7","tags":["earbud","sound"],"emoji":"🎧️","text":"🎧︎","type":1,"order":4217,"group":7,"subgroup":67,"version":0.6},{"label":"radio","hexcode":"1F4FB","tags":["entertainment","tbt","video"],"emoji":"📻️","text":"📻︎","type":1,"order":4218,"group":7,"subgroup":67,"version":0.6},{"label":"saxophone","hexcode":"1F3B7","tags":["instrument","music","sax"],"emoji":"🎷","text":"","type":1,"order":4219,"group":7,"subgroup":68,"version":0.6},{"label":"accordion","hexcode":"1FA97","tags":["box","concertina","instrument","music","squeeze","squeezebox"],"emoji":"🪗","text":"","type":1,"order":4220,"group":7,"subgroup":68,"version":13},{"label":"guitar","hexcode":"1F3B8","tags":["instrument","music","strat"],"emoji":"🎸","text":"","type":1,"order":4221,"group":7,"subgroup":68,"version":0.6},{"label":"musical keyboard","hexcode":"1F3B9","tags":["instrument","keyboard","music","musical","piano"],"emoji":"🎹","text":"","type":1,"order":4222,"group":7,"subgroup":68,"version":0.6},{"label":"trumpet","hexcode":"1F3BA","tags":["instrument","music"],"emoji":"🎺","text":"","type":1,"order":4223,"group":7,"subgroup":68,"version":0.6},{"label":"violin","hexcode":"1F3BB","tags":["instrument","music"],"emoji":"🎻","text":"","type":1,"order":4224,"group":7,"subgroup":68,"version":0.6},{"label":"banjo","hexcode":"1FA95","tags":["music","stringed"],"emoji":"🪕","text":"","type":1,"order":4225,"group":7,"subgroup":68,"version":12},{"label":"drum","hexcode":"1F941","tags":["drumsticks","music"],"emoji":"🥁","text":"","type":1,"order":4226,"group":7,"subgroup":68,"version":3},{"label":"long drum","hexcode":"1FA98","tags":["beat","conga","drum","instrument","long","rhythm"],"emoji":"🪘","text":"","type":1,"order":4227,"group":7,"subgroup":68,"version":13},{"label":"maracas","hexcode":"1FA87","tags":["cha","dance","instrument","music","party","percussion","rattle","shake","shaker"],"emoji":"🪇","text":"","type":1,"order":4228,"group":7,"subgroup":68,"version":15},{"label":"flute","hexcode":"1FA88","tags":["band","fife","flautist","instrument","marching","music","orchestra","piccolo","pipe","recorder","woodwind"],"emoji":"🪈","text":"","type":1,"order":4229,"group":7,"subgroup":68,"version":15},{"label":"harp","hexcode":"1FA89","tags":["cupid","instrument","love","music","orchestra"],"emoji":"🪉","text":"","type":1,"order":4230,"group":7,"subgroup":68,"version":16},{"label":"mobile phone","hexcode":"1F4F1","tags":["cell","communication","mobile","phone","telephone"],"emoji":"📱","text":"","type":1,"order":4231,"group":7,"subgroup":69,"version":0.6},{"label":"mobile phone with arrow","hexcode":"1F4F2","tags":["arrow","build","call","cell","communication","mobile","phone","receive","telephone"],"emoji":"📲","text":"","type":1,"order":4232,"group":7,"subgroup":69,"version":0.6},{"label":"telephone","hexcode":"260E","tags":["phone"],"emoji":"☎️","text":"☎︎","type":0,"order":4234,"group":7,"subgroup":69,"version":0.6},{"label":"telephone receiver","hexcode":"1F4DE","tags":["communication","phone","receiver","telephone","voip"],"emoji":"📞","text":"","type":1,"order":4235,"group":7,"subgroup":69,"version":0.6},{"label":"pager","hexcode":"1F4DF","tags":["communication"],"emoji":"📟️","text":"📟︎","type":1,"order":4236,"group":7,"subgroup":69,"version":0.6},{"label":"fax machine","hexcode":"1F4E0","tags":["communication","fax","machine"],"emoji":"📠","text":"","type":1,"order":4237,"group":7,"subgroup":69,"version":0.6},{"label":"battery","hexcode":"1F50B","tags":["battery"],"emoji":"🔋","text":"","type":1,"order":4238,"group":7,"subgroup":70,"version":0.6},{"label":"low battery","hexcode":"1FAAB","tags":["battery","drained","electronic","energy","low","power"],"emoji":"🪫","text":"","type":1,"order":4239,"group":7,"subgroup":70,"version":14},{"label":"electric plug","hexcode":"1F50C","tags":["electric","electricity","plug"],"emoji":"🔌","text":"","type":1,"order":4240,"group":7,"subgroup":70,"version":0.6},{"label":"laptop","hexcode":"1F4BB","tags":["computer","office","pc","personal"],"emoji":"💻️","text":"💻︎","type":1,"order":4241,"group":7,"subgroup":70,"version":0.6},{"label":"desktop computer","hexcode":"1F5A5","tags":["computer","desktop","monitor"],"emoji":"🖥️","text":"🖥︎","type":0,"order":4243,"group":7,"subgroup":70,"version":0.7},{"label":"printer","hexcode":"1F5A8","tags":["computer"],"emoji":"🖨️","text":"🖨︎","type":0,"order":4245,"group":7,"subgroup":70,"version":0.7},{"label":"keyboard","hexcode":"2328","tags":["computer"],"emoji":"⌨️","text":"⌨︎","type":0,"order":4247,"group":7,"subgroup":70,"version":1},{"label":"computer mouse","hexcode":"1F5B1","tags":["computer","mouse"],"emoji":"🖱️","text":"🖱︎","type":0,"order":4249,"group":7,"subgroup":70,"version":0.7},{"label":"trackball","hexcode":"1F5B2","tags":["computer"],"emoji":"🖲️","text":"🖲︎","type":0,"order":4251,"group":7,"subgroup":70,"version":0.7},{"label":"computer disk","hexcode":"1F4BD","tags":["computer","disk","minidisk","optical"],"emoji":"💽","text":"","type":1,"order":4252,"group":7,"subgroup":70,"version":0.6},{"label":"floppy disk","hexcode":"1F4BE","tags":["computer","disk","floppy"],"emoji":"💾","text":"","type":1,"order":4253,"group":7,"subgroup":70,"version":0.6},{"label":"optical disk","hexcode":"1F4BF","tags":["blu-ray","cd","computer","disk","dvd","optical"],"emoji":"💿️","text":"💿︎","type":1,"order":4254,"group":7,"subgroup":70,"version":0.6},{"label":"dvd","hexcode":"1F4C0","tags":["blu-ray","cd","computer","disk","optical"],"emoji":"📀","text":"","type":1,"order":4255,"group":7,"subgroup":70,"version":0.6},{"label":"abacus","hexcode":"1F9EE","tags":["calculation","calculator"],"emoji":"🧮","text":"","type":1,"order":4256,"group":7,"subgroup":70,"version":11},{"label":"movie camera","hexcode":"1F3A5","tags":["bollywood","camera","cinema","film","hollywood","movie","record"],"emoji":"🎥","text":"","type":1,"order":4257,"group":7,"subgroup":71,"version":0.6},{"label":"film frames","hexcode":"1F39E","tags":["cinema","film","frames","movie"],"emoji":"🎞️","text":"🎞︎","type":0,"order":4259,"group":7,"subgroup":71,"version":0.7},{"label":"film projector","hexcode":"1F4FD","tags":["cinema","film","movie","projector","video"],"emoji":"📽️","text":"📽︎","type":0,"order":4261,"group":7,"subgroup":71,"version":0.7},{"label":"clapper board","hexcode":"1F3AC","tags":["action","board","clapper","movie"],"emoji":"🎬️","text":"🎬︎","type":1,"order":4262,"group":7,"subgroup":71,"version":0.6},{"label":"television","hexcode":"1F4FA","tags":["tv","video"],"emoji":"📺️","text":"📺︎","type":1,"order":4263,"group":7,"subgroup":71,"version":0.6},{"label":"camera","hexcode":"1F4F7","tags":["photo","selfie","snap","tbt","trip","video"],"emoji":"📷️","text":"📷︎","type":1,"order":4264,"group":7,"subgroup":71,"version":0.6},{"label":"camera with flash","hexcode":"1F4F8","tags":["camera","flash","video"],"emoji":"📸","text":"","type":1,"order":4265,"group":7,"subgroup":71,"version":1},{"label":"video camera","hexcode":"1F4F9","tags":["camcorder","camera","tbt","video"],"emoji":"📹️","text":"📹︎","type":1,"order":4266,"group":7,"subgroup":71,"version":0.6},{"label":"videocassette","hexcode":"1F4FC","tags":["old","school","tape","vcr","vhs","video"],"emoji":"📼","text":"","type":1,"order":4267,"group":7,"subgroup":71,"version":0.6},{"label":"magnifying glass tilted left","hexcode":"1F50D","tags":["glass","lab","left","left-pointing","magnifying","science","search","tilted","tool"],"emoji":"🔍️","text":"🔍︎","type":1,"order":4268,"group":7,"subgroup":71,"version":0.6},{"label":"magnifying glass tilted right","hexcode":"1F50E","tags":["contact","glass","lab","magnifying","right","right-pointing","science","search","tilted","tool"],"emoji":"🔎","text":"","type":1,"order":4269,"group":7,"subgroup":71,"version":0.6},{"label":"candle","hexcode":"1F56F","tags":["light"],"emoji":"🕯️","text":"🕯︎","type":0,"order":4271,"group":7,"subgroup":71,"version":0.7},{"label":"light bulb","hexcode":"1F4A1","tags":["bulb","comic","electric","idea","light"],"emoji":"💡","text":"","type":1,"order":4272,"group":7,"subgroup":71,"version":0.6},{"label":"flashlight","hexcode":"1F526","tags":["electric","light","tool","torch"],"emoji":"🔦","text":"","type":1,"order":4273,"group":7,"subgroup":71,"version":0.6},{"label":"red paper lantern","hexcode":"1F3EE","tags":["bar","lantern","light","paper","red","restaurant"],"emoji":"🏮","text":"","type":1,"order":4274,"group":7,"subgroup":71,"version":0.6},{"label":"diya lamp","hexcode":"1FA94","tags":["diya","lamp","light","oil"],"emoji":"🪔","text":"","type":1,"order":4275,"group":7,"subgroup":71,"version":12},{"label":"notebook with decorative cover","hexcode":"1F4D4","tags":["book","cover","decorated","decorative","education","notebook","school","writing"],"emoji":"📔","text":"","type":1,"order":4276,"group":7,"subgroup":72,"version":0.6},{"label":"closed book","hexcode":"1F4D5","tags":["book","closed","education"],"emoji":"📕","text":"","type":1,"order":4277,"group":7,"subgroup":72,"version":0.6},{"label":"open book","hexcode":"1F4D6","tags":["book","education","fantasy","knowledge","library","novels","open","reading"],"emoji":"📖","text":"","type":1,"order":4278,"group":7,"subgroup":72,"version":0.6},{"label":"green book","hexcode":"1F4D7","tags":["book","education","fantasy","green","library","reading"],"emoji":"📗","text":"","type":1,"order":4279,"group":7,"subgroup":72,"version":0.6},{"label":"blue book","hexcode":"1F4D8","tags":["blue","book","education","fantasy","library","reading"],"emoji":"📘","text":"","type":1,"order":4280,"group":7,"subgroup":72,"version":0.6},{"label":"orange book","hexcode":"1F4D9","tags":["book","education","fantasy","library","orange","reading"],"emoji":"📙","text":"","type":1,"order":4281,"group":7,"subgroup":72,"version":0.6},{"label":"books","hexcode":"1F4DA","tags":["book","education","fantasy","knowledge","library","novels","reading","school","study"],"emoji":"📚️","text":"📚︎","type":1,"order":4282,"group":7,"subgroup":72,"version":0.6},{"label":"notebook","hexcode":"1F4D3","tags":["notebook"],"emoji":"📓","text":"","type":1,"order":4283,"group":7,"subgroup":72,"version":0.6},{"label":"ledger","hexcode":"1F4D2","tags":["notebook"],"emoji":"📒","text":"","type":1,"order":4284,"group":7,"subgroup":72,"version":0.6},{"label":"page with curl","hexcode":"1F4C3","tags":["curl","document","page","paper"],"emoji":"📃","text":"","type":1,"order":4285,"group":7,"subgroup":72,"version":0.6},{"label":"scroll","hexcode":"1F4DC","tags":["paper"],"emoji":"📜","text":"","type":1,"order":4286,"group":7,"subgroup":72,"version":0.6},{"label":"page facing up","hexcode":"1F4C4","tags":["document","facing","page","paper","up"],"emoji":"📄","text":"","type":1,"order":4287,"group":7,"subgroup":72,"version":0.6},{"label":"newspaper","hexcode":"1F4F0","tags":["communication","news","paper"],"emoji":"📰","text":"","type":1,"order":4288,"group":7,"subgroup":72,"version":0.6},{"label":"rolled-up newspaper","hexcode":"1F5DE","tags":["news","newspaper","paper","rolled","rolled-up"],"emoji":"🗞️","text":"🗞︎","type":0,"order":4290,"group":7,"subgroup":72,"version":0.7},{"label":"bookmark tabs","hexcode":"1F4D1","tags":["bookmark","mark","marker","tabs"],"emoji":"📑","text":"","type":1,"order":4291,"group":7,"subgroup":72,"version":0.6},{"label":"bookmark","hexcode":"1F516","tags":["mark"],"emoji":"🔖","text":"","type":1,"order":4292,"group":7,"subgroup":72,"version":0.6},{"label":"label","hexcode":"1F3F7","tags":["tag"],"emoji":"🏷️","text":"🏷︎","type":0,"order":4294,"group":7,"subgroup":72,"version":0.7},{"label":"money bag","hexcode":"1F4B0","tags":["bag","bank","bet","billion","cash","cost","dollar","gold","million","money","moneybag","paid","paying","pot","rich","win"],"emoji":"💰️","text":"💰︎","type":1,"order":4295,"group":7,"subgroup":73,"version":0.6},{"label":"coin","hexcode":"1FA99","tags":["dollar","euro","gold","metal","money","rich","silver","treasure"],"emoji":"🪙","text":"","type":1,"order":4296,"group":7,"subgroup":73,"version":13},{"label":"yen banknote","hexcode":"1F4B4","tags":["bank","banknote","bill","currency","money","note","yen"],"emoji":"💴","text":"","type":1,"order":4297,"group":7,"subgroup":73,"version":0.6},{"label":"dollar banknote","hexcode":"1F4B5","tags":["bank","banknote","bill","currency","dollar","money","note"],"emoji":"💵","text":"","type":1,"order":4298,"group":7,"subgroup":73,"version":0.6},{"label":"euro banknote","hexcode":"1F4B6","tags":["100","bank","banknote","bill","currency","euro","money","note","rich"],"emoji":"💶","text":"","type":1,"order":4299,"group":7,"subgroup":73,"version":1},{"label":"pound banknote","hexcode":"1F4B7","tags":["bank","banknote","bill","billion","cash","currency","money","note","pound","pounds"],"emoji":"💷","text":"","type":1,"order":4300,"group":7,"subgroup":73,"version":1},{"label":"money with wings","hexcode":"1F4B8","tags":["bank","banknote","bill","billion","cash","dollar","fly","million","money","note","pay","wings"],"emoji":"💸","text":"","type":1,"order":4301,"group":7,"subgroup":73,"version":0.6},{"label":"credit card","hexcode":"1F4B3","tags":["bank","card","cash","charge","credit","money","pay"],"emoji":"💳️","text":"💳︎","type":1,"order":4302,"group":7,"subgroup":73,"version":0.6},{"label":"receipt","hexcode":"1F9FE","tags":["accounting","bookkeeping","evidence","invoice","proof"],"emoji":"🧾","text":"","type":1,"order":4303,"group":7,"subgroup":73,"version":11},{"label":"chart increasing with yen","hexcode":"1F4B9","tags":["bank","chart","currency","graph","growth","increasing","market","money","rise","trend","upward","yen"],"emoji":"💹","text":"","type":1,"order":4304,"group":7,"subgroup":73,"version":0.6},{"label":"envelope","hexcode":"2709","tags":["e-mail","email","letter"],"emoji":"✉️","text":"✉︎","type":0,"order":4306,"group":7,"subgroup":74,"version":0.6},{"label":"e-mail","hexcode":"1F4E7","tags":["email","letter","mail"],"emoji":"📧","text":"","type":1,"order":4307,"group":7,"subgroup":74,"version":0.6},{"label":"incoming envelope","hexcode":"1F4E8","tags":["delivering","e-mail","email","envelope","incoming","letter","mail","receive","sent"],"emoji":"📨","text":"","type":1,"order":4308,"group":7,"subgroup":74,"version":0.6},{"label":"envelope with arrow","hexcode":"1F4E9","tags":["arrow","communication","down","e-mail","email","envelope","letter","mail","outgoing","send","sent"],"emoji":"📩","text":"","type":1,"order":4309,"group":7,"subgroup":74,"version":0.6},{"label":"outbox tray","hexcode":"1F4E4","tags":["box","email","letter","mail","outbox","sent","tray"],"emoji":"📤️","text":"📤︎","type":1,"order":4310,"group":7,"subgroup":74,"version":0.6},{"label":"inbox tray","hexcode":"1F4E5","tags":["box","email","inbox","letter","mail","receive","tray","zero"],"emoji":"📥️","text":"📥︎","type":1,"order":4311,"group":7,"subgroup":74,"version":0.6},{"label":"package","hexcode":"1F4E6","tags":["box","communication","delivery","parcel","shipping"],"emoji":"📦️","text":"📦︎","type":1,"order":4312,"group":7,"subgroup":74,"version":0.6},{"label":"closed mailbox with raised flag","hexcode":"1F4EB","tags":["closed","communication","flag","mail","mailbox","postbox","raised"],"emoji":"📫️","text":"📫︎","type":1,"order":4313,"group":7,"subgroup":74,"version":0.6},{"label":"closed mailbox with lowered flag","hexcode":"1F4EA","tags":["closed","flag","lowered","mail","mailbox","postbox"],"emoji":"📪️","text":"📪︎","type":1,"order":4314,"group":7,"subgroup":74,"version":0.6},{"label":"open mailbox with raised flag","hexcode":"1F4EC","tags":["flag","mail","mailbox","open","postbox","raised"],"emoji":"📬️","text":"📬︎","type":1,"order":4315,"group":7,"subgroup":74,"version":0.7},{"label":"open mailbox with lowered flag","hexcode":"1F4ED","tags":["flag","lowered","mail","mailbox","open","postbox"],"emoji":"📭️","text":"📭︎","type":1,"order":4316,"group":7,"subgroup":74,"version":0.7},{"label":"postbox","hexcode":"1F4EE","tags":["mail","mailbox"],"emoji":"📮","text":"","type":1,"order":4317,"group":7,"subgroup":74,"version":0.6},{"label":"ballot box with ballot","hexcode":"1F5F3","tags":["ballot","box"],"emoji":"🗳️","text":"🗳︎","type":0,"order":4319,"group":7,"subgroup":74,"version":0.7},{"label":"pencil","hexcode":"270F","tags":["pencil"],"emoji":"✏️","text":"✏︎","type":0,"order":4321,"group":7,"subgroup":75,"version":0.6},{"label":"black nib","hexcode":"2712","tags":["black","nib","pen"],"emoji":"✒️","text":"✒︎","type":0,"order":4323,"group":7,"subgroup":75,"version":0.6},{"label":"fountain pen","hexcode":"1F58B","tags":["fountain","pen"],"emoji":"🖋️","text":"🖋︎","type":0,"order":4325,"group":7,"subgroup":75,"version":0.7},{"label":"pen","hexcode":"1F58A","tags":["ballpoint"],"emoji":"🖊️","text":"🖊︎","type":0,"order":4327,"group":7,"subgroup":75,"version":0.7},{"label":"paintbrush","hexcode":"1F58C","tags":["painting"],"emoji":"🖌️","text":"🖌︎","type":0,"order":4329,"group":7,"subgroup":75,"version":0.7},{"label":"crayon","hexcode":"1F58D","tags":["crayon"],"emoji":"🖍️","text":"🖍︎","type":0,"order":4331,"group":7,"subgroup":75,"version":0.7},{"label":"memo","hexcode":"1F4DD","tags":["communication","media","notes","pencil"],"emoji":"📝","text":"","type":1,"order":4332,"group":7,"subgroup":75,"version":0.6},{"label":"briefcase","hexcode":"1F4BC","tags":["office"],"emoji":"💼","text":"","type":1,"order":4333,"group":7,"subgroup":76,"version":0.6},{"label":"file folder","hexcode":"1F4C1","tags":["file","folder"],"emoji":"📁","text":"","type":1,"order":4334,"group":7,"subgroup":76,"version":0.6},{"label":"open file folder","hexcode":"1F4C2","tags":["file","folder","open"],"emoji":"📂","text":"","type":1,"order":4335,"group":7,"subgroup":76,"version":0.6},{"label":"card index dividers","hexcode":"1F5C2","tags":["card","dividers","index"],"emoji":"🗂️","text":"🗂︎","type":0,"order":4337,"group":7,"subgroup":76,"version":0.7},{"label":"calendar","hexcode":"1F4C5","tags":["date"],"emoji":"📅","text":"","type":1,"order":4338,"group":7,"subgroup":76,"version":0.6},{"label":"tear-off calendar","hexcode":"1F4C6","tags":["calendar","tear-off"],"emoji":"📆","text":"","type":1,"order":4339,"group":7,"subgroup":76,"version":0.6},{"label":"spiral notepad","hexcode":"1F5D2","tags":["note","notepad","pad","spiral"],"emoji":"🗒️","text":"🗒︎","type":0,"order":4341,"group":7,"subgroup":76,"version":0.7},{"label":"spiral calendar","hexcode":"1F5D3","tags":["calendar","pad","spiral"],"emoji":"🗓️","text":"🗓︎","type":0,"order":4343,"group":7,"subgroup":76,"version":0.7},{"label":"card index","hexcode":"1F4C7","tags":["card","index","old","rolodex","school"],"emoji":"📇","text":"","type":1,"order":4344,"group":7,"subgroup":76,"version":0.6},{"label":"chart increasing","hexcode":"1F4C8","tags":["chart","data","graph","growth","increasing","right","trend","up","upward"],"emoji":"📈","text":"","type":1,"order":4345,"group":7,"subgroup":76,"version":0.6},{"label":"chart decreasing","hexcode":"1F4C9","tags":["chart","data","decreasing","down","downward","graph","negative","trend"],"emoji":"📉","text":"","type":1,"order":4346,"group":7,"subgroup":76,"version":0.6},{"label":"bar chart","hexcode":"1F4CA","tags":["bar","chart","data","graph"],"emoji":"📊","text":"","type":1,"order":4347,"group":7,"subgroup":76,"version":0.6},{"label":"clipboard","hexcode":"1F4CB","tags":["do","list","notes"],"emoji":"📋️","text":"📋︎","type":1,"order":4348,"group":7,"subgroup":76,"version":0.6},{"label":"pushpin","hexcode":"1F4CC","tags":["collage","pin"],"emoji":"📌","text":"","type":1,"order":4349,"group":7,"subgroup":76,"version":0.6},{"label":"round pushpin","hexcode":"1F4CD","tags":["location","map","pin","pushpin","round"],"emoji":"📍","text":"","type":1,"order":4350,"group":7,"subgroup":76,"version":0.6},{"label":"paperclip","hexcode":"1F4CE","tags":["paperclip"],"emoji":"📎","text":"","type":1,"order":4351,"group":7,"subgroup":76,"version":0.6},{"label":"linked paperclips","hexcode":"1F587","tags":["link","linked","paperclip","paperclips"],"emoji":"🖇️","text":"🖇︎","type":0,"order":4353,"group":7,"subgroup":76,"version":0.7},{"label":"straight ruler","hexcode":"1F4CF","tags":["angle","edge","math","ruler","straight","straightedge"],"emoji":"📏","text":"","type":1,"order":4354,"group":7,"subgroup":76,"version":0.6},{"label":"triangular ruler","hexcode":"1F4D0","tags":["angle","math","rule","ruler","set","slide","triangle","triangular"],"emoji":"📐","text":"","type":1,"order":4355,"group":7,"subgroup":76,"version":0.6},{"label":"scissors","hexcode":"2702","tags":["cut","cutting","paper","tool"],"emoji":"✂️","text":"✂︎","type":0,"order":4357,"group":7,"subgroup":76,"version":0.6},{"label":"card file box","hexcode":"1F5C3","tags":["box","card","file"],"emoji":"🗃️","text":"🗃︎","type":0,"order":4359,"group":7,"subgroup":76,"version":0.7},{"label":"file cabinet","hexcode":"1F5C4","tags":["cabinet","file","filing","paper"],"emoji":"🗄️","text":"🗄︎","type":0,"order":4361,"group":7,"subgroup":76,"version":0.7},{"label":"wastebasket","hexcode":"1F5D1","tags":["can","garbage","trash","waste"],"emoji":"🗑️","text":"🗑︎","type":0,"order":4363,"group":7,"subgroup":76,"version":0.7},{"label":"locked","hexcode":"1F512","tags":["closed","lock","private"],"emoji":"🔒️","text":"🔒︎","type":1,"order":4364,"group":7,"subgroup":77,"version":0.6},{"label":"unlocked","hexcode":"1F513","tags":["cracked","lock","open","unlock"],"emoji":"🔓️","text":"🔓︎","type":1,"order":4365,"group":7,"subgroup":77,"version":0.6},{"label":"locked with pen","hexcode":"1F50F","tags":["ink","lock","locked","nib","pen","privacy"],"emoji":"🔏","text":"","type":1,"order":4366,"group":7,"subgroup":77,"version":0.6},{"label":"locked with key","hexcode":"1F510","tags":["bike","closed","key","lock","locked","secure"],"emoji":"🔐","text":"","type":1,"order":4367,"group":7,"subgroup":77,"version":0.6},{"label":"key","hexcode":"1F511","tags":["keys","lock","major","password","unlock"],"emoji":"🔑","text":"","type":1,"order":4368,"group":7,"subgroup":77,"version":0.6},{"label":"old key","hexcode":"1F5DD","tags":["clue","key","lock","old"],"emoji":"🗝️","text":"🗝︎","type":0,"order":4370,"group":7,"subgroup":77,"version":0.7},{"label":"hammer","hexcode":"1F528","tags":["home","improvement","repairs","tool"],"emoji":"🔨","text":"","type":1,"order":4371,"group":7,"subgroup":78,"version":0.6},{"label":"axe","hexcode":"1FA93","tags":["ax","chop","hatchet","split","wood"],"emoji":"🪓","text":"","type":1,"order":4372,"group":7,"subgroup":78,"version":12},{"label":"pick","hexcode":"26CF","tags":["hammer","mining","tool"],"emoji":"⛏️","text":"⛏︎","type":0,"order":4374,"group":7,"subgroup":78,"version":0.7},{"label":"hammer and pick","hexcode":"2692","tags":["hammer","pick","tool"],"emoji":"⚒️","text":"⚒︎","type":0,"order":4376,"group":7,"subgroup":78,"version":1},{"label":"hammer and wrench","hexcode":"1F6E0","tags":["hammer","spanner","tool","wrench"],"emoji":"🛠️","text":"🛠︎","type":0,"order":4378,"group":7,"subgroup":78,"version":0.7},{"label":"dagger","hexcode":"1F5E1","tags":["knife","weapon"],"emoji":"🗡️","text":"🗡︎","type":0,"order":4380,"group":7,"subgroup":78,"version":0.7},{"label":"crossed swords","hexcode":"2694","tags":["crossed","swords","weapon"],"emoji":"⚔️","text":"⚔︎","type":0,"order":4382,"group":7,"subgroup":78,"version":1},{"label":"bomb","hexcode":"1F4A3","tags":["boom","comic","dangerous","explosion","hot"],"emoji":"💣️","text":"💣︎","type":1,"order":4383,"group":7,"subgroup":78,"version":0.6},{"label":"boomerang","hexcode":"1FA83","tags":["rebound","repercussion","weapon"],"emoji":"🪃","text":"","type":1,"order":4384,"group":7,"subgroup":78,"version":13},{"label":"bow and arrow","hexcode":"1F3F9","tags":["archer","archery","arrow","bow","sagittarius","tool","weapon","zodiac"],"emoji":"🏹","text":"","type":1,"order":4385,"group":7,"subgroup":78,"version":1},{"label":"shield","hexcode":"1F6E1","tags":["weapon"],"emoji":"🛡️","text":"🛡︎","type":0,"order":4387,"group":7,"subgroup":78,"version":0.7},{"label":"carpentry saw","hexcode":"1FA9A","tags":["carpenter","carpentry","cut","lumber","saw","tool","trim"],"emoji":"🪚","text":"","type":1,"order":4388,"group":7,"subgroup":78,"version":13},{"label":"wrench","hexcode":"1F527","tags":["home","improvement","spanner","tool"],"emoji":"🔧","text":"","type":1,"order":4389,"group":7,"subgroup":78,"version":0.6},{"label":"screwdriver","hexcode":"1FA9B","tags":["flathead","handy","screw","tool"],"emoji":"🪛","text":"","type":1,"order":4390,"group":7,"subgroup":78,"version":13},{"label":"nut and bolt","hexcode":"1F529","tags":["bolt","home","improvement","nut","tool"],"emoji":"🔩","text":"","type":1,"order":4391,"group":7,"subgroup":78,"version":0.6},{"label":"gear","hexcode":"2699","tags":["cog","cogwheel","tool"],"emoji":"⚙️","text":"⚙︎","type":0,"order":4393,"group":7,"subgroup":78,"version":1},{"label":"clamp","hexcode":"1F5DC","tags":["compress","tool","vice"],"emoji":"🗜️","text":"🗜︎","type":0,"order":4395,"group":7,"subgroup":78,"version":0.7},{"label":"balance scale","hexcode":"2696","tags":["balance","justice","libra","scale","scales","tool","weight","zodiac"],"emoji":"⚖️","text":"⚖︎","type":0,"order":4397,"group":7,"subgroup":78,"version":1},{"label":"white cane","hexcode":"1F9AF","tags":["accessibility","blind","cane","probing","white"],"emoji":"🦯","text":"","type":1,"order":4398,"group":7,"subgroup":78,"version":12},{"label":"link","hexcode":"1F517","tags":["links"],"emoji":"🔗","text":"","type":1,"order":4399,"group":7,"subgroup":78,"version":0.6},{"label":"broken chain","hexcode":"26D3-FE0F-200D-1F4A5","tags":["break","breaking","broken","chain","cuffs","freedom"],"emoji":"⛓️‍💥","text":"","type":1,"order":4400,"group":7,"subgroup":78,"version":15.1},{"label":"chains","hexcode":"26D3","tags":["chain"],"emoji":"⛓️","text":"⛓︎","type":0,"order":4403,"group":7,"subgroup":78,"version":0.7},{"label":"hook","hexcode":"1FA9D","tags":["catch","crook","curve","ensnare","point","selling"],"emoji":"🪝","text":"","type":1,"order":4404,"group":7,"subgroup":78,"version":13},{"label":"toolbox","hexcode":"1F9F0","tags":["box","chest","mechanic","red","tool"],"emoji":"🧰","text":"","type":1,"order":4405,"group":7,"subgroup":78,"version":11},{"label":"magnet","hexcode":"1F9F2","tags":["attraction","horseshoe","magnetic","negative","positive","shape","u"],"emoji":"🧲","text":"","type":1,"order":4406,"group":7,"subgroup":78,"version":11},{"label":"ladder","hexcode":"1FA9C","tags":["climb","rung","step"],"emoji":"🪜","text":"","type":1,"order":4407,"group":7,"subgroup":78,"version":13},{"label":"shovel","hexcode":"1FA8F","tags":["bury","dig","garden","hole","plant","scoop","snow","spade"],"emoji":"🪏","text":"","type":1,"order":4408,"group":7,"subgroup":78,"version":16},{"label":"alembic","hexcode":"2697","tags":["chemistry","tool"],"emoji":"⚗️","text":"⚗︎","type":0,"order":4410,"group":7,"subgroup":79,"version":1},{"label":"test tube","hexcode":"1F9EA","tags":["chemist","chemistry","experiment","lab","science","test","tube"],"emoji":"🧪","text":"","type":1,"order":4411,"group":7,"subgroup":79,"version":11},{"label":"petri dish","hexcode":"1F9EB","tags":["bacteria","biologist","biology","culture","dish","lab","petri"],"emoji":"🧫","text":"","type":1,"order":4412,"group":7,"subgroup":79,"version":11},{"label":"dna","hexcode":"1F9EC","tags":["biologist","evolution","gene","genetics","life"],"emoji":"🧬","text":"","type":1,"order":4413,"group":7,"subgroup":79,"version":11},{"label":"microscope","hexcode":"1F52C","tags":["experiment","lab","science","tool"],"emoji":"🔬","text":"","type":1,"order":4414,"group":7,"subgroup":79,"version":1},{"label":"telescope","hexcode":"1F52D","tags":["contact","extraterrestrial","science","tool"],"emoji":"🔭","text":"","type":1,"order":4415,"group":7,"subgroup":79,"version":1},{"label":"satellite antenna","hexcode":"1F4E1","tags":["aliens","antenna","contact","dish","satellite","science"],"emoji":"📡","text":"","type":1,"order":4416,"group":7,"subgroup":79,"version":0.6},{"label":"syringe","hexcode":"1F489","tags":["doctor","flu","medicine","needle","shot","sick","tool","vaccination"],"emoji":"💉","text":"","type":1,"order":4417,"group":7,"subgroup":80,"version":0.6},{"label":"drop of blood","hexcode":"1FA78","tags":["bleed","blood","donation","drop","injury","medicine","menstruation"],"emoji":"🩸","text":"","type":1,"order":4418,"group":7,"subgroup":80,"version":12},{"label":"pill","hexcode":"1F48A","tags":["doctor","drugs","medicated","medicine","pills","sick","vitamin"],"emoji":"💊","text":"","type":1,"order":4419,"group":7,"subgroup":80,"version":0.6},{"label":"adhesive bandage","hexcode":"1FA79","tags":["adhesive","bandage"],"emoji":"🩹","text":"","type":1,"order":4420,"group":7,"subgroup":80,"version":12},{"label":"crutch","hexcode":"1FA7C","tags":["aid","cane","disability","help","hurt","injured","mobility","stick"],"emoji":"🩼","text":"","type":1,"order":4421,"group":7,"subgroup":80,"version":14},{"label":"stethoscope","hexcode":"1FA7A","tags":["doctor","heart","medicine"],"emoji":"🩺","text":"","type":1,"order":4422,"group":7,"subgroup":80,"version":12},{"label":"x-ray","hexcode":"1FA7B","tags":["bones","doctor","medical","skeleton","skull","xray"],"emoji":"🩻","text":"","type":1,"order":4423,"group":7,"subgroup":80,"version":14},{"label":"door","hexcode":"1F6AA","tags":["back","closet","front"],"emoji":"🚪","text":"","type":1,"order":4424,"group":7,"subgroup":81,"version":0.6},{"label":"elevator","hexcode":"1F6D7","tags":["accessibility","hoist","lift"],"emoji":"🛗","text":"","type":1,"order":4425,"group":7,"subgroup":81,"version":13},{"label":"mirror","hexcode":"1FA9E","tags":["makeup","reflection","reflector","speculum"],"emoji":"🪞","text":"","type":1,"order":4426,"group":7,"subgroup":81,"version":13},{"label":"window","hexcode":"1FA9F","tags":["air","frame","fresh","opening","transparent","view"],"emoji":"🪟","text":"","type":1,"order":4427,"group":7,"subgroup":81,"version":13},{"label":"bed","hexcode":"1F6CF","tags":["hotel","sleep"],"emoji":"🛏️","text":"🛏︎","type":0,"order":4429,"group":7,"subgroup":81,"version":0.7},{"label":"couch and lamp","hexcode":"1F6CB","tags":["couch","hotel","lamp"],"emoji":"🛋️","text":"🛋︎","type":0,"order":4431,"group":7,"subgroup":81,"version":0.7},{"label":"chair","hexcode":"1FA91","tags":["seat","sit"],"emoji":"🪑","text":"","type":1,"order":4432,"group":7,"subgroup":81,"version":12},{"label":"toilet","hexcode":"1F6BD","tags":["bathroom"],"emoji":"🚽","text":"","type":1,"order":4433,"group":7,"subgroup":81,"version":0.6},{"label":"plunger","hexcode":"1FAA0","tags":["cup","force","plumber","poop","suction","toilet"],"emoji":"🪠","text":"","type":1,"order":4434,"group":7,"subgroup":81,"version":13},{"label":"shower","hexcode":"1F6BF","tags":["water"],"emoji":"🚿","text":"","type":1,"order":4435,"group":7,"subgroup":81,"version":1},{"label":"bathtub","hexcode":"1F6C1","tags":["bath"],"emoji":"🛁","text":"","type":1,"order":4436,"group":7,"subgroup":81,"version":1},{"label":"mouse trap","hexcode":"1FAA4","tags":["bait","cheese","lure","mouse","mousetrap","snare","trap"],"emoji":"🪤","text":"","type":1,"order":4437,"group":7,"subgroup":81,"version":13},{"label":"razor","hexcode":"1FA92","tags":["sharp","shave"],"emoji":"🪒","text":"","type":1,"order":4438,"group":7,"subgroup":81,"version":12},{"label":"lotion bottle","hexcode":"1F9F4","tags":["bottle","lotion","moisturizer","shampoo","sunscreen"],"emoji":"🧴","text":"","type":1,"order":4439,"group":7,"subgroup":81,"version":11},{"label":"safety pin","hexcode":"1F9F7","tags":["diaper","pin","punk","rock","safety"],"emoji":"🧷","text":"","type":1,"order":4440,"group":7,"subgroup":81,"version":11},{"label":"broom","hexcode":"1F9F9","tags":["cleaning","sweeping","witch"],"emoji":"🧹","text":"","type":1,"order":4441,"group":7,"subgroup":81,"version":11},{"label":"basket","hexcode":"1F9FA","tags":["farming","laundry","picnic"],"emoji":"🧺","text":"","type":1,"order":4442,"group":7,"subgroup":81,"version":11},{"label":"roll of paper","hexcode":"1F9FB","tags":["paper","roll","toilet","towels"],"emoji":"🧻","text":"","type":1,"order":4443,"group":7,"subgroup":81,"version":11},{"label":"bucket","hexcode":"1FAA3","tags":["cask","pail","vat"],"emoji":"🪣","text":"","type":1,"order":4444,"group":7,"subgroup":81,"version":13},{"label":"soap","hexcode":"1F9FC","tags":["bar","bathing","clean","cleaning","lather","soapdish"],"emoji":"🧼","text":"","type":1,"order":4445,"group":7,"subgroup":81,"version":11},{"label":"bubbles","hexcode":"1FAE7","tags":["bubble","burp","clean","floating","pearl","soap","underwater"],"emoji":"🫧","text":"","type":1,"order":4446,"group":7,"subgroup":81,"version":14},{"label":"toothbrush","hexcode":"1FAA5","tags":["bathroom","brush","clean","dental","hygiene","teeth","toiletry"],"emoji":"🪥","text":"","type":1,"order":4447,"group":7,"subgroup":81,"version":13},{"label":"sponge","hexcode":"1F9FD","tags":["absorbing","cleaning","porous","soak"],"emoji":"🧽","text":"","type":1,"order":4448,"group":7,"subgroup":81,"version":11},{"label":"fire extinguisher","hexcode":"1F9EF","tags":["extinguish","extinguisher","fire","quench"],"emoji":"🧯","text":"","type":1,"order":4449,"group":7,"subgroup":81,"version":11},{"label":"shopping cart","hexcode":"1F6D2","tags":["cart","shopping","trolley"],"emoji":"🛒","text":"","type":1,"order":4450,"group":7,"subgroup":81,"version":3},{"label":"cigarette","hexcode":"1F6AC","tags":["smoking"],"emoji":"🚬","text":"","type":1,"order":4451,"group":7,"subgroup":82,"version":0.6},{"label":"coffin","hexcode":"26B0","tags":["dead","death","vampire"],"emoji":"⚰️","text":"⚰︎","type":0,"order":4453,"group":7,"subgroup":82,"version":1},{"label":"headstone","hexcode":"1FAA6","tags":["cemetery","dead","grave","graveyard","memorial","rip","tomb","tombstone"],"emoji":"🪦","text":"","type":1,"order":4454,"group":7,"subgroup":82,"version":13},{"label":"funeral urn","hexcode":"26B1","tags":["ashes","death","funeral","urn"],"emoji":"⚱️","text":"⚱︎","type":0,"order":4456,"group":7,"subgroup":82,"version":1},{"label":"nazar amulet","hexcode":"1F9FF","tags":["amulet","bead","blue","charm","evil-eye","nazar","talisman"],"emoji":"🧿","text":"","type":1,"order":4457,"group":7,"subgroup":82,"version":11},{"label":"hamsa","hexcode":"1FAAC","tags":["amulet","fatima","fortune","guide","hand","mary","miriam","palm","protect","protection"],"emoji":"🪬","text":"","type":1,"order":4458,"group":7,"subgroup":82,"version":14},{"label":"moai","hexcode":"1F5FF","tags":["face","moyai","statue","stoneface","travel"],"emoji":"🗿","text":"","type":1,"order":4459,"group":7,"subgroup":82,"version":0.6},{"label":"placard","hexcode":"1FAA7","tags":["card","demonstration","notice","picket","plaque","protest","sign"],"emoji":"🪧","text":"","type":1,"order":4460,"group":7,"subgroup":82,"version":13},{"label":"identification card","hexcode":"1FAAA","tags":["card","credentials","document","id","identification","license","security"],"emoji":"🪪","text":"","type":1,"order":4461,"group":7,"subgroup":82,"version":14},{"label":"ATM sign","hexcode":"1F3E7","tags":["atm","automated","bank","cash","money","sign","teller"],"emoji":"🏧","text":"","type":1,"order":4462,"group":8,"subgroup":83,"version":0.6},{"label":"litter in bin sign","hexcode":"1F6AE","tags":["bin","litter","litterbin","sign"],"emoji":"🚮","text":"","type":1,"order":4463,"group":8,"subgroup":83,"version":1},{"label":"potable water","hexcode":"1F6B0","tags":["drinking","potable","water"],"emoji":"🚰","text":"","type":1,"order":4464,"group":8,"subgroup":83,"version":1},{"label":"wheelchair symbol","hexcode":"267F","tags":["access","handicap","symbol","wheelchair"],"emoji":"♿️","text":"♿︎","type":1,"order":4465,"group":8,"subgroup":83,"version":0.6},{"label":"men’s room","hexcode":"1F6B9","tags":["bathroom","lavatory","man","men’s","restroom","room","toilet","wc"],"emoji":"🚹️","text":"🚹︎","type":1,"order":4466,"group":8,"subgroup":83,"version":0.6},{"label":"women’s room","hexcode":"1F6BA","tags":["bathroom","lavatory","restroom","room","toilet","wc","woman","women’s"],"emoji":"🚺️","text":"🚺︎","type":1,"order":4467,"group":8,"subgroup":83,"version":0.6},{"label":"restroom","hexcode":"1F6BB","tags":["bathroom","lavatory","toilet","wc"],"emoji":"🚻","text":"","type":1,"order":4468,"group":8,"subgroup":83,"version":0.6},{"label":"baby symbol","hexcode":"1F6BC","tags":["baby","changing","symbol"],"emoji":"🚼️","text":"🚼︎","type":1,"order":4469,"group":8,"subgroup":83,"version":0.6},{"label":"water closet","hexcode":"1F6BE","tags":["bathroom","closet","lavatory","restroom","toilet","water","wc"],"emoji":"🚾","text":"","type":1,"order":4470,"group":8,"subgroup":83,"version":0.6},{"label":"passport control","hexcode":"1F6C2","tags":["control","passport"],"emoji":"🛂","text":"","type":1,"order":4471,"group":8,"subgroup":83,"version":1},{"label":"customs","hexcode":"1F6C3","tags":["packing"],"emoji":"🛃","text":"","type":1,"order":4472,"group":8,"subgroup":83,"version":1},{"label":"baggage claim","hexcode":"1F6C4","tags":["arrived","baggage","bags","case","checked","claim","journey","packing","plane","ready","travel","trip"],"emoji":"🛄","text":"","type":1,"order":4473,"group":8,"subgroup":83,"version":1},{"label":"left luggage","hexcode":"1F6C5","tags":["baggage","case","left","locker","luggage"],"emoji":"🛅","text":"","type":1,"order":4474,"group":8,"subgroup":83,"version":1},{"label":"warning","hexcode":"26A0","tags":["caution"],"emoji":"⚠️","text":"⚠︎","type":0,"order":4476,"group":8,"subgroup":84,"version":0.6},{"label":"children crossing","hexcode":"1F6B8","tags":["child","children","crossing","pedestrian","traffic"],"emoji":"🚸","text":"","type":1,"order":4477,"group":8,"subgroup":84,"version":1},{"label":"no entry","hexcode":"26D4","tags":["do","entry","fail","forbidden","no","not","pass","prohibited","traffic"],"emoji":"⛔️","text":"⛔︎","type":1,"order":4478,"group":8,"subgroup":84,"version":0.6},{"label":"prohibited","hexcode":"1F6AB","tags":["entry","forbidden","no","not","smoke"],"emoji":"🚫","text":"","type":1,"order":4479,"group":8,"subgroup":84,"version":0.6},{"label":"no bicycles","hexcode":"1F6B3","tags":["bicycle","bicycles","bike","forbidden","no","not","prohibited"],"emoji":"🚳","text":"","type":1,"order":4480,"group":8,"subgroup":84,"version":1},{"label":"no smoking","hexcode":"1F6AD","tags":["forbidden","no","not","prohibited","smoke","smoking"],"emoji":"🚭️","text":"🚭︎","type":1,"order":4481,"group":8,"subgroup":84,"version":0.6},{"label":"no littering","hexcode":"1F6AF","tags":["forbidden","litter","littering","no","not","prohibited"],"emoji":"🚯","text":"","type":1,"order":4482,"group":8,"subgroup":84,"version":1},{"label":"non-potable water","hexcode":"1F6B1","tags":["dry","non-drinking","non-potable","prohibited","water"],"emoji":"🚱","text":"","type":1,"order":4483,"group":8,"subgroup":84,"version":1},{"label":"no pedestrians","hexcode":"1F6B7","tags":["forbidden","no","not","pedestrian","pedestrians","prohibited"],"emoji":"🚷","text":"","type":1,"order":4484,"group":8,"subgroup":84,"version":1},{"label":"no mobile phones","hexcode":"1F4F5","tags":["cell","forbidden","mobile","no","not","phone","phones","prohibited","telephone"],"emoji":"📵","text":"","type":1,"order":4485,"group":8,"subgroup":84,"version":1},{"label":"no one under eighteen","hexcode":"1F51E","tags":["18","age","eighteen","forbidden","no","not","one","prohibited","restriction","underage"],"emoji":"🔞","text":"","type":1,"order":4486,"group":8,"subgroup":84,"version":0.6},{"label":"radioactive","hexcode":"2622","tags":["sign"],"emoji":"☢️","text":"☢︎","type":0,"order":4488,"group":8,"subgroup":84,"version":1},{"label":"biohazard","hexcode":"2623","tags":["sign"],"emoji":"☣️","text":"☣︎","type":0,"order":4490,"group":8,"subgroup":84,"version":1},{"label":"up arrow","hexcode":"2B06","tags":["arrow","cardinal","direction","north","up"],"emoji":"⬆️","text":"⬆︎","type":0,"order":4492,"group":8,"subgroup":85,"version":0.6},{"label":"up-right arrow","hexcode":"2197","tags":["arrow","direction","intercardinal","northeast","up-right"],"emoji":"↗️","text":"↗︎","type":0,"order":4494,"group":8,"subgroup":85,"version":0.6},{"label":"right arrow","hexcode":"27A1","tags":["arrow","cardinal","direction","east","right"],"emoji":"➡️","text":"➡︎","type":0,"order":4496,"group":8,"subgroup":85,"version":0.6},{"label":"down-right arrow","hexcode":"2198","tags":["arrow","direction","down-right","intercardinal","southeast"],"emoji":"↘️","text":"↘︎","type":0,"order":4498,"group":8,"subgroup":85,"version":0.6},{"label":"down arrow","hexcode":"2B07","tags":["arrow","cardinal","direction","down","south"],"emoji":"⬇️","text":"⬇︎","type":0,"order":4500,"group":8,"subgroup":85,"version":0.6},{"label":"down-left arrow","hexcode":"2199","tags":["arrow","direction","down-left","intercardinal","southwest"],"emoji":"↙️","text":"↙︎","type":0,"order":4502,"group":8,"subgroup":85,"version":0.6},{"label":"left arrow","hexcode":"2B05","tags":["arrow","cardinal","direction","left","west"],"emoji":"⬅️","text":"⬅︎","type":0,"order":4504,"group":8,"subgroup":85,"version":0.6},{"label":"up-left arrow","hexcode":"2196","tags":["arrow","direction","intercardinal","northwest","up-left"],"emoji":"↖️","text":"↖︎","type":0,"order":4506,"group":8,"subgroup":85,"version":0.6},{"label":"up-down arrow","hexcode":"2195","tags":["arrow","up-down"],"emoji":"↕️","text":"↕︎","type":0,"order":4508,"group":8,"subgroup":85,"version":0.6},{"label":"left-right arrow","hexcode":"2194","tags":["arrow","left-right"],"emoji":"↔️","text":"↔︎","type":0,"order":4510,"group":8,"subgroup":85,"version":0.6},{"label":"right arrow curving left","hexcode":"21A9","tags":["arrow","curving","left","right"],"emoji":"↩️","text":"↩︎","type":0,"order":4512,"group":8,"subgroup":85,"version":0.6},{"label":"left arrow curving right","hexcode":"21AA","tags":["arrow","curving","left","right"],"emoji":"↪️","text":"↪︎","type":0,"order":4514,"group":8,"subgroup":85,"version":0.6},{"label":"right arrow curving up","hexcode":"2934","tags":["arrow","curving","right","up"],"emoji":"⤴️","text":"⤴︎","type":0,"order":4516,"group":8,"subgroup":85,"version":0.6},{"label":"right arrow curving down","hexcode":"2935","tags":["arrow","curving","down","right"],"emoji":"⤵️","text":"⤵︎","type":0,"order":4518,"group":8,"subgroup":85,"version":0.6},{"label":"clockwise vertical arrows","hexcode":"1F503","tags":["arrow","arrows","clockwise","refresh","reload","vertical"],"emoji":"🔃","text":"","type":1,"order":4519,"group":8,"subgroup":85,"version":0.6},{"label":"counterclockwise arrows button","hexcode":"1F504","tags":["again","anticlockwise","arrow","arrows","button","counterclockwise","deja","refresh","rewindershins","vu"],"emoji":"🔄","text":"","type":1,"order":4520,"group":8,"subgroup":85,"version":1},{"label":"BACK arrow","hexcode":"1F519","tags":["arrow","back"],"emoji":"🔙","text":"","type":1,"order":4521,"group":8,"subgroup":85,"version":0.6},{"label":"END arrow","hexcode":"1F51A","tags":["arrow","end"],"emoji":"🔚","text":"","type":1,"order":4522,"group":8,"subgroup":85,"version":0.6},{"label":"ON! arrow","hexcode":"1F51B","tags":["arrow","mark","on!"],"emoji":"🔛","text":"","type":1,"order":4523,"group":8,"subgroup":85,"version":0.6},{"label":"SOON arrow","hexcode":"1F51C","tags":["arrow","brb","omw","soon"],"emoji":"🔜","text":"","type":1,"order":4524,"group":8,"subgroup":85,"version":0.6},{"label":"TOP arrow","hexcode":"1F51D","tags":["arrow","homie","top","up"],"emoji":"🔝","text":"","type":1,"order":4525,"group":8,"subgroup":85,"version":0.6},{"label":"place of worship","hexcode":"1F6D0","tags":["place","pray","religion","worship"],"emoji":"🛐","text":"","type":1,"order":4526,"group":8,"subgroup":86,"version":1},{"label":"atom symbol","hexcode":"269B","tags":["atheist","atom","symbol"],"emoji":"⚛️","text":"⚛︎","type":0,"order":4528,"group":8,"subgroup":86,"version":1},{"label":"om","hexcode":"1F549","tags":["hindu","religion"],"emoji":"🕉️","text":"🕉︎","type":0,"order":4530,"group":8,"subgroup":86,"version":0.7},{"label":"star of David","hexcode":"2721","tags":["david","jew","jewish","judaism","religion","star"],"emoji":"✡️","text":"✡︎","type":0,"order":4532,"group":8,"subgroup":86,"version":0.7},{"label":"wheel of dharma","hexcode":"2638","tags":["buddhist","dharma","religion","wheel"],"emoji":"☸️","text":"☸︎","type":0,"order":4534,"group":8,"subgroup":86,"version":0.7},{"label":"yin yang","hexcode":"262F","tags":["difficult","lives","religion","tao","taoist","total","yang","yin","yinyang"],"emoji":"☯️","text":"☯︎","type":0,"order":4536,"group":8,"subgroup":86,"version":0.7},{"label":"latin cross","hexcode":"271D","tags":["christ","christian","cross","latin","religion"],"emoji":"✝️","text":"✝︎","type":0,"order":4538,"group":8,"subgroup":86,"version":0.7},{"label":"orthodox cross","hexcode":"2626","tags":["christian","cross","orthodox","religion"],"emoji":"☦️","text":"☦︎","type":0,"order":4540,"group":8,"subgroup":86,"version":1},{"label":"star and crescent","hexcode":"262A","tags":["crescent","islam","muslim","ramadan","religion","star"],"emoji":"☪️","text":"☪︎","type":0,"order":4542,"group":8,"subgroup":86,"version":0.7},{"label":"peace symbol","hexcode":"262E","tags":["healing","peace","peaceful","symbol"],"emoji":"☮️","text":"☮︎","type":0,"order":4544,"group":8,"subgroup":86,"version":1},{"label":"menorah","hexcode":"1F54E","tags":["candelabrum","candlestick","hanukkah","jewish","judaism","religion"],"emoji":"🕎","text":"","type":1,"order":4545,"group":8,"subgroup":86,"version":1},{"label":"dotted six-pointed star","hexcode":"1F52F","tags":["dotted","fortune","jewish","judaism","six-pointed","star"],"emoji":"🔯","text":"","type":1,"order":4546,"group":8,"subgroup":86,"version":0.6},{"label":"khanda","hexcode":"1FAAF","tags":["deg","fateh","khalsa","religion","sikh","sikhism","tegh"],"emoji":"🪯","text":"","type":1,"order":4547,"group":8,"subgroup":86,"version":15},{"label":"Aries","hexcode":"2648","tags":["aries","horoscope","ram","zodiac"],"emoji":"♈️","text":"♈︎","type":1,"order":4548,"group":8,"subgroup":87,"version":0.6},{"label":"Taurus","hexcode":"2649","tags":["bull","horoscope","ox","taurus","zodiac"],"emoji":"♉️","text":"♉︎","type":1,"order":4549,"group":8,"subgroup":87,"version":0.6},{"label":"Gemini","hexcode":"264A","tags":["gemini","horoscope","twins","zodiac"],"emoji":"♊️","text":"♊︎","type":1,"order":4550,"group":8,"subgroup":87,"version":0.6},{"label":"Cancer","hexcode":"264B","tags":["cancer","crab","horoscope","zodiac"],"emoji":"♋️","text":"♋︎","type":1,"order":4551,"group":8,"subgroup":87,"version":0.6},{"label":"Leo","hexcode":"264C","tags":["horoscope","leo","lion","zodiac"],"emoji":"♌️","text":"♌︎","type":1,"order":4552,"group":8,"subgroup":87,"version":0.6},{"label":"Virgo","hexcode":"264D","tags":["horoscope","virgo","zodiac"],"emoji":"♍️","text":"♍︎","type":1,"order":4553,"group":8,"subgroup":87,"version":0.6},{"label":"Libra","hexcode":"264E","tags":["balance","horoscope","justice","libra","scales","zodiac"],"emoji":"♎️","text":"♎︎","type":1,"order":4554,"group":8,"subgroup":87,"version":0.6},{"label":"Scorpio","hexcode":"264F","tags":["horoscope","scorpio","scorpion","scorpius","zodiac"],"emoji":"♏️","text":"♏︎","type":1,"order":4555,"group":8,"subgroup":87,"version":0.6},{"label":"Sagittarius","hexcode":"2650","tags":["archer","horoscope","sagittarius","zodiac"],"emoji":"♐️","text":"♐︎","type":1,"order":4556,"group":8,"subgroup":87,"version":0.6},{"label":"Capricorn","hexcode":"2651","tags":["capricorn","goat","horoscope","zodiac"],"emoji":"♑️","text":"♑︎","type":1,"order":4557,"group":8,"subgroup":87,"version":0.6},{"label":"Aquarius","hexcode":"2652","tags":["aquarius","bearer","horoscope","water","zodiac"],"emoji":"♒️","text":"♒︎","type":1,"order":4558,"group":8,"subgroup":87,"version":0.6},{"label":"Pisces","hexcode":"2653","tags":["fish","horoscope","pisces","zodiac"],"emoji":"♓️","text":"♓︎","type":1,"order":4559,"group":8,"subgroup":87,"version":0.6},{"label":"Ophiuchus","hexcode":"26CE","tags":["bearer","ophiuchus","serpent","snake","zodiac"],"emoji":"⛎️","text":"⛎︎","type":1,"order":4560,"group":8,"subgroup":87,"version":0.6},{"label":"shuffle tracks button","hexcode":"1F500","tags":["arrow","button","crossed","shuffle","tracks"],"emoji":"🔀","text":"","type":1,"order":4561,"group":8,"subgroup":88,"version":1},{"label":"repeat button","hexcode":"1F501","tags":["arrow","button","clockwise","repeat"],"emoji":"🔁","text":"","type":1,"order":4562,"group":8,"subgroup":88,"version":1},{"label":"repeat single button","hexcode":"1F502","tags":["arrow","button","clockwise","once","repeat","single"],"emoji":"🔂","text":"","type":1,"order":4563,"group":8,"subgroup":88,"version":1},{"label":"play button","hexcode":"25B6","tags":["arrow","button","play","right","triangle"],"emoji":"▶️","text":"▶︎","type":0,"order":4565,"group":8,"subgroup":88,"version":0.6},{"label":"fast-forward button","hexcode":"23E9","tags":["arrow","button","double","fast","fast-forward","forward"],"emoji":"⏩️","text":"⏩︎","type":1,"order":4566,"group":8,"subgroup":88,"version":0.6},{"label":"next track button","hexcode":"23ED","tags":["arrow","button","next","scene","track","triangle"],"emoji":"⏭️","text":"⏭︎","type":0,"order":4568,"group":8,"subgroup":88,"version":0.7},{"label":"play or pause button","hexcode":"23EF","tags":["arrow","button","pause","play","right","triangle"],"emoji":"⏯️","text":"⏯︎","type":0,"order":4570,"group":8,"subgroup":88,"version":1},{"label":"reverse button","hexcode":"25C0","tags":["arrow","button","left","reverse","triangle"],"emoji":"◀️","text":"◀︎","type":0,"order":4572,"group":8,"subgroup":88,"version":0.6},{"label":"fast reverse button","hexcode":"23EA","tags":["arrow","button","double","fast","reverse","rewind"],"emoji":"⏪️","text":"⏪︎","type":1,"order":4573,"group":8,"subgroup":88,"version":0.6},{"label":"last track button","hexcode":"23EE","tags":["arrow","button","last","previous","scene","track","triangle"],"emoji":"⏮️","text":"⏮︎","type":0,"order":4575,"group":8,"subgroup":88,"version":0.7},{"label":"upwards button","hexcode":"1F53C","tags":["arrow","button","red","up","upwards"],"emoji":"🔼","text":"","type":1,"order":4576,"group":8,"subgroup":88,"version":0.6},{"label":"fast up button","hexcode":"23EB","tags":["arrow","button","double","fast","up"],"emoji":"⏫️","text":"⏫︎","type":1,"order":4577,"group":8,"subgroup":88,"version":0.6},{"label":"downwards button","hexcode":"1F53D","tags":["arrow","button","down","downwards","red"],"emoji":"🔽","text":"","type":1,"order":4578,"group":8,"subgroup":88,"version":0.6},{"label":"fast down button","hexcode":"23EC","tags":["arrow","button","double","down","fast"],"emoji":"⏬️","text":"⏬︎","type":1,"order":4579,"group":8,"subgroup":88,"version":0.6},{"label":"pause button","hexcode":"23F8","tags":["bar","button","double","pause","vertical"],"emoji":"⏸️","text":"⏸︎","type":0,"order":4581,"group":8,"subgroup":88,"version":0.7},{"label":"stop button","hexcode":"23F9","tags":["button","square","stop"],"emoji":"⏹️","text":"⏹︎","type":0,"order":4583,"group":8,"subgroup":88,"version":0.7},{"label":"record button","hexcode":"23FA","tags":["button","circle","record"],"emoji":"⏺️","text":"⏺︎","type":0,"order":4585,"group":8,"subgroup":88,"version":0.7},{"label":"eject button","hexcode":"23CF","tags":["button","eject"],"emoji":"⏏️","text":"⏏︎","type":0,"order":4587,"group":8,"subgroup":88,"version":1},{"label":"cinema","hexcode":"1F3A6","tags":["camera","film","movie"],"emoji":"🎦","text":"","type":1,"order":4588,"group":8,"subgroup":88,"version":0.6},{"label":"dim button","hexcode":"1F505","tags":["brightness","button","dim","low"],"emoji":"🔅","text":"","type":1,"order":4589,"group":8,"subgroup":88,"version":1},{"label":"bright button","hexcode":"1F506","tags":["bright","brightness","button","light"],"emoji":"🔆","text":"","type":1,"order":4590,"group":8,"subgroup":88,"version":1},{"label":"antenna bars","hexcode":"1F4F6","tags":["antenna","bar","bars","cell","communication","mobile","phone","signal","telephone"],"emoji":"📶","text":"","type":1,"order":4591,"group":8,"subgroup":88,"version":0.6},{"label":"wireless","hexcode":"1F6DC","tags":["broadband","computer","connectivity","hotspot","internet","network","router","smartphone","wi-fi","wifi","wlan"],"emoji":"🛜","text":"","type":1,"order":4592,"group":8,"subgroup":88,"version":15},{"label":"vibration mode","hexcode":"1F4F3","tags":["cell","communication","mobile","mode","phone","telephone","vibration"],"emoji":"📳","text":"","type":1,"order":4593,"group":8,"subgroup":88,"version":0.6},{"label":"mobile phone off","hexcode":"1F4F4","tags":["cell","mobile","off","phone","telephone"],"emoji":"📴","text":"","type":1,"order":4594,"group":8,"subgroup":88,"version":0.6},{"label":"female sign","hexcode":"2640","tags":["female","sign","woman"],"emoji":"♀️","text":"♀︎","type":0,"order":4596,"group":8,"subgroup":89,"version":4},{"label":"male sign","hexcode":"2642","tags":["male","man","sign"],"emoji":"♂️","text":"♂︎","type":0,"order":4598,"group":8,"subgroup":89,"version":4},{"label":"transgender symbol","hexcode":"26A7","tags":["symbol","transgender"],"emoji":"⚧️","text":"⚧︎","type":0,"order":4600,"group":8,"subgroup":89,"version":13},{"label":"multiply","hexcode":"2716","tags":["cancel","multiplication","sign","x","×"],"emoji":"✖️","text":"✖︎","type":0,"order":4602,"group":8,"subgroup":90,"version":0.6},{"label":"plus","hexcode":"2795","tags":["+"],"emoji":"➕️","text":"➕︎","type":1,"order":4603,"group":8,"subgroup":90,"version":0.6},{"label":"minus","hexcode":"2796","tags":["-","heavy","math","sign","−"],"emoji":"➖️","text":"➖︎","type":1,"order":4604,"group":8,"subgroup":90,"version":0.6},{"label":"divide","hexcode":"2797","tags":["division","heavy","math","sign","÷"],"emoji":"➗️","text":"➗︎","type":1,"order":4605,"group":8,"subgroup":90,"version":0.6},{"label":"heavy equals sign","hexcode":"1F7F0","tags":["answer","equal","equality","equals","heavy","math","sign"],"emoji":"🟰","text":"","type":1,"order":4606,"group":8,"subgroup":90,"version":14},{"label":"infinity","hexcode":"267E","tags":["forever","unbounded","universal"],"emoji":"♾️","text":"♾︎","type":0,"order":4608,"group":8,"subgroup":90,"version":11},{"label":"double exclamation mark","hexcode":"203C","tags":["!","!!","bangbang","double","exclamation","mark","punctuation"],"emoji":"‼️","text":"‼︎","type":0,"order":4610,"group":8,"subgroup":91,"version":0.6},{"label":"exclamation question mark","hexcode":"2049","tags":["!","!?","?","exclamation","interrobang","mark","punctuation","question"],"emoji":"⁉️","text":"⁉︎","type":0,"order":4612,"group":8,"subgroup":91,"version":0.6},{"label":"red question mark","hexcode":"2753","tags":["?","mark","punctuation","question","red"],"emoji":"❓️","text":"❓︎","type":1,"order":4613,"group":8,"subgroup":91,"version":0.6},{"label":"white question mark","hexcode":"2754","tags":["?","mark","outlined","punctuation","question","white"],"emoji":"❔️","text":"❔︎","type":1,"order":4614,"group":8,"subgroup":91,"version":0.6},{"label":"white exclamation mark","hexcode":"2755","tags":["!","exclamation","mark","outlined","punctuation","white"],"emoji":"❕️","text":"❕︎","type":1,"order":4615,"group":8,"subgroup":91,"version":0.6},{"label":"red exclamation mark","hexcode":"2757","tags":["!","exclamation","mark","punctuation","red"],"emoji":"❗️","text":"❗︎","type":1,"order":4616,"group":8,"subgroup":91,"version":0.6},{"label":"wavy dash","hexcode":"3030","tags":["dash","punctuation","wavy"],"emoji":"〰️","text":"〰︎","type":0,"order":4618,"group":8,"subgroup":91,"version":0.6},{"label":"currency exchange","hexcode":"1F4B1","tags":["bank","currency","exchange","money"],"emoji":"💱","text":"","type":1,"order":4619,"group":8,"subgroup":92,"version":0.6},{"label":"heavy dollar sign","hexcode":"1F4B2","tags":["billion","cash","charge","currency","dollar","heavy","million","money","pay","sign"],"emoji":"💲","text":"","type":1,"order":4620,"group":8,"subgroup":92,"version":0.6},{"label":"medical symbol","hexcode":"2695","tags":["aesculapius","medical","medicine","staff","symbol"],"emoji":"⚕️","text":"⚕︎","type":0,"order":4622,"group":8,"subgroup":93,"version":4},{"label":"recycling symbol","hexcode":"267B","tags":["recycle","recycling","symbol"],"emoji":"♻️","text":"♻︎","type":0,"order":4624,"group":8,"subgroup":93,"version":0.6},{"label":"fleur-de-lis","hexcode":"269C","tags":["knights"],"emoji":"⚜️","text":"⚜︎","type":0,"order":4626,"group":8,"subgroup":93,"version":1},{"label":"trident emblem","hexcode":"1F531","tags":["anchor","emblem","poseidon","ship","tool","trident"],"emoji":"🔱","text":"","type":1,"order":4627,"group":8,"subgroup":93,"version":0.6},{"label":"name badge","hexcode":"1F4DB","tags":["badge","name"],"emoji":"📛","text":"","type":1,"order":4628,"group":8,"subgroup":93,"version":0.6},{"label":"Japanese symbol for beginner","hexcode":"1F530","tags":["beginner","chevron","green","japanese","leaf","symbol","tool","yellow"],"emoji":"🔰","text":"","type":1,"order":4629,"group":8,"subgroup":93,"version":0.6},{"label":"hollow red circle","hexcode":"2B55","tags":["circle","heavy","hollow","large","o","red"],"emoji":"⭕️","text":"⭕︎","type":1,"order":4630,"group":8,"subgroup":93,"version":0.6},{"label":"check mark button","hexcode":"2705","tags":["button","check","checked","checkmark","complete","completed","done","fixed","mark","tick","✓"],"emoji":"✅️","text":"✅︎","type":1,"order":4631,"group":8,"subgroup":93,"version":0.6},{"label":"check box with check","hexcode":"2611","tags":["ballot","box","check","checked","done","off","tick","✓"],"emoji":"☑️","text":"☑︎","type":0,"order":4633,"group":8,"subgroup":93,"version":0.6},{"label":"check mark","hexcode":"2714","tags":["check","checked","checkmark","done","heavy","mark","tick","✓"],"emoji":"✔️","text":"✔︎","type":0,"order":4635,"group":8,"subgroup":93,"version":0.6},{"label":"cross mark","hexcode":"274C","tags":["cancel","cross","mark","multiplication","multiply","x","×"],"emoji":"❌️","text":"❌︎","type":1,"order":4636,"group":8,"subgroup":93,"version":0.6},{"label":"cross mark button","hexcode":"274E","tags":["button","cross","mark","multiplication","multiply","square","x","×"],"emoji":"❎️","text":"❎︎","type":1,"order":4637,"group":8,"subgroup":93,"version":0.6},{"label":"curly loop","hexcode":"27B0","tags":["curl","curly","loop"],"emoji":"➰️","text":"➰︎","type":1,"order":4638,"group":8,"subgroup":93,"version":0.6},{"label":"double curly loop","hexcode":"27BF","tags":["curl","curly","double","loop"],"emoji":"➿️","text":"➿︎","type":1,"order":4639,"group":8,"subgroup":93,"version":1},{"label":"part alternation mark","hexcode":"303D","tags":["alternation","mark","part"],"emoji":"〽️","text":"〽︎","type":0,"order":4641,"group":8,"subgroup":93,"version":0.6},{"label":"eight-spoked asterisk","hexcode":"2733","tags":["*","asterisk","eight-spoked"],"emoji":"✳️","text":"✳︎","type":0,"order":4643,"group":8,"subgroup":93,"version":0.6},{"label":"eight-pointed star","hexcode":"2734","tags":["*","eight-pointed","star"],"emoji":"✴️","text":"✴︎","type":0,"order":4645,"group":8,"subgroup":93,"version":0.6},{"label":"sparkle","hexcode":"2747","tags":["*"],"emoji":"❇️","text":"❇︎","type":0,"order":4647,"group":8,"subgroup":93,"version":0.6},{"label":"copyright","hexcode":"00A9","tags":["c"],"emoji":"©️","text":"©︎","type":0,"order":4649,"group":8,"subgroup":93,"version":0.6},{"label":"registered","hexcode":"00AE","tags":["r"],"emoji":"®️","text":"®︎","type":0,"order":4651,"group":8,"subgroup":93,"version":0.6},{"label":"trade mark","hexcode":"2122","tags":["mark","tm","trade","trademark"],"emoji":"™️","text":"™︎","type":0,"order":4653,"group":8,"subgroup":93,"version":0.6},{"label":"splatter","hexcode":"1FADF","tags":["drip","holi","ink","liquid","mess","paint","spill","stain"],"emoji":"🫟","text":"","type":1,"order":4654,"group":8,"subgroup":93,"version":16},{"label":"keycap: #","hexcode":"0023-FE0F-20E3","tags":["keycap"],"emoji":"#️⃣","text":"","type":1,"order":4655,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: *","hexcode":"002A-FE0F-20E3","tags":["keycap"],"emoji":"*️⃣","text":"","type":1,"order":4657,"group":8,"subgroup":94,"version":2},{"label":"keycap: 0","hexcode":"0030-FE0F-20E3","tags":["keycap"],"emoji":"0️⃣","text":"","type":1,"order":4659,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 1","hexcode":"0031-FE0F-20E3","tags":["keycap"],"emoji":"1️⃣","text":"","type":1,"order":4661,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 2","hexcode":"0032-FE0F-20E3","tags":["keycap"],"emoji":"2️⃣","text":"","type":1,"order":4663,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 3","hexcode":"0033-FE0F-20E3","tags":["keycap"],"emoji":"3️⃣","text":"","type":1,"order":4665,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 4","hexcode":"0034-FE0F-20E3","tags":["keycap"],"emoji":"4️⃣","text":"","type":1,"order":4667,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 5","hexcode":"0035-FE0F-20E3","tags":["keycap"],"emoji":"5️⃣","text":"","type":1,"order":4669,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 6","hexcode":"0036-FE0F-20E3","tags":["keycap"],"emoji":"6️⃣","text":"","type":1,"order":4671,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 7","hexcode":"0037-FE0F-20E3","tags":["keycap"],"emoji":"7️⃣","text":"","type":1,"order":4673,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 8","hexcode":"0038-FE0F-20E3","tags":["keycap"],"emoji":"8️⃣","text":"","type":1,"order":4675,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 9","hexcode":"0039-FE0F-20E3","tags":["keycap"],"emoji":"9️⃣","text":"","type":1,"order":4677,"group":8,"subgroup":94,"version":0.6},{"label":"keycap: 10","hexcode":"1F51F","tags":["keycap"],"emoji":"🔟","text":"","type":1,"order":4679,"group":8,"subgroup":94,"version":0.6},{"label":"input latin uppercase","hexcode":"1F520","tags":["abcd","input","latin","letters","uppercase"],"emoji":"🔠","text":"","type":1,"order":4680,"group":8,"subgroup":95,"version":0.6},{"label":"input latin lowercase","hexcode":"1F521","tags":["abcd","input","latin","letters","lowercase"],"emoji":"🔡","text":"","type":1,"order":4681,"group":8,"subgroup":95,"version":0.6},{"label":"input numbers","hexcode":"1F522","tags":["1234","input","numbers"],"emoji":"🔢","text":"","type":1,"order":4682,"group":8,"subgroup":95,"version":0.6},{"label":"input symbols","hexcode":"1F523","tags":["%","&","input","symbols","♪","〒"],"emoji":"🔣","text":"","type":1,"order":4683,"group":8,"subgroup":95,"version":0.6},{"label":"input latin letters","hexcode":"1F524","tags":["abc","alphabet","input","latin","letters"],"emoji":"🔤","text":"","type":1,"order":4684,"group":8,"subgroup":95,"version":0.6},{"label":"A button (blood type)","hexcode":"1F170","tags":["blood","button","type"],"emoji":"🅰️","text":"🅰︎","type":0,"order":4686,"group":8,"subgroup":95,"version":0.6},{"label":"AB button (blood type)","hexcode":"1F18E","tags":["ab","blood","button","type"],"emoji":"🆎","text":"","type":1,"order":4687,"group":8,"subgroup":95,"version":0.6},{"label":"B button (blood type)","hexcode":"1F171","tags":["b","blood","button","type"],"emoji":"🅱️","text":"🅱︎","type":0,"order":4689,"group":8,"subgroup":95,"version":0.6},{"label":"CL button","hexcode":"1F191","tags":["button","cl"],"emoji":"🆑","text":"","type":1,"order":4690,"group":8,"subgroup":95,"version":0.6},{"label":"COOL button","hexcode":"1F192","tags":["button","cool"],"emoji":"🆒","text":"","type":1,"order":4691,"group":8,"subgroup":95,"version":0.6},{"label":"FREE button","hexcode":"1F193","tags":["button","free"],"emoji":"🆓","text":"","type":1,"order":4692,"group":8,"subgroup":95,"version":0.6},{"label":"information","hexcode":"2139","tags":["i"],"emoji":"ℹ️","text":"ℹ︎","type":0,"order":4694,"group":8,"subgroup":95,"version":0.6},{"label":"ID button","hexcode":"1F194","tags":["button","id","identity"],"emoji":"🆔","text":"","type":1,"order":4695,"group":8,"subgroup":95,"version":0.6},{"label":"circled M","hexcode":"24C2","tags":["circle","circled","m"],"emoji":"Ⓜ️","text":"Ⓜ︎","type":0,"order":4697,"group":8,"subgroup":95,"version":0.6},{"label":"NEW button","hexcode":"1F195","tags":["button","new"],"emoji":"🆕","text":"","type":1,"order":4698,"group":8,"subgroup":95,"version":0.6},{"label":"NG button","hexcode":"1F196","tags":["button","ng"],"emoji":"🆖","text":"","type":1,"order":4699,"group":8,"subgroup":95,"version":0.6},{"label":"O button (blood type)","hexcode":"1F17E","tags":["blood","button","o","type"],"emoji":"🅾️","text":"🅾︎","type":0,"order":4701,"group":8,"subgroup":95,"version":0.6},{"label":"OK button","hexcode":"1F197","tags":["button","ok","okay"],"emoji":"🆗","text":"","type":1,"order":4702,"group":8,"subgroup":95,"version":0.6},{"label":"P button","hexcode":"1F17F","tags":["button","p","parking"],"emoji":"🅿️","text":"🅿︎","type":0,"order":4704,"group":8,"subgroup":95,"version":0.6},{"label":"SOS button","hexcode":"1F198","tags":["button","help","sos"],"emoji":"🆘","text":"","type":1,"order":4705,"group":8,"subgroup":95,"version":0.6},{"label":"UP! button","hexcode":"1F199","tags":["button","mark","up","up!"],"emoji":"🆙","text":"","type":1,"order":4706,"group":8,"subgroup":95,"version":0.6},{"label":"VS button","hexcode":"1F19A","tags":["button","versus","vs"],"emoji":"🆚","text":"","type":1,"order":4707,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “here” button","hexcode":"1F201","tags":["button","here","japanese","katakana"],"emoji":"🈁","text":"","type":1,"order":4708,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “service charge” button","hexcode":"1F202","tags":["button","charge","japanese","katakana","service"],"emoji":"🈂️","text":"🈂︎","type":0,"order":4710,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “monthly amount” button","hexcode":"1F237","tags":["amount","button","ideograph","japanese","monthly"],"emoji":"🈷️","text":"🈷︎","type":0,"order":4712,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “not free of charge” button","hexcode":"1F236","tags":["button","charge","free","ideograph","japanese","not"],"emoji":"🈶","text":"","type":1,"order":4713,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “reserved” button","hexcode":"1F22F","tags":["button","ideograph","japanese","reserved"],"emoji":"🈯️","text":"🈯︎","type":1,"order":4714,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “bargain” button","hexcode":"1F250","tags":["bargain","button","ideograph","japanese"],"emoji":"🉐","text":"","type":1,"order":4715,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “discount” button","hexcode":"1F239","tags":["button","discount","ideograph","japanese"],"emoji":"🈹","text":"","type":1,"order":4716,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “free of charge” button","hexcode":"1F21A","tags":["button","charge","free","ideograph","japanese"],"emoji":"🈚️","text":"🈚︎","type":1,"order":4717,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “prohibited” button","hexcode":"1F232","tags":["button","ideograph","japanese","prohibited"],"emoji":"🈲","text":"","type":1,"order":4718,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “acceptable” button","hexcode":"1F251","tags":["acceptable","button","ideograph","japanese"],"emoji":"🉑","text":"","type":1,"order":4719,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “application” button","hexcode":"1F238","tags":["application","button","ideograph","japanese"],"emoji":"🈸","text":"","type":1,"order":4720,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “passing grade” button","hexcode":"1F234","tags":["button","grade","ideograph","japanese","passing"],"emoji":"🈴","text":"","type":1,"order":4721,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “vacancy” button","hexcode":"1F233","tags":["button","ideograph","japanese","vacancy"],"emoji":"🈳","text":"","type":1,"order":4722,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “congratulations” button","hexcode":"3297","tags":["button","congratulations","ideograph","japanese"],"emoji":"㊗️","text":"㊗︎","type":0,"order":4724,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “secret” button","hexcode":"3299","tags":["button","ideograph","japanese","secret"],"emoji":"㊙️","text":"㊙︎","type":0,"order":4726,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “open for business” button","hexcode":"1F23A","tags":["business","button","ideograph","japanese","open"],"emoji":"🈺","text":"","type":1,"order":4727,"group":8,"subgroup":95,"version":0.6},{"label":"Japanese “no vacancy” button","hexcode":"1F235","tags":["button","ideograph","japanese","no","vacancy"],"emoji":"🈵","text":"","type":1,"order":4728,"group":8,"subgroup":95,"version":0.6},{"label":"red circle","hexcode":"1F534","tags":["circle","geometric","red"],"emoji":"🔴","text":"","type":1,"order":4729,"group":8,"subgroup":96,"version":0.6},{"label":"orange circle","hexcode":"1F7E0","tags":["circle","orange"],"emoji":"🟠","text":"","type":1,"order":4730,"group":8,"subgroup":96,"version":12},{"label":"yellow circle","hexcode":"1F7E1","tags":["circle","yellow"],"emoji":"🟡","text":"","type":1,"order":4731,"group":8,"subgroup":96,"version":12},{"label":"green circle","hexcode":"1F7E2","tags":["circle","green"],"emoji":"🟢","text":"","type":1,"order":4732,"group":8,"subgroup":96,"version":12},{"label":"blue circle","hexcode":"1F535","tags":["blue","circle","geometric"],"emoji":"🔵","text":"","type":1,"order":4733,"group":8,"subgroup":96,"version":0.6},{"label":"purple circle","hexcode":"1F7E3","tags":["circle","purple"],"emoji":"🟣","text":"","type":1,"order":4734,"group":8,"subgroup":96,"version":12},{"label":"brown circle","hexcode":"1F7E4","tags":["brown","circle"],"emoji":"🟤","text":"","type":1,"order":4735,"group":8,"subgroup":96,"version":12},{"label":"black circle","hexcode":"26AB","tags":["black","circle","geometric"],"emoji":"⚫️","text":"⚫︎","type":1,"order":4736,"group":8,"subgroup":96,"version":0.6},{"label":"white circle","hexcode":"26AA","tags":["circle","geometric","white"],"emoji":"⚪️","text":"⚪︎","type":1,"order":4737,"group":8,"subgroup":96,"version":0.6},{"label":"red square","hexcode":"1F7E5","tags":["card","penalty","red","square"],"emoji":"🟥","text":"","type":1,"order":4738,"group":8,"subgroup":96,"version":12},{"label":"orange square","hexcode":"1F7E7","tags":["orange","square"],"emoji":"🟧","text":"","type":1,"order":4739,"group":8,"subgroup":96,"version":12},{"label":"yellow square","hexcode":"1F7E8","tags":["card","penalty","square","yellow"],"emoji":"🟨","text":"","type":1,"order":4740,"group":8,"subgroup":96,"version":12},{"label":"green square","hexcode":"1F7E9","tags":["green","square"],"emoji":"🟩","text":"","type":1,"order":4741,"group":8,"subgroup":96,"version":12},{"label":"blue square","hexcode":"1F7E6","tags":["blue","square"],"emoji":"🟦","text":"","type":1,"order":4742,"group":8,"subgroup":96,"version":12},{"label":"purple square","hexcode":"1F7EA","tags":["purple","square"],"emoji":"🟪","text":"","type":1,"order":4743,"group":8,"subgroup":96,"version":12},{"label":"brown square","hexcode":"1F7EB","tags":["brown","square"],"emoji":"🟫","text":"","type":1,"order":4744,"group":8,"subgroup":96,"version":12},{"label":"black large square","hexcode":"2B1B","tags":["black","geometric","large","square"],"emoji":"⬛️","text":"⬛︎","type":1,"order":4745,"group":8,"subgroup":96,"version":0.6},{"label":"white large square","hexcode":"2B1C","tags":["geometric","large","square","white"],"emoji":"⬜️","text":"⬜︎","type":1,"order":4746,"group":8,"subgroup":96,"version":0.6},{"label":"black medium square","hexcode":"25FC","tags":["black","geometric","medium","square"],"emoji":"◼️","text":"◼︎","type":0,"order":4748,"group":8,"subgroup":96,"version":0.6},{"label":"white medium square","hexcode":"25FB","tags":["geometric","medium","square","white"],"emoji":"◻️","text":"◻︎","type":0,"order":4750,"group":8,"subgroup":96,"version":0.6},{"label":"black medium-small square","hexcode":"25FE","tags":["black","geometric","medium-small","square"],"emoji":"◾️","text":"◾︎","type":1,"order":4751,"group":8,"subgroup":96,"version":0.6},{"label":"white medium-small square","hexcode":"25FD","tags":["geometric","medium-small","square","white"],"emoji":"◽️","text":"◽︎","type":1,"order":4752,"group":8,"subgroup":96,"version":0.6},{"label":"black small square","hexcode":"25AA","tags":["black","geometric","small","square"],"emoji":"▪️","text":"▪︎","type":0,"order":4754,"group":8,"subgroup":96,"version":0.6},{"label":"white small square","hexcode":"25AB","tags":["geometric","small","square","white"],"emoji":"▫️","text":"▫︎","type":0,"order":4756,"group":8,"subgroup":96,"version":0.6},{"label":"large orange diamond","hexcode":"1F536","tags":["diamond","geometric","large","orange"],"emoji":"🔶","text":"","type":1,"order":4757,"group":8,"subgroup":96,"version":0.6},{"label":"large blue diamond","hexcode":"1F537","tags":["blue","diamond","geometric","large"],"emoji":"🔷","text":"","type":1,"order":4758,"group":8,"subgroup":96,"version":0.6},{"label":"small orange diamond","hexcode":"1F538","tags":["diamond","geometric","orange","small"],"emoji":"🔸","text":"","type":1,"order":4759,"group":8,"subgroup":96,"version":0.6},{"label":"small blue diamond","hexcode":"1F539","tags":["blue","diamond","geometric","small"],"emoji":"🔹","text":"","type":1,"order":4760,"group":8,"subgroup":96,"version":0.6},{"label":"red triangle pointed up","hexcode":"1F53A","tags":["geometric","pointed","red","triangle","up"],"emoji":"🔺","text":"","type":1,"order":4761,"group":8,"subgroup":96,"version":0.6},{"label":"red triangle pointed down","hexcode":"1F53B","tags":["down","geometric","pointed","red","triangle"],"emoji":"🔻","text":"","type":1,"order":4762,"group":8,"subgroup":96,"version":0.6},{"label":"diamond with a dot","hexcode":"1F4A0","tags":["comic","diamond","dot","geometric"],"emoji":"💠","text":"","type":1,"order":4763,"group":8,"subgroup":96,"version":0.6},{"label":"radio button","hexcode":"1F518","tags":["button","geometric","radio"],"emoji":"🔘","text":"","type":1,"order":4764,"group":8,"subgroup":96,"version":0.6},{"label":"white square button","hexcode":"1F533","tags":["button","geometric","outlined","square","white"],"emoji":"🔳","text":"","type":1,"order":4765,"group":8,"subgroup":96,"version":0.6},{"label":"black square button","hexcode":"1F532","tags":["black","button","geometric","square"],"emoji":"🔲","text":"","type":1,"order":4766,"group":8,"subgroup":96,"version":0.6},{"label":"chequered flag","hexcode":"1F3C1","tags":["checkered","chequered","finish","flag","flags","game","race","racing","sport","win"],"emoji":"🏁","text":"","type":1,"order":4767,"group":9,"subgroup":97,"version":0.6},{"label":"triangular flag","hexcode":"1F6A9","tags":["construction","flag","golf","post","triangular"],"emoji":"🚩","text":"","type":1,"order":4768,"group":9,"subgroup":97,"version":0.6},{"label":"crossed flags","hexcode":"1F38C","tags":["celebration","cross","crossed","flags","japanese"],"emoji":"🎌","text":"","type":1,"order":4769,"group":9,"subgroup":97,"version":0.6},{"label":"black flag","hexcode":"1F3F4","tags":["black","flag","waving"],"emoji":"🏴","text":"","type":1,"order":4770,"group":9,"subgroup":97,"version":1},{"label":"white flag","hexcode":"1F3F3","tags":["flag","waving","white"],"emoji":"🏳️","text":"🏳︎","type":0,"order":4772,"group":9,"subgroup":97,"version":0.7},{"label":"rainbow flag","hexcode":"1F3F3-FE0F-200D-1F308","tags":["bisexual","flag","gay","genderqueer","glbt","glbtq","lesbian","lgbt","lgbtq","lgbtqia","pride","queer","rainbow","trans","transgender"],"emoji":"🏳️‍🌈","text":"","type":1,"order":4773,"group":9,"subgroup":97,"version":4},{"label":"transgender flag","hexcode":"1F3F3-FE0F-200D-26A7-FE0F","tags":["blue","flag","light","pink","transgender","white"],"emoji":"🏳️‍⚧️","text":"","type":1,"order":4775,"group":9,"subgroup":97,"version":13},{"label":"pirate flag","hexcode":"1F3F4-200D-2620-FE0F","tags":["flag","jolly","pirate","plunder","roger","treasure"],"emoji":"🏴‍☠️","text":"","type":1,"order":4779,"group":9,"subgroup":97,"version":11},{"label":"flag: Ascension Island","hexcode":"1F1E6-1F1E8","tags":["AC","flag"],"emoji":"🇦🇨","text":"","type":1,"order":4781,"group":9,"subgroup":98,"version":2},{"label":"flag: Andorra","hexcode":"1F1E6-1F1E9","tags":["AD","flag"],"emoji":"🇦🇩","text":"","type":1,"order":4782,"group":9,"subgroup":98,"version":2},{"label":"flag: United Arab Emirates","hexcode":"1F1E6-1F1EA","tags":["AE","flag"],"emoji":"🇦🇪","text":"","type":1,"order":4783,"group":9,"subgroup":98,"version":2},{"label":"flag: Afghanistan","hexcode":"1F1E6-1F1EB","tags":["AF","flag"],"emoji":"🇦🇫","text":"","type":1,"order":4784,"group":9,"subgroup":98,"version":2},{"label":"flag: Antigua & Barbuda","hexcode":"1F1E6-1F1EC","tags":["AG","flag"],"emoji":"🇦🇬","text":"","type":1,"order":4785,"group":9,"subgroup":98,"version":2},{"label":"flag: Anguilla","hexcode":"1F1E6-1F1EE","tags":["AI","flag"],"emoji":"🇦🇮","text":"","type":1,"order":4786,"group":9,"subgroup":98,"version":2},{"label":"flag: Albania","hexcode":"1F1E6-1F1F1","tags":["AL","flag"],"emoji":"🇦🇱","text":"","type":1,"order":4787,"group":9,"subgroup":98,"version":2},{"label":"flag: Armenia","hexcode":"1F1E6-1F1F2","tags":["AM","flag"],"emoji":"🇦🇲","text":"","type":1,"order":4788,"group":9,"subgroup":98,"version":2},{"label":"flag: Angola","hexcode":"1F1E6-1F1F4","tags":["AO","flag"],"emoji":"🇦🇴","text":"","type":1,"order":4789,"group":9,"subgroup":98,"version":2},{"label":"flag: Antarctica","hexcode":"1F1E6-1F1F6","tags":["AQ","flag"],"emoji":"🇦🇶","text":"","type":1,"order":4790,"group":9,"subgroup":98,"version":2},{"label":"flag: Argentina","hexcode":"1F1E6-1F1F7","tags":["AR","flag"],"emoji":"🇦🇷","text":"","type":1,"order":4791,"group":9,"subgroup":98,"version":2},{"label":"flag: American Samoa","hexcode":"1F1E6-1F1F8","tags":["AS","flag"],"emoji":"🇦🇸","text":"","type":1,"order":4792,"group":9,"subgroup":98,"version":2},{"label":"flag: Austria","hexcode":"1F1E6-1F1F9","tags":["AT","flag"],"emoji":"🇦🇹","text":"","type":1,"order":4793,"group":9,"subgroup":98,"version":2},{"label":"flag: Australia","hexcode":"1F1E6-1F1FA","tags":["AU","flag"],"emoji":"🇦🇺","text":"","type":1,"order":4794,"group":9,"subgroup":98,"version":2},{"label":"flag: Aruba","hexcode":"1F1E6-1F1FC","tags":["AW","flag"],"emoji":"🇦🇼","text":"","type":1,"order":4795,"group":9,"subgroup":98,"version":2},{"label":"flag: Åland Islands","hexcode":"1F1E6-1F1FD","tags":["AX","flag"],"emoji":"🇦🇽","text":"","type":1,"order":4796,"group":9,"subgroup":98,"version":2},{"label":"flag: Azerbaijan","hexcode":"1F1E6-1F1FF","tags":["AZ","flag"],"emoji":"🇦🇿","text":"","type":1,"order":4797,"group":9,"subgroup":98,"version":2},{"label":"flag: Bosnia & Herzegovina","hexcode":"1F1E7-1F1E6","tags":["BA","flag"],"emoji":"🇧🇦","text":"","type":1,"order":4798,"group":9,"subgroup":98,"version":2},{"label":"flag: Barbados","hexcode":"1F1E7-1F1E7","tags":["BB","flag"],"emoji":"🇧🇧","text":"","type":1,"order":4799,"group":9,"subgroup":98,"version":2},{"label":"flag: Bangladesh","hexcode":"1F1E7-1F1E9","tags":["BD","flag"],"emoji":"🇧🇩","text":"","type":1,"order":4800,"group":9,"subgroup":98,"version":2},{"label":"flag: Belgium","hexcode":"1F1E7-1F1EA","tags":["BE","flag"],"emoji":"🇧🇪","text":"","type":1,"order":4801,"group":9,"subgroup":98,"version":2},{"label":"flag: Burkina Faso","hexcode":"1F1E7-1F1EB","tags":["BF","flag"],"emoji":"🇧🇫","text":"","type":1,"order":4802,"group":9,"subgroup":98,"version":2},{"label":"flag: Bulgaria","hexcode":"1F1E7-1F1EC","tags":["BG","flag"],"emoji":"🇧🇬","text":"","type":1,"order":4803,"group":9,"subgroup":98,"version":2},{"label":"flag: Bahrain","hexcode":"1F1E7-1F1ED","tags":["BH","flag"],"emoji":"🇧🇭","text":"","type":1,"order":4804,"group":9,"subgroup":98,"version":2},{"label":"flag: Burundi","hexcode":"1F1E7-1F1EE","tags":["BI","flag"],"emoji":"🇧🇮","text":"","type":1,"order":4805,"group":9,"subgroup":98,"version":2},{"label":"flag: Benin","hexcode":"1F1E7-1F1EF","tags":["BJ","flag"],"emoji":"🇧🇯","text":"","type":1,"order":4806,"group":9,"subgroup":98,"version":2},{"label":"flag: St. Barthélemy","hexcode":"1F1E7-1F1F1","tags":["BL","flag"],"emoji":"🇧🇱","text":"","type":1,"order":4807,"group":9,"subgroup":98,"version":2},{"label":"flag: Bermuda","hexcode":"1F1E7-1F1F2","tags":["BM","flag"],"emoji":"🇧🇲","text":"","type":1,"order":4808,"group":9,"subgroup":98,"version":2},{"label":"flag: Brunei","hexcode":"1F1E7-1F1F3","tags":["BN","flag"],"emoji":"🇧🇳","text":"","type":1,"order":4809,"group":9,"subgroup":98,"version":2},{"label":"flag: Bolivia","hexcode":"1F1E7-1F1F4","tags":["BO","flag"],"emoji":"🇧🇴","text":"","type":1,"order":4810,"group":9,"subgroup":98,"version":2},{"label":"flag: Caribbean Netherlands","hexcode":"1F1E7-1F1F6","tags":["BQ","flag"],"emoji":"🇧🇶","text":"","type":1,"order":4811,"group":9,"subgroup":98,"version":2},{"label":"flag: Brazil","hexcode":"1F1E7-1F1F7","tags":["BR","flag"],"emoji":"🇧🇷","text":"","type":1,"order":4812,"group":9,"subgroup":98,"version":2},{"label":"flag: Bahamas","hexcode":"1F1E7-1F1F8","tags":["BS","flag"],"emoji":"🇧🇸","text":"","type":1,"order":4813,"group":9,"subgroup":98,"version":2},{"label":"flag: Bhutan","hexcode":"1F1E7-1F1F9","tags":["BT","flag"],"emoji":"🇧🇹","text":"","type":1,"order":4814,"group":9,"subgroup":98,"version":2},{"label":"flag: Bouvet Island","hexcode":"1F1E7-1F1FB","tags":["BV","flag"],"emoji":"🇧🇻","text":"","type":1,"order":4815,"group":9,"subgroup":98,"version":2},{"label":"flag: Botswana","hexcode":"1F1E7-1F1FC","tags":["BW","flag"],"emoji":"🇧🇼","text":"","type":1,"order":4816,"group":9,"subgroup":98,"version":2},{"label":"flag: Belarus","hexcode":"1F1E7-1F1FE","tags":["BY","flag"],"emoji":"🇧🇾","text":"","type":1,"order":4817,"group":9,"subgroup":98,"version":2},{"label":"flag: Belize","hexcode":"1F1E7-1F1FF","tags":["BZ","flag"],"emoji":"🇧🇿","text":"","type":1,"order":4818,"group":9,"subgroup":98,"version":2},{"label":"flag: Canada","hexcode":"1F1E8-1F1E6","tags":["CA","flag"],"emoji":"🇨🇦","text":"","type":1,"order":4819,"group":9,"subgroup":98,"version":2},{"label":"flag: Cocos (Keeling) Islands","hexcode":"1F1E8-1F1E8","tags":["CC","flag"],"emoji":"🇨🇨","text":"","type":1,"order":4820,"group":9,"subgroup":98,"version":2},{"label":"flag: Congo - Kinshasa","hexcode":"1F1E8-1F1E9","tags":["CD","flag"],"emoji":"🇨🇩","text":"","type":1,"order":4821,"group":9,"subgroup":98,"version":2},{"label":"flag: Central African Republic","hexcode":"1F1E8-1F1EB","tags":["CF","flag"],"emoji":"🇨🇫","text":"","type":1,"order":4822,"group":9,"subgroup":98,"version":2},{"label":"flag: Congo - Brazzaville","hexcode":"1F1E8-1F1EC","tags":["CG","flag"],"emoji":"🇨🇬","text":"","type":1,"order":4823,"group":9,"subgroup":98,"version":2},{"label":"flag: Switzerland","hexcode":"1F1E8-1F1ED","tags":["CH","flag"],"emoji":"🇨🇭","text":"","type":1,"order":4824,"group":9,"subgroup":98,"version":2},{"label":"flag: Côte d’Ivoire","hexcode":"1F1E8-1F1EE","tags":["CI","flag"],"emoji":"🇨🇮","text":"","type":1,"order":4825,"group":9,"subgroup":98,"version":2},{"label":"flag: Cook Islands","hexcode":"1F1E8-1F1F0","tags":["CK","flag"],"emoji":"🇨🇰","text":"","type":1,"order":4826,"group":9,"subgroup":98,"version":2},{"label":"flag: Chile","hexcode":"1F1E8-1F1F1","tags":["CL","flag"],"emoji":"🇨🇱","text":"","type":1,"order":4827,"group":9,"subgroup":98,"version":2},{"label":"flag: Cameroon","hexcode":"1F1E8-1F1F2","tags":["CM","flag"],"emoji":"🇨🇲","text":"","type":1,"order":4828,"group":9,"subgroup":98,"version":2},{"label":"flag: China","hexcode":"1F1E8-1F1F3","tags":["CN","flag"],"emoji":"🇨🇳","text":"","type":1,"order":4829,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Colombia","hexcode":"1F1E8-1F1F4","tags":["CO","flag"],"emoji":"🇨🇴","text":"","type":1,"order":4830,"group":9,"subgroup":98,"version":2},{"label":"flag: Clipperton Island","hexcode":"1F1E8-1F1F5","tags":["CP","flag"],"emoji":"🇨🇵","text":"","type":1,"order":4831,"group":9,"subgroup":98,"version":2},{"label":"flag: Sark","hexcode":"1F1E8-1F1F6","tags":["CQ","flag"],"emoji":"🇨🇶","text":"","type":1,"order":4832,"group":9,"subgroup":98,"version":16},{"label":"flag: Costa Rica","hexcode":"1F1E8-1F1F7","tags":["CR","flag"],"emoji":"🇨🇷","text":"","type":1,"order":4833,"group":9,"subgroup":98,"version":2},{"label":"flag: Cuba","hexcode":"1F1E8-1F1FA","tags":["CU","flag"],"emoji":"🇨🇺","text":"","type":1,"order":4834,"group":9,"subgroup":98,"version":2},{"label":"flag: Cape Verde","hexcode":"1F1E8-1F1FB","tags":["CV","flag"],"emoji":"🇨🇻","text":"","type":1,"order":4835,"group":9,"subgroup":98,"version":2},{"label":"flag: Curaçao","hexcode":"1F1E8-1F1FC","tags":["CW","flag"],"emoji":"🇨🇼","text":"","type":1,"order":4836,"group":9,"subgroup":98,"version":2},{"label":"flag: Christmas Island","hexcode":"1F1E8-1F1FD","tags":["CX","flag"],"emoji":"🇨🇽","text":"","type":1,"order":4837,"group":9,"subgroup":98,"version":2},{"label":"flag: Cyprus","hexcode":"1F1E8-1F1FE","tags":["CY","flag"],"emoji":"🇨🇾","text":"","type":1,"order":4838,"group":9,"subgroup":98,"version":2},{"label":"flag: Czechia","hexcode":"1F1E8-1F1FF","tags":["CZ","flag"],"emoji":"🇨🇿","text":"","type":1,"order":4839,"group":9,"subgroup":98,"version":2},{"label":"flag: Germany","hexcode":"1F1E9-1F1EA","tags":["DE","flag"],"emoji":"🇩🇪","text":"","type":1,"order":4840,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Diego Garcia","hexcode":"1F1E9-1F1EC","tags":["DG","flag"],"emoji":"🇩🇬","text":"","type":1,"order":4841,"group":9,"subgroup":98,"version":2},{"label":"flag: Djibouti","hexcode":"1F1E9-1F1EF","tags":["DJ","flag"],"emoji":"🇩🇯","text":"","type":1,"order":4842,"group":9,"subgroup":98,"version":2},{"label":"flag: Denmark","hexcode":"1F1E9-1F1F0","tags":["DK","flag"],"emoji":"🇩🇰","text":"","type":1,"order":4843,"group":9,"subgroup":98,"version":2},{"label":"flag: Dominica","hexcode":"1F1E9-1F1F2","tags":["DM","flag"],"emoji":"🇩🇲","text":"","type":1,"order":4844,"group":9,"subgroup":98,"version":2},{"label":"flag: Dominican Republic","hexcode":"1F1E9-1F1F4","tags":["DO","flag"],"emoji":"🇩🇴","text":"","type":1,"order":4845,"group":9,"subgroup":98,"version":2},{"label":"flag: Algeria","hexcode":"1F1E9-1F1FF","tags":["DZ","flag"],"emoji":"🇩🇿","text":"","type":1,"order":4846,"group":9,"subgroup":98,"version":2},{"label":"flag: Ceuta & Melilla","hexcode":"1F1EA-1F1E6","tags":["EA","flag"],"emoji":"🇪🇦","text":"","type":1,"order":4847,"group":9,"subgroup":98,"version":2},{"label":"flag: Ecuador","hexcode":"1F1EA-1F1E8","tags":["EC","flag"],"emoji":"🇪🇨","text":"","type":1,"order":4848,"group":9,"subgroup":98,"version":2},{"label":"flag: Estonia","hexcode":"1F1EA-1F1EA","tags":["EE","flag"],"emoji":"🇪🇪","text":"","type":1,"order":4849,"group":9,"subgroup":98,"version":2},{"label":"flag: Egypt","hexcode":"1F1EA-1F1EC","tags":["EG","flag"],"emoji":"🇪🇬","text":"","type":1,"order":4850,"group":9,"subgroup":98,"version":2},{"label":"flag: Western Sahara","hexcode":"1F1EA-1F1ED","tags":["EH","flag"],"emoji":"🇪🇭","text":"","type":1,"order":4851,"group":9,"subgroup":98,"version":2},{"label":"flag: Eritrea","hexcode":"1F1EA-1F1F7","tags":["ER","flag"],"emoji":"🇪🇷","text":"","type":1,"order":4852,"group":9,"subgroup":98,"version":2},{"label":"flag: Spain","hexcode":"1F1EA-1F1F8","tags":["ES","flag"],"emoji":"🇪🇸","text":"","type":1,"order":4853,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Ethiopia","hexcode":"1F1EA-1F1F9","tags":["ET","flag"],"emoji":"🇪🇹","text":"","type":1,"order":4854,"group":9,"subgroup":98,"version":2},{"label":"flag: European Union","hexcode":"1F1EA-1F1FA","tags":["EU","flag"],"emoji":"🇪🇺","text":"","type":1,"order":4855,"group":9,"subgroup":98,"version":2},{"label":"flag: Finland","hexcode":"1F1EB-1F1EE","tags":["FI","flag"],"emoji":"🇫🇮","text":"","type":1,"order":4856,"group":9,"subgroup":98,"version":2},{"label":"flag: Fiji","hexcode":"1F1EB-1F1EF","tags":["FJ","flag"],"emoji":"🇫🇯","text":"","type":1,"order":4857,"group":9,"subgroup":98,"version":2},{"label":"flag: Falkland Islands","hexcode":"1F1EB-1F1F0","tags":["FK","flag"],"emoji":"🇫🇰","text":"","type":1,"order":4858,"group":9,"subgroup":98,"version":2},{"label":"flag: Micronesia","hexcode":"1F1EB-1F1F2","tags":["FM","flag"],"emoji":"🇫🇲","text":"","type":1,"order":4859,"group":9,"subgroup":98,"version":2},{"label":"flag: Faroe Islands","hexcode":"1F1EB-1F1F4","tags":["FO","flag"],"emoji":"🇫🇴","text":"","type":1,"order":4860,"group":9,"subgroup":98,"version":2},{"label":"flag: France","hexcode":"1F1EB-1F1F7","tags":["FR","flag"],"emoji":"🇫🇷","text":"","type":1,"order":4861,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Gabon","hexcode":"1F1EC-1F1E6","tags":["GA","flag"],"emoji":"🇬🇦","text":"","type":1,"order":4862,"group":9,"subgroup":98,"version":2},{"label":"flag: United Kingdom","hexcode":"1F1EC-1F1E7","tags":["GB","flag"],"emoji":"🇬🇧","text":"","type":1,"order":4863,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Grenada","hexcode":"1F1EC-1F1E9","tags":["GD","flag"],"emoji":"🇬🇩","text":"","type":1,"order":4864,"group":9,"subgroup":98,"version":2},{"label":"flag: Georgia","hexcode":"1F1EC-1F1EA","tags":["GE","flag"],"emoji":"🇬🇪","text":"","type":1,"order":4865,"group":9,"subgroup":98,"version":2},{"label":"flag: French Guiana","hexcode":"1F1EC-1F1EB","tags":["GF","flag"],"emoji":"🇬🇫","text":"","type":1,"order":4866,"group":9,"subgroup":98,"version":2},{"label":"flag: Guernsey","hexcode":"1F1EC-1F1EC","tags":["GG","flag"],"emoji":"🇬🇬","text":"","type":1,"order":4867,"group":9,"subgroup":98,"version":2},{"label":"flag: Ghana","hexcode":"1F1EC-1F1ED","tags":["GH","flag"],"emoji":"🇬🇭","text":"","type":1,"order":4868,"group":9,"subgroup":98,"version":2},{"label":"flag: Gibraltar","hexcode":"1F1EC-1F1EE","tags":["GI","flag"],"emoji":"🇬🇮","text":"","type":1,"order":4869,"group":9,"subgroup":98,"version":2},{"label":"flag: Greenland","hexcode":"1F1EC-1F1F1","tags":["GL","flag"],"emoji":"🇬🇱","text":"","type":1,"order":4870,"group":9,"subgroup":98,"version":2},{"label":"flag: Gambia","hexcode":"1F1EC-1F1F2","tags":["GM","flag"],"emoji":"🇬🇲","text":"","type":1,"order":4871,"group":9,"subgroup":98,"version":2},{"label":"flag: Guinea","hexcode":"1F1EC-1F1F3","tags":["GN","flag"],"emoji":"🇬🇳","text":"","type":1,"order":4872,"group":9,"subgroup":98,"version":2},{"label":"flag: Guadeloupe","hexcode":"1F1EC-1F1F5","tags":["GP","flag"],"emoji":"🇬🇵","text":"","type":1,"order":4873,"group":9,"subgroup":98,"version":2},{"label":"flag: Equatorial Guinea","hexcode":"1F1EC-1F1F6","tags":["GQ","flag"],"emoji":"🇬🇶","text":"","type":1,"order":4874,"group":9,"subgroup":98,"version":2},{"label":"flag: Greece","hexcode":"1F1EC-1F1F7","tags":["GR","flag"],"emoji":"🇬🇷","text":"","type":1,"order":4875,"group":9,"subgroup":98,"version":2},{"label":"flag: South Georgia & South Sandwich Islands","hexcode":"1F1EC-1F1F8","tags":["GS","flag"],"emoji":"🇬🇸","text":"","type":1,"order":4876,"group":9,"subgroup":98,"version":2},{"label":"flag: Guatemala","hexcode":"1F1EC-1F1F9","tags":["GT","flag"],"emoji":"🇬🇹","text":"","type":1,"order":4877,"group":9,"subgroup":98,"version":2},{"label":"flag: Guam","hexcode":"1F1EC-1F1FA","tags":["GU","flag"],"emoji":"🇬🇺","text":"","type":1,"order":4878,"group":9,"subgroup":98,"version":2},{"label":"flag: Guinea-Bissau","hexcode":"1F1EC-1F1FC","tags":["GW","flag"],"emoji":"🇬🇼","text":"","type":1,"order":4879,"group":9,"subgroup":98,"version":2},{"label":"flag: Guyana","hexcode":"1F1EC-1F1FE","tags":["GY","flag"],"emoji":"🇬🇾","text":"","type":1,"order":4880,"group":9,"subgroup":98,"version":2},{"label":"flag: Hong Kong SAR China","hexcode":"1F1ED-1F1F0","tags":["HK","flag"],"emoji":"🇭🇰","text":"","type":1,"order":4881,"group":9,"subgroup":98,"version":2},{"label":"flag: Heard & McDonald Islands","hexcode":"1F1ED-1F1F2","tags":["HM","flag"],"emoji":"🇭🇲","text":"","type":1,"order":4882,"group":9,"subgroup":98,"version":2},{"label":"flag: Honduras","hexcode":"1F1ED-1F1F3","tags":["HN","flag"],"emoji":"🇭🇳","text":"","type":1,"order":4883,"group":9,"subgroup":98,"version":2},{"label":"flag: Croatia","hexcode":"1F1ED-1F1F7","tags":["HR","flag"],"emoji":"🇭🇷","text":"","type":1,"order":4884,"group":9,"subgroup":98,"version":2},{"label":"flag: Haiti","hexcode":"1F1ED-1F1F9","tags":["HT","flag"],"emoji":"🇭🇹","text":"","type":1,"order":4885,"group":9,"subgroup":98,"version":2},{"label":"flag: Hungary","hexcode":"1F1ED-1F1FA","tags":["HU","flag"],"emoji":"🇭🇺","text":"","type":1,"order":4886,"group":9,"subgroup":98,"version":2},{"label":"flag: Canary Islands","hexcode":"1F1EE-1F1E8","tags":["IC","flag"],"emoji":"🇮🇨","text":"","type":1,"order":4887,"group":9,"subgroup":98,"version":2},{"label":"flag: Indonesia","hexcode":"1F1EE-1F1E9","tags":["ID","flag"],"emoji":"🇮🇩","text":"","type":1,"order":4888,"group":9,"subgroup":98,"version":2},{"label":"flag: Ireland","hexcode":"1F1EE-1F1EA","tags":["IE","flag"],"emoji":"🇮🇪","text":"","type":1,"order":4889,"group":9,"subgroup":98,"version":2},{"label":"flag: Israel","hexcode":"1F1EE-1F1F1","tags":["IL","flag"],"emoji":"🇮🇱","text":"","type":1,"order":4890,"group":9,"subgroup":98,"version":2},{"label":"flag: Isle of Man","hexcode":"1F1EE-1F1F2","tags":["IM","flag"],"emoji":"🇮🇲","text":"","type":1,"order":4891,"group":9,"subgroup":98,"version":2},{"label":"flag: India","hexcode":"1F1EE-1F1F3","tags":["IN","flag"],"emoji":"🇮🇳","text":"","type":1,"order":4892,"group":9,"subgroup":98,"version":2},{"label":"flag: British Indian Ocean Territory","hexcode":"1F1EE-1F1F4","tags":["IO","flag"],"emoji":"🇮🇴","text":"","type":1,"order":4893,"group":9,"subgroup":98,"version":2},{"label":"flag: Iraq","hexcode":"1F1EE-1F1F6","tags":["IQ","flag"],"emoji":"🇮🇶","text":"","type":1,"order":4894,"group":9,"subgroup":98,"version":2},{"label":"flag: Iran","hexcode":"1F1EE-1F1F7","tags":["IR","flag"],"emoji":"🇮🇷","text":"","type":1,"order":4895,"group":9,"subgroup":98,"version":2},{"label":"flag: Iceland","hexcode":"1F1EE-1F1F8","tags":["IS","flag"],"emoji":"🇮🇸","text":"","type":1,"order":4896,"group":9,"subgroup":98,"version":2},{"label":"flag: Italy","hexcode":"1F1EE-1F1F9","tags":["IT","flag"],"emoji":"🇮🇹","text":"","type":1,"order":4897,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Jersey","hexcode":"1F1EF-1F1EA","tags":["JE","flag"],"emoji":"🇯🇪","text":"","type":1,"order":4898,"group":9,"subgroup":98,"version":2},{"label":"flag: Jamaica","hexcode":"1F1EF-1F1F2","tags":["JM","flag"],"emoji":"🇯🇲","text":"","type":1,"order":4899,"group":9,"subgroup":98,"version":2},{"label":"flag: Jordan","hexcode":"1F1EF-1F1F4","tags":["JO","flag"],"emoji":"🇯🇴","text":"","type":1,"order":4900,"group":9,"subgroup":98,"version":2},{"label":"flag: Japan","hexcode":"1F1EF-1F1F5","tags":["JP","flag"],"emoji":"🇯🇵","text":"","type":1,"order":4901,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Kenya","hexcode":"1F1F0-1F1EA","tags":["KE","flag"],"emoji":"🇰🇪","text":"","type":1,"order":4902,"group":9,"subgroup":98,"version":2},{"label":"flag: Kyrgyzstan","hexcode":"1F1F0-1F1EC","tags":["KG","flag"],"emoji":"🇰🇬","text":"","type":1,"order":4903,"group":9,"subgroup":98,"version":2},{"label":"flag: Cambodia","hexcode":"1F1F0-1F1ED","tags":["KH","flag"],"emoji":"🇰🇭","text":"","type":1,"order":4904,"group":9,"subgroup":98,"version":2},{"label":"flag: Kiribati","hexcode":"1F1F0-1F1EE","tags":["KI","flag"],"emoji":"🇰🇮","text":"","type":1,"order":4905,"group":9,"subgroup":98,"version":2},{"label":"flag: Comoros","hexcode":"1F1F0-1F1F2","tags":["KM","flag"],"emoji":"🇰🇲","text":"","type":1,"order":4906,"group":9,"subgroup":98,"version":2},{"label":"flag: St. Kitts & Nevis","hexcode":"1F1F0-1F1F3","tags":["KN","flag"],"emoji":"🇰🇳","text":"","type":1,"order":4907,"group":9,"subgroup":98,"version":2},{"label":"flag: North Korea","hexcode":"1F1F0-1F1F5","tags":["KP","flag"],"emoji":"🇰🇵","text":"","type":1,"order":4908,"group":9,"subgroup":98,"version":2},{"label":"flag: South Korea","hexcode":"1F1F0-1F1F7","tags":["KR","flag"],"emoji":"🇰🇷","text":"","type":1,"order":4909,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Kuwait","hexcode":"1F1F0-1F1FC","tags":["KW","flag"],"emoji":"🇰🇼","text":"","type":1,"order":4910,"group":9,"subgroup":98,"version":2},{"label":"flag: Cayman Islands","hexcode":"1F1F0-1F1FE","tags":["KY","flag"],"emoji":"🇰🇾","text":"","type":1,"order":4911,"group":9,"subgroup":98,"version":2},{"label":"flag: Kazakhstan","hexcode":"1F1F0-1F1FF","tags":["KZ","flag"],"emoji":"🇰🇿","text":"","type":1,"order":4912,"group":9,"subgroup":98,"version":2},{"label":"flag: Laos","hexcode":"1F1F1-1F1E6","tags":["LA","flag"],"emoji":"🇱🇦","text":"","type":1,"order":4913,"group":9,"subgroup":98,"version":2},{"label":"flag: Lebanon","hexcode":"1F1F1-1F1E7","tags":["LB","flag"],"emoji":"🇱🇧","text":"","type":1,"order":4914,"group":9,"subgroup":98,"version":2},{"label":"flag: St. Lucia","hexcode":"1F1F1-1F1E8","tags":["LC","flag"],"emoji":"🇱🇨","text":"","type":1,"order":4915,"group":9,"subgroup":98,"version":2},{"label":"flag: Liechtenstein","hexcode":"1F1F1-1F1EE","tags":["LI","flag"],"emoji":"🇱🇮","text":"","type":1,"order":4916,"group":9,"subgroup":98,"version":2},{"label":"flag: Sri Lanka","hexcode":"1F1F1-1F1F0","tags":["LK","flag"],"emoji":"🇱🇰","text":"","type":1,"order":4917,"group":9,"subgroup":98,"version":2},{"label":"flag: Liberia","hexcode":"1F1F1-1F1F7","tags":["LR","flag"],"emoji":"🇱🇷","text":"","type":1,"order":4918,"group":9,"subgroup":98,"version":2},{"label":"flag: Lesotho","hexcode":"1F1F1-1F1F8","tags":["LS","flag"],"emoji":"🇱🇸","text":"","type":1,"order":4919,"group":9,"subgroup":98,"version":2},{"label":"flag: Lithuania","hexcode":"1F1F1-1F1F9","tags":["LT","flag"],"emoji":"🇱🇹","text":"","type":1,"order":4920,"group":9,"subgroup":98,"version":2},{"label":"flag: Luxembourg","hexcode":"1F1F1-1F1FA","tags":["LU","flag"],"emoji":"🇱🇺","text":"","type":1,"order":4921,"group":9,"subgroup":98,"version":2},{"label":"flag: Latvia","hexcode":"1F1F1-1F1FB","tags":["LV","flag"],"emoji":"🇱🇻","text":"","type":1,"order":4922,"group":9,"subgroup":98,"version":2},{"label":"flag: Libya","hexcode":"1F1F1-1F1FE","tags":["LY","flag"],"emoji":"🇱🇾","text":"","type":1,"order":4923,"group":9,"subgroup":98,"version":2},{"label":"flag: Morocco","hexcode":"1F1F2-1F1E6","tags":["MA","flag"],"emoji":"🇲🇦","text":"","type":1,"order":4924,"group":9,"subgroup":98,"version":2},{"label":"flag: Monaco","hexcode":"1F1F2-1F1E8","tags":["MC","flag"],"emoji":"🇲🇨","text":"","type":1,"order":4925,"group":9,"subgroup":98,"version":2},{"label":"flag: Moldova","hexcode":"1F1F2-1F1E9","tags":["MD","flag"],"emoji":"🇲🇩","text":"","type":1,"order":4926,"group":9,"subgroup":98,"version":2},{"label":"flag: Montenegro","hexcode":"1F1F2-1F1EA","tags":["ME","flag"],"emoji":"🇲🇪","text":"","type":1,"order":4927,"group":9,"subgroup":98,"version":2},{"label":"flag: St. Martin","hexcode":"1F1F2-1F1EB","tags":["MF","flag"],"emoji":"🇲🇫","text":"","type":1,"order":4928,"group":9,"subgroup":98,"version":2},{"label":"flag: Madagascar","hexcode":"1F1F2-1F1EC","tags":["MG","flag"],"emoji":"🇲🇬","text":"","type":1,"order":4929,"group":9,"subgroup":98,"version":2},{"label":"flag: Marshall Islands","hexcode":"1F1F2-1F1ED","tags":["MH","flag"],"emoji":"🇲🇭","text":"","type":1,"order":4930,"group":9,"subgroup":98,"version":2},{"label":"flag: North Macedonia","hexcode":"1F1F2-1F1F0","tags":["MK","flag"],"emoji":"🇲🇰","text":"","type":1,"order":4931,"group":9,"subgroup":98,"version":2},{"label":"flag: Mali","hexcode":"1F1F2-1F1F1","tags":["ML","flag"],"emoji":"🇲🇱","text":"","type":1,"order":4932,"group":9,"subgroup":98,"version":2},{"label":"flag: Myanmar (Burma)","hexcode":"1F1F2-1F1F2","tags":["MM","flag"],"emoji":"🇲🇲","text":"","type":1,"order":4933,"group":9,"subgroup":98,"version":2},{"label":"flag: Mongolia","hexcode":"1F1F2-1F1F3","tags":["MN","flag"],"emoji":"🇲🇳","text":"","type":1,"order":4934,"group":9,"subgroup":98,"version":2},{"label":"flag: Macao SAR China","hexcode":"1F1F2-1F1F4","tags":["MO","flag"],"emoji":"🇲🇴","text":"","type":1,"order":4935,"group":9,"subgroup":98,"version":2},{"label":"flag: Northern Mariana Islands","hexcode":"1F1F2-1F1F5","tags":["MP","flag"],"emoji":"🇲🇵","text":"","type":1,"order":4936,"group":9,"subgroup":98,"version":2},{"label":"flag: Martinique","hexcode":"1F1F2-1F1F6","tags":["MQ","flag"],"emoji":"🇲🇶","text":"","type":1,"order":4937,"group":9,"subgroup":98,"version":2},{"label":"flag: Mauritania","hexcode":"1F1F2-1F1F7","tags":["MR","flag"],"emoji":"🇲🇷","text":"","type":1,"order":4938,"group":9,"subgroup":98,"version":2},{"label":"flag: Montserrat","hexcode":"1F1F2-1F1F8","tags":["MS","flag"],"emoji":"🇲🇸","text":"","type":1,"order":4939,"group":9,"subgroup":98,"version":2},{"label":"flag: Malta","hexcode":"1F1F2-1F1F9","tags":["MT","flag"],"emoji":"🇲🇹","text":"","type":1,"order":4940,"group":9,"subgroup":98,"version":2},{"label":"flag: Mauritius","hexcode":"1F1F2-1F1FA","tags":["MU","flag"],"emoji":"🇲🇺","text":"","type":1,"order":4941,"group":9,"subgroup":98,"version":2},{"label":"flag: Maldives","hexcode":"1F1F2-1F1FB","tags":["MV","flag"],"emoji":"🇲🇻","text":"","type":1,"order":4942,"group":9,"subgroup":98,"version":2},{"label":"flag: Malawi","hexcode":"1F1F2-1F1FC","tags":["MW","flag"],"emoji":"🇲🇼","text":"","type":1,"order":4943,"group":9,"subgroup":98,"version":2},{"label":"flag: Mexico","hexcode":"1F1F2-1F1FD","tags":["MX","flag"],"emoji":"🇲🇽","text":"","type":1,"order":4944,"group":9,"subgroup":98,"version":2},{"label":"flag: Malaysia","hexcode":"1F1F2-1F1FE","tags":["MY","flag"],"emoji":"🇲🇾","text":"","type":1,"order":4945,"group":9,"subgroup":98,"version":2},{"label":"flag: Mozambique","hexcode":"1F1F2-1F1FF","tags":["MZ","flag"],"emoji":"🇲🇿","text":"","type":1,"order":4946,"group":9,"subgroup":98,"version":2},{"label":"flag: Namibia","hexcode":"1F1F3-1F1E6","tags":["NA","flag"],"emoji":"🇳🇦","text":"","type":1,"order":4947,"group":9,"subgroup":98,"version":2},{"label":"flag: New Caledonia","hexcode":"1F1F3-1F1E8","tags":["NC","flag"],"emoji":"🇳🇨","text":"","type":1,"order":4948,"group":9,"subgroup":98,"version":2},{"label":"flag: Niger","hexcode":"1F1F3-1F1EA","tags":["NE","flag"],"emoji":"🇳🇪","text":"","type":1,"order":4949,"group":9,"subgroup":98,"version":2},{"label":"flag: Norfolk Island","hexcode":"1F1F3-1F1EB","tags":["NF","flag"],"emoji":"🇳🇫","text":"","type":1,"order":4950,"group":9,"subgroup":98,"version":2},{"label":"flag: Nigeria","hexcode":"1F1F3-1F1EC","tags":["NG","flag"],"emoji":"🇳🇬","text":"","type":1,"order":4951,"group":9,"subgroup":98,"version":2},{"label":"flag: Nicaragua","hexcode":"1F1F3-1F1EE","tags":["NI","flag"],"emoji":"🇳🇮","text":"","type":1,"order":4952,"group":9,"subgroup":98,"version":2},{"label":"flag: Netherlands","hexcode":"1F1F3-1F1F1","tags":["NL","flag"],"emoji":"🇳🇱","text":"","type":1,"order":4953,"group":9,"subgroup":98,"version":2},{"label":"flag: Norway","hexcode":"1F1F3-1F1F4","tags":["NO","flag"],"emoji":"🇳🇴","text":"","type":1,"order":4954,"group":9,"subgroup":98,"version":2},{"label":"flag: Nepal","hexcode":"1F1F3-1F1F5","tags":["NP","flag"],"emoji":"🇳🇵","text":"","type":1,"order":4955,"group":9,"subgroup":98,"version":2},{"label":"flag: Nauru","hexcode":"1F1F3-1F1F7","tags":["NR","flag"],"emoji":"🇳🇷","text":"","type":1,"order":4956,"group":9,"subgroup":98,"version":2},{"label":"flag: Niue","hexcode":"1F1F3-1F1FA","tags":["NU","flag"],"emoji":"🇳🇺","text":"","type":1,"order":4957,"group":9,"subgroup":98,"version":2},{"label":"flag: New Zealand","hexcode":"1F1F3-1F1FF","tags":["NZ","flag"],"emoji":"🇳🇿","text":"","type":1,"order":4958,"group":9,"subgroup":98,"version":2},{"label":"flag: Oman","hexcode":"1F1F4-1F1F2","tags":["OM","flag"],"emoji":"🇴🇲","text":"","type":1,"order":4959,"group":9,"subgroup":98,"version":2},{"label":"flag: Panama","hexcode":"1F1F5-1F1E6","tags":["PA","flag"],"emoji":"🇵🇦","text":"","type":1,"order":4960,"group":9,"subgroup":98,"version":2},{"label":"flag: Peru","hexcode":"1F1F5-1F1EA","tags":["PE","flag"],"emoji":"🇵🇪","text":"","type":1,"order":4961,"group":9,"subgroup":98,"version":2},{"label":"flag: French Polynesia","hexcode":"1F1F5-1F1EB","tags":["PF","flag"],"emoji":"🇵🇫","text":"","type":1,"order":4962,"group":9,"subgroup":98,"version":2},{"label":"flag: Papua New Guinea","hexcode":"1F1F5-1F1EC","tags":["PG","flag"],"emoji":"🇵🇬","text":"","type":1,"order":4963,"group":9,"subgroup":98,"version":2},{"label":"flag: Philippines","hexcode":"1F1F5-1F1ED","tags":["PH","flag"],"emoji":"🇵🇭","text":"","type":1,"order":4964,"group":9,"subgroup":98,"version":2},{"label":"flag: Pakistan","hexcode":"1F1F5-1F1F0","tags":["PK","flag"],"emoji":"🇵🇰","text":"","type":1,"order":4965,"group":9,"subgroup":98,"version":2},{"label":"flag: Poland","hexcode":"1F1F5-1F1F1","tags":["PL","flag"],"emoji":"🇵🇱","text":"","type":1,"order":4966,"group":9,"subgroup":98,"version":2},{"label":"flag: St. Pierre & Miquelon","hexcode":"1F1F5-1F1F2","tags":["PM","flag"],"emoji":"🇵🇲","text":"","type":1,"order":4967,"group":9,"subgroup":98,"version":2},{"label":"flag: Pitcairn Islands","hexcode":"1F1F5-1F1F3","tags":["PN","flag"],"emoji":"🇵🇳","text":"","type":1,"order":4968,"group":9,"subgroup":98,"version":2},{"label":"flag: Puerto Rico","hexcode":"1F1F5-1F1F7","tags":["PR","flag"],"emoji":"🇵🇷","text":"","type":1,"order":4969,"group":9,"subgroup":98,"version":2},{"label":"flag: Palestinian Territories","hexcode":"1F1F5-1F1F8","tags":["PS","flag"],"emoji":"🇵🇸","text":"","type":1,"order":4970,"group":9,"subgroup":98,"version":2},{"label":"flag: Portugal","hexcode":"1F1F5-1F1F9","tags":["PT","flag"],"emoji":"🇵🇹","text":"","type":1,"order":4971,"group":9,"subgroup":98,"version":2},{"label":"flag: Palau","hexcode":"1F1F5-1F1FC","tags":["PW","flag"],"emoji":"🇵🇼","text":"","type":1,"order":4972,"group":9,"subgroup":98,"version":2},{"label":"flag: Paraguay","hexcode":"1F1F5-1F1FE","tags":["PY","flag"],"emoji":"🇵🇾","text":"","type":1,"order":4973,"group":9,"subgroup":98,"version":2},{"label":"flag: Qatar","hexcode":"1F1F6-1F1E6","tags":["QA","flag"],"emoji":"🇶🇦","text":"","type":1,"order":4974,"group":9,"subgroup":98,"version":2},{"label":"flag: Réunion","hexcode":"1F1F7-1F1EA","tags":["RE","flag"],"emoji":"🇷🇪","text":"","type":1,"order":4975,"group":9,"subgroup":98,"version":2},{"label":"flag: Romania","hexcode":"1F1F7-1F1F4","tags":["RO","flag"],"emoji":"🇷🇴","text":"","type":1,"order":4976,"group":9,"subgroup":98,"version":2},{"label":"flag: Serbia","hexcode":"1F1F7-1F1F8","tags":["RS","flag"],"emoji":"🇷🇸","text":"","type":1,"order":4977,"group":9,"subgroup":98,"version":2},{"label":"flag: Russia","hexcode":"1F1F7-1F1FA","tags":["RU","flag"],"emoji":"🇷🇺","text":"","type":1,"order":4978,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Rwanda","hexcode":"1F1F7-1F1FC","tags":["RW","flag"],"emoji":"🇷🇼","text":"","type":1,"order":4979,"group":9,"subgroup":98,"version":2},{"label":"flag: Saudi Arabia","hexcode":"1F1F8-1F1E6","tags":["SA","flag"],"emoji":"🇸🇦","text":"","type":1,"order":4980,"group":9,"subgroup":98,"version":2},{"label":"flag: Solomon Islands","hexcode":"1F1F8-1F1E7","tags":["SB","flag"],"emoji":"🇸🇧","text":"","type":1,"order":4981,"group":9,"subgroup":98,"version":2},{"label":"flag: Seychelles","hexcode":"1F1F8-1F1E8","tags":["SC","flag"],"emoji":"🇸🇨","text":"","type":1,"order":4982,"group":9,"subgroup":98,"version":2},{"label":"flag: Sudan","hexcode":"1F1F8-1F1E9","tags":["SD","flag"],"emoji":"🇸🇩","text":"","type":1,"order":4983,"group":9,"subgroup":98,"version":2},{"label":"flag: Sweden","hexcode":"1F1F8-1F1EA","tags":["SE","flag"],"emoji":"🇸🇪","text":"","type":1,"order":4984,"group":9,"subgroup":98,"version":2},{"label":"flag: Singapore","hexcode":"1F1F8-1F1EC","tags":["SG","flag"],"emoji":"🇸🇬","text":"","type":1,"order":4985,"group":9,"subgroup":98,"version":2},{"label":"flag: St. Helena","hexcode":"1F1F8-1F1ED","tags":["SH","flag"],"emoji":"🇸🇭","text":"","type":1,"order":4986,"group":9,"subgroup":98,"version":2},{"label":"flag: Slovenia","hexcode":"1F1F8-1F1EE","tags":["SI","flag"],"emoji":"🇸🇮","text":"","type":1,"order":4987,"group":9,"subgroup":98,"version":2},{"label":"flag: Svalbard & Jan Mayen","hexcode":"1F1F8-1F1EF","tags":["SJ","flag"],"emoji":"🇸🇯","text":"","type":1,"order":4988,"group":9,"subgroup":98,"version":2},{"label":"flag: Slovakia","hexcode":"1F1F8-1F1F0","tags":["SK","flag"],"emoji":"🇸🇰","text":"","type":1,"order":4989,"group":9,"subgroup":98,"version":2},{"label":"flag: Sierra Leone","hexcode":"1F1F8-1F1F1","tags":["SL","flag"],"emoji":"🇸🇱","text":"","type":1,"order":4990,"group":9,"subgroup":98,"version":2},{"label":"flag: San Marino","hexcode":"1F1F8-1F1F2","tags":["SM","flag"],"emoji":"🇸🇲","text":"","type":1,"order":4991,"group":9,"subgroup":98,"version":2},{"label":"flag: Senegal","hexcode":"1F1F8-1F1F3","tags":["SN","flag"],"emoji":"🇸🇳","text":"","type":1,"order":4992,"group":9,"subgroup":98,"version":2},{"label":"flag: Somalia","hexcode":"1F1F8-1F1F4","tags":["SO","flag"],"emoji":"🇸🇴","text":"","type":1,"order":4993,"group":9,"subgroup":98,"version":2},{"label":"flag: Suriname","hexcode":"1F1F8-1F1F7","tags":["SR","flag"],"emoji":"🇸🇷","text":"","type":1,"order":4994,"group":9,"subgroup":98,"version":2},{"label":"flag: South Sudan","hexcode":"1F1F8-1F1F8","tags":["SS","flag"],"emoji":"🇸🇸","text":"","type":1,"order":4995,"group":9,"subgroup":98,"version":2},{"label":"flag: São Tomé & Príncipe","hexcode":"1F1F8-1F1F9","tags":["ST","flag"],"emoji":"🇸🇹","text":"","type":1,"order":4996,"group":9,"subgroup":98,"version":2},{"label":"flag: El Salvador","hexcode":"1F1F8-1F1FB","tags":["SV","flag"],"emoji":"🇸🇻","text":"","type":1,"order":4997,"group":9,"subgroup":98,"version":2},{"label":"flag: Sint Maarten","hexcode":"1F1F8-1F1FD","tags":["SX","flag"],"emoji":"🇸🇽","text":"","type":1,"order":4998,"group":9,"subgroup":98,"version":2},{"label":"flag: Syria","hexcode":"1F1F8-1F1FE","tags":["SY","flag"],"emoji":"🇸🇾","text":"","type":1,"order":4999,"group":9,"subgroup":98,"version":2},{"label":"flag: Eswatini","hexcode":"1F1F8-1F1FF","tags":["SZ","flag"],"emoji":"🇸🇿","text":"","type":1,"order":5000,"group":9,"subgroup":98,"version":2},{"label":"flag: Tristan da Cunha","hexcode":"1F1F9-1F1E6","tags":["TA","flag"],"emoji":"🇹🇦","text":"","type":1,"order":5001,"group":9,"subgroup":98,"version":2},{"label":"flag: Turks & Caicos Islands","hexcode":"1F1F9-1F1E8","tags":["TC","flag"],"emoji":"🇹🇨","text":"","type":1,"order":5002,"group":9,"subgroup":98,"version":2},{"label":"flag: Chad","hexcode":"1F1F9-1F1E9","tags":["TD","flag"],"emoji":"🇹🇩","text":"","type":1,"order":5003,"group":9,"subgroup":98,"version":2},{"label":"flag: French Southern Territories","hexcode":"1F1F9-1F1EB","tags":["TF","flag"],"emoji":"🇹🇫","text":"","type":1,"order":5004,"group":9,"subgroup":98,"version":2},{"label":"flag: Togo","hexcode":"1F1F9-1F1EC","tags":["TG","flag"],"emoji":"🇹🇬","text":"","type":1,"order":5005,"group":9,"subgroup":98,"version":2},{"label":"flag: Thailand","hexcode":"1F1F9-1F1ED","tags":["TH","flag"],"emoji":"🇹🇭","text":"","type":1,"order":5006,"group":9,"subgroup":98,"version":2},{"label":"flag: Tajikistan","hexcode":"1F1F9-1F1EF","tags":["TJ","flag"],"emoji":"🇹🇯","text":"","type":1,"order":5007,"group":9,"subgroup":98,"version":2},{"label":"flag: Tokelau","hexcode":"1F1F9-1F1F0","tags":["TK","flag"],"emoji":"🇹🇰","text":"","type":1,"order":5008,"group":9,"subgroup":98,"version":2},{"label":"flag: Timor-Leste","hexcode":"1F1F9-1F1F1","tags":["TL","flag"],"emoji":"🇹🇱","text":"","type":1,"order":5009,"group":9,"subgroup":98,"version":2},{"label":"flag: Turkmenistan","hexcode":"1F1F9-1F1F2","tags":["TM","flag"],"emoji":"🇹🇲","text":"","type":1,"order":5010,"group":9,"subgroup":98,"version":2},{"label":"flag: Tunisia","hexcode":"1F1F9-1F1F3","tags":["TN","flag"],"emoji":"🇹🇳","text":"","type":1,"order":5011,"group":9,"subgroup":98,"version":2},{"label":"flag: Tonga","hexcode":"1F1F9-1F1F4","tags":["TO","flag"],"emoji":"🇹🇴","text":"","type":1,"order":5012,"group":9,"subgroup":98,"version":2},{"label":"flag: Türkiye","hexcode":"1F1F9-1F1F7","tags":["TR","flag"],"emoji":"🇹🇷","text":"","type":1,"order":5013,"group":9,"subgroup":98,"version":2},{"label":"flag: Trinidad & Tobago","hexcode":"1F1F9-1F1F9","tags":["TT","flag"],"emoji":"🇹🇹","text":"","type":1,"order":5014,"group":9,"subgroup":98,"version":2},{"label":"flag: Tuvalu","hexcode":"1F1F9-1F1FB","tags":["TV","flag"],"emoji":"🇹🇻","text":"","type":1,"order":5015,"group":9,"subgroup":98,"version":2},{"label":"flag: Taiwan","hexcode":"1F1F9-1F1FC","tags":["TW","flag"],"emoji":"🇹🇼","text":"","type":1,"order":5016,"group":9,"subgroup":98,"version":2},{"label":"flag: Tanzania","hexcode":"1F1F9-1F1FF","tags":["TZ","flag"],"emoji":"🇹🇿","text":"","type":1,"order":5017,"group":9,"subgroup":98,"version":2},{"label":"flag: Ukraine","hexcode":"1F1FA-1F1E6","tags":["UA","flag"],"emoji":"🇺🇦","text":"","type":1,"order":5018,"group":9,"subgroup":98,"version":2},{"label":"flag: Uganda","hexcode":"1F1FA-1F1EC","tags":["UG","flag"],"emoji":"🇺🇬","text":"","type":1,"order":5019,"group":9,"subgroup":98,"version":2},{"label":"flag: U.S. Outlying Islands","hexcode":"1F1FA-1F1F2","tags":["UM","flag"],"emoji":"🇺🇲","text":"","type":1,"order":5020,"group":9,"subgroup":98,"version":2},{"label":"flag: United Nations","hexcode":"1F1FA-1F1F3","tags":["UN","flag"],"emoji":"🇺🇳","text":"","type":1,"order":5021,"group":9,"subgroup":98,"version":4},{"label":"flag: United States","hexcode":"1F1FA-1F1F8","tags":["US","flag"],"emoji":"🇺🇸","text":"","type":1,"order":5022,"group":9,"subgroup":98,"version":0.6},{"label":"flag: Uruguay","hexcode":"1F1FA-1F1FE","tags":["UY","flag"],"emoji":"🇺🇾","text":"","type":1,"order":5023,"group":9,"subgroup":98,"version":2},{"label":"flag: Uzbekistan","hexcode":"1F1FA-1F1FF","tags":["UZ","flag"],"emoji":"🇺🇿","text":"","type":1,"order":5024,"group":9,"subgroup":98,"version":2},{"label":"flag: Vatican City","hexcode":"1F1FB-1F1E6","tags":["VA","flag"],"emoji":"🇻🇦","text":"","type":1,"order":5025,"group":9,"subgroup":98,"version":2},{"label":"flag: St. Vincent & Grenadines","hexcode":"1F1FB-1F1E8","tags":["VC","flag"],"emoji":"🇻🇨","text":"","type":1,"order":5026,"group":9,"subgroup":98,"version":2},{"label":"flag: Venezuela","hexcode":"1F1FB-1F1EA","tags":["VE","flag"],"emoji":"🇻🇪","text":"","type":1,"order":5027,"group":9,"subgroup":98,"version":2},{"label":"flag: British Virgin Islands","hexcode":"1F1FB-1F1EC","tags":["VG","flag"],"emoji":"🇻🇬","text":"","type":1,"order":5028,"group":9,"subgroup":98,"version":2},{"label":"flag: U.S. Virgin Islands","hexcode":"1F1FB-1F1EE","tags":["VI","flag"],"emoji":"🇻🇮","text":"","type":1,"order":5029,"group":9,"subgroup":98,"version":2},{"label":"flag: Vietnam","hexcode":"1F1FB-1F1F3","tags":["VN","flag"],"emoji":"🇻🇳","text":"","type":1,"order":5030,"group":9,"subgroup":98,"version":2},{"label":"flag: Vanuatu","hexcode":"1F1FB-1F1FA","tags":["VU","flag"],"emoji":"🇻🇺","text":"","type":1,"order":5031,"group":9,"subgroup":98,"version":2},{"label":"flag: Wallis & Futuna","hexcode":"1F1FC-1F1EB","tags":["WF","flag"],"emoji":"🇼🇫","text":"","type":1,"order":5032,"group":9,"subgroup":98,"version":2},{"label":"flag: Samoa","hexcode":"1F1FC-1F1F8","tags":["WS","flag"],"emoji":"🇼🇸","text":"","type":1,"order":5033,"group":9,"subgroup":98,"version":2},{"label":"flag: Kosovo","hexcode":"1F1FD-1F1F0","tags":["XK","flag"],"emoji":"🇽🇰","text":"","type":1,"order":5034,"group":9,"subgroup":98,"version":2},{"label":"flag: Yemen","hexcode":"1F1FE-1F1EA","tags":["YE","flag"],"emoji":"🇾🇪","text":"","type":1,"order":5035,"group":9,"subgroup":98,"version":2},{"label":"flag: Mayotte","hexcode":"1F1FE-1F1F9","tags":["YT","flag"],"emoji":"🇾🇹","text":"","type":1,"order":5036,"group":9,"subgroup":98,"version":2},{"label":"flag: South Africa","hexcode":"1F1FF-1F1E6","tags":["ZA","flag"],"emoji":"🇿🇦","text":"","type":1,"order":5037,"group":9,"subgroup":98,"version":2},{"label":"flag: Zambia","hexcode":"1F1FF-1F1F2","tags":["ZM","flag"],"emoji":"🇿🇲","text":"","type":1,"order":5038,"group":9,"subgroup":98,"version":2},{"label":"flag: Zimbabwe","hexcode":"1F1FF-1F1FC","tags":["ZW","flag"],"emoji":"🇿🇼","text":"","type":1,"order":5039,"group":9,"subgroup":98,"version":2},{"label":"flag: England","hexcode":"1F3F4-E0067-E0062-E0065-E006E-E0067-E007F","tags":["flag","gbeng"],"emoji":"🏴󠁧󠁢󠁥󠁮󠁧󠁿","text":"","type":1,"order":5040,"group":9,"subgroup":99,"version":5},{"label":"flag: Scotland","hexcode":"1F3F4-E0067-E0062-E0073-E0063-E0074-E007F","tags":["flag","gbsct"],"emoji":"🏴󠁧󠁢󠁳󠁣󠁴󠁿","text":"","type":1,"order":5041,"group":9,"subgroup":99,"version":5},{"label":"flag: Wales","hexcode":"1F3F4-E0067-E0062-E0077-E006C-E0073-E007F","tags":["flag","gbwls"],"emoji":"🏴󠁧󠁢󠁷󠁬󠁳󠁿","text":"","type":1,"order":5042,"group":9,"subgroup":99,"version":5}]');

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/is-retry-allowed/index.js":
/*!************************************************!*\
  !*** ./node_modules/is-retry-allowed/index.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";


const denyList = new Set([
	'ENOTFOUND',
	'ENETUNREACH',

	// SSL errors from https://github.com/nodejs/node/blob/fc8e3e2cdc521978351de257030db0076d79e0ab/src/crypto/crypto_common.cc#L301-L328
	'UNABLE_TO_GET_ISSUER_CERT',
	'UNABLE_TO_GET_CRL',
	'UNABLE_TO_DECRYPT_CERT_SIGNATURE',
	'UNABLE_TO_DECRYPT_CRL_SIGNATURE',
	'UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY',
	'CERT_SIGNATURE_FAILURE',
	'CRL_SIGNATURE_FAILURE',
	'CERT_NOT_YET_VALID',
	'CERT_HAS_EXPIRED',
	'CRL_NOT_YET_VALID',
	'CRL_HAS_EXPIRED',
	'ERROR_IN_CERT_NOT_BEFORE_FIELD',
	'ERROR_IN_CERT_NOT_AFTER_FIELD',
	'ERROR_IN_CRL_LAST_UPDATE_FIELD',
	'ERROR_IN_CRL_NEXT_UPDATE_FIELD',
	'OUT_OF_MEM',
	'DEPTH_ZERO_SELF_SIGNED_CERT',
	'SELF_SIGNED_CERT_IN_CHAIN',
	'UNABLE_TO_GET_ISSUER_CERT_LOCALLY',
	'UNABLE_TO_VERIFY_LEAF_SIGNATURE',
	'CERT_CHAIN_TOO_LONG',
	'CERT_REVOKED',
	'INVALID_CA',
	'PATH_LENGTH_EXCEEDED',
	'INVALID_PURPOSE',
	'CERT_UNTRUSTED',
	'CERT_REJECTED',
	'HOSTNAME_MISMATCH'
]);

// TODO: Use `error?.code` when targeting Node.js 14
module.exports = error => !denyList.has(error && error.code);


/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/***/ ((module) => {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/pusher-js/dist/web/pusher.js":
/*!***************************************************!*\
  !*** ./node_modules/pusher-js/dist/web/pusher.js ***!
  \***************************************************/
/***/ ((module) => {

/*!
 * Pusher JavaScript Library v7.6.0
 * https://pusher.com/
 *
 * Copyright 2020, Pusher
 * Released under the MIT licence.
 */

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else // removed by dead control flow
{}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __nested_webpack_require_669__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_669__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nested_webpack_require_669__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__nested_webpack_require_669__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__nested_webpack_require_669__.d = function(exports, name, getter) {
/******/ 		if(!__nested_webpack_require_669__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__nested_webpack_require_669__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__nested_webpack_require_669__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __nested_webpack_require_669__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__nested_webpack_require_669__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_669__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__nested_webpack_require_669__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__nested_webpack_require_669__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__nested_webpack_require_669__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__nested_webpack_require_669__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __nested_webpack_require_669__(__nested_webpack_require_669__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Package base64 implements Base64 encoding and decoding.
 */
// Invalid character used in decoding to indicate
// that the character to decode is out of range of
// alphabet and cannot be decoded.
var INVALID_BYTE = 256;
/**
 * Implements standard Base64 encoding.
 *
 * Operates in constant time.
 */
var Coder = /** @class */ (function () {
    // TODO(dchest): methods to encode chunk-by-chunk.
    function Coder(_paddingCharacter) {
        if (_paddingCharacter === void 0) { _paddingCharacter = "="; }
        this._paddingCharacter = _paddingCharacter;
    }
    Coder.prototype.encodedLength = function (length) {
        if (!this._paddingCharacter) {
            return (length * 8 + 5) / 6 | 0;
        }
        return (length + 2) / 3 * 4 | 0;
    };
    Coder.prototype.encode = function (data) {
        var out = "";
        var i = 0;
        for (; i < data.length - 2; i += 3) {
            var c = (data[i] << 16) | (data[i + 1] << 8) | (data[i + 2]);
            out += this._encodeByte((c >>> 3 * 6) & 63);
            out += this._encodeByte((c >>> 2 * 6) & 63);
            out += this._encodeByte((c >>> 1 * 6) & 63);
            out += this._encodeByte((c >>> 0 * 6) & 63);
        }
        var left = data.length - i;
        if (left > 0) {
            var c = (data[i] << 16) | (left === 2 ? data[i + 1] << 8 : 0);
            out += this._encodeByte((c >>> 3 * 6) & 63);
            out += this._encodeByte((c >>> 2 * 6) & 63);
            if (left === 2) {
                out += this._encodeByte((c >>> 1 * 6) & 63);
            }
            else {
                out += this._paddingCharacter || "";
            }
            out += this._paddingCharacter || "";
        }
        return out;
    };
    Coder.prototype.maxDecodedLength = function (length) {
        if (!this._paddingCharacter) {
            return (length * 6 + 7) / 8 | 0;
        }
        return length / 4 * 3 | 0;
    };
    Coder.prototype.decodedLength = function (s) {
        return this.maxDecodedLength(s.length - this._getPaddingLength(s));
    };
    Coder.prototype.decode = function (s) {
        if (s.length === 0) {
            return new Uint8Array(0);
        }
        var paddingLength = this._getPaddingLength(s);
        var length = s.length - paddingLength;
        var out = new Uint8Array(this.maxDecodedLength(length));
        var op = 0;
        var i = 0;
        var haveBad = 0;
        var v0 = 0, v1 = 0, v2 = 0, v3 = 0;
        for (; i < length - 4; i += 4) {
            v0 = this._decodeChar(s.charCodeAt(i + 0));
            v1 = this._decodeChar(s.charCodeAt(i + 1));
            v2 = this._decodeChar(s.charCodeAt(i + 2));
            v3 = this._decodeChar(s.charCodeAt(i + 3));
            out[op++] = (v0 << 2) | (v1 >>> 4);
            out[op++] = (v1 << 4) | (v2 >>> 2);
            out[op++] = (v2 << 6) | v3;
            haveBad |= v0 & INVALID_BYTE;
            haveBad |= v1 & INVALID_BYTE;
            haveBad |= v2 & INVALID_BYTE;
            haveBad |= v3 & INVALID_BYTE;
        }
        if (i < length - 1) {
            v0 = this._decodeChar(s.charCodeAt(i));
            v1 = this._decodeChar(s.charCodeAt(i + 1));
            out[op++] = (v0 << 2) | (v1 >>> 4);
            haveBad |= v0 & INVALID_BYTE;
            haveBad |= v1 & INVALID_BYTE;
        }
        if (i < length - 2) {
            v2 = this._decodeChar(s.charCodeAt(i + 2));
            out[op++] = (v1 << 4) | (v2 >>> 2);
            haveBad |= v2 & INVALID_BYTE;
        }
        if (i < length - 3) {
            v3 = this._decodeChar(s.charCodeAt(i + 3));
            out[op++] = (v2 << 6) | v3;
            haveBad |= v3 & INVALID_BYTE;
        }
        if (haveBad !== 0) {
            throw new Error("Base64Coder: incorrect characters for decoding");
        }
        return out;
    };
    // Standard encoding have the following encoded/decoded ranges,
    // which we need to convert between.
    //
    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  +   /
    // Index:   0 - 25                    26 - 51              52 - 61   62  63
    // ASCII:  65 - 90                    97 - 122             48 - 57   43  47
    //
    // Encode 6 bits in b into a new character.
    Coder.prototype._encodeByte = function (b) {
        // Encoding uses constant time operations as follows:
        //
        // 1. Define comparison of A with B using (A - B) >>> 8:
        //          if A > B, then result is positive integer
        //          if A <= B, then result is 0
        //
        // 2. Define selection of C or 0 using bitwise AND: X & C:
        //          if X == 0, then result is 0
        //          if X != 0, then result is C
        //
        // 3. Start with the smallest comparison (b >= 0), which is always
        //    true, so set the result to the starting ASCII value (65).
        //
        // 4. Continue comparing b to higher ASCII values, and selecting
        //    zero if comparison isn't true, otherwise selecting a value
        //    to add to result, which:
        //
        //          a) undoes the previous addition
        //          b) provides new value to add
        //
        var result = b;
        // b >= 0
        result += 65;
        // b > 25
        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);
        // b > 51
        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);
        // b > 61
        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 43);
        // b > 62
        result += ((62 - b) >>> 8) & ((62 - 43) - 63 + 47);
        return String.fromCharCode(result);
    };
    // Decode a character code into a byte.
    // Must return 256 if character is out of alphabet range.
    Coder.prototype._decodeChar = function (c) {
        // Decoding works similar to encoding: using the same comparison
        // function, but now it works on ranges: result is always incremented
        // by value, but this value becomes zero if the range is not
        // satisfied.
        //
        // Decoding starts with invalid value, 256, which is then
        // subtracted when the range is satisfied. If none of the ranges
        // apply, the function returns 256, which is then checked by
        // the caller to throw error.
        var result = INVALID_BYTE; // start with invalid character
        // c == 43 (c > 42 and c < 44)
        result += (((42 - c) & (c - 44)) >>> 8) & (-INVALID_BYTE + c - 43 + 62);
        // c == 47 (c > 46 and c < 48)
        result += (((46 - c) & (c - 48)) >>> 8) & (-INVALID_BYTE + c - 47 + 63);
        // c > 47 and c < 58
        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);
        // c > 64 and c < 91
        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);
        // c > 96 and c < 123
        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);
        return result;
    };
    Coder.prototype._getPaddingLength = function (s) {
        var paddingLength = 0;
        if (this._paddingCharacter) {
            for (var i = s.length - 1; i >= 0; i--) {
                if (s[i] !== this._paddingCharacter) {
                    break;
                }
                paddingLength++;
            }
            if (s.length < 4 || paddingLength > 2) {
                throw new Error("Base64Coder: incorrect padding");
            }
        }
        return paddingLength;
    };
    return Coder;
}());
exports.Coder = Coder;
var stdCoder = new Coder();
function encode(data) {
    return stdCoder.encode(data);
}
exports.encode = encode;
function decode(s) {
    return stdCoder.decode(s);
}
exports.decode = decode;
/**
 * Implements URL-safe Base64 encoding.
 * (Same as Base64, but '+' is replaced with '-', and '/' with '_').
 *
 * Operates in constant time.
 */
var URLSafeCoder = /** @class */ (function (_super) {
    __extends(URLSafeCoder, _super);
    function URLSafeCoder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // URL-safe encoding have the following encoded/decoded ranges:
    //
    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  -   _
    // Index:   0 - 25                    26 - 51              52 - 61   62  63
    // ASCII:  65 - 90                    97 - 122             48 - 57   45  95
    //
    URLSafeCoder.prototype._encodeByte = function (b) {
        var result = b;
        // b >= 0
        result += 65;
        // b > 25
        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);
        // b > 51
        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);
        // b > 61
        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 45);
        // b > 62
        result += ((62 - b) >>> 8) & ((62 - 45) - 63 + 95);
        return String.fromCharCode(result);
    };
    URLSafeCoder.prototype._decodeChar = function (c) {
        var result = INVALID_BYTE;
        // c == 45 (c > 44 and c < 46)
        result += (((44 - c) & (c - 46)) >>> 8) & (-INVALID_BYTE + c - 45 + 62);
        // c == 95 (c > 94 and c < 96)
        result += (((94 - c) & (c - 96)) >>> 8) & (-INVALID_BYTE + c - 95 + 63);
        // c > 47 and c < 58
        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);
        // c > 64 and c < 91
        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);
        // c > 96 and c < 123
        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);
        return result;
    };
    return URLSafeCoder;
}(Coder));
exports.URLSafeCoder = URLSafeCoder;
var urlSafeCoder = new URLSafeCoder();
function encodeURLSafe(data) {
    return urlSafeCoder.encode(data);
}
exports.encodeURLSafe = encodeURLSafe;
function decodeURLSafe(s) {
    return urlSafeCoder.decode(s);
}
exports.decodeURLSafe = decodeURLSafe;
exports.encodedLength = function (length) {
    return stdCoder.encodedLength(length);
};
exports.maxDecodedLength = function (length) {
    return stdCoder.maxDecodedLength(length);
};
exports.decodedLength = function (s) {
    return stdCoder.decodedLength(s);
};


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Copyright (C) 2016 Dmitry Chestnykh
// MIT License. See LICENSE file for details.
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Package utf8 implements UTF-8 encoding and decoding.
 */
var INVALID_UTF16 = "utf8: invalid string";
var INVALID_UTF8 = "utf8: invalid source encoding";
/**
 * Encodes the given string into UTF-8 byte array.
 * Throws if the source string has invalid UTF-16 encoding.
 */
function encode(s) {
    // Calculate result length and allocate output array.
    // encodedLength() also validates string and throws errors,
    // so we don't need repeat validation here.
    var arr = new Uint8Array(encodedLength(s));
    var pos = 0;
    for (var i = 0; i < s.length; i++) {
        var c = s.charCodeAt(i);
        if (c < 0x80) {
            arr[pos++] = c;
        }
        else if (c < 0x800) {
            arr[pos++] = 0xc0 | c >> 6;
            arr[pos++] = 0x80 | c & 0x3f;
        }
        else if (c < 0xd800) {
            arr[pos++] = 0xe0 | c >> 12;
            arr[pos++] = 0x80 | (c >> 6) & 0x3f;
            arr[pos++] = 0x80 | c & 0x3f;
        }
        else {
            i++; // get one more character
            c = (c & 0x3ff) << 10;
            c |= s.charCodeAt(i) & 0x3ff;
            c += 0x10000;
            arr[pos++] = 0xf0 | c >> 18;
            arr[pos++] = 0x80 | (c >> 12) & 0x3f;
            arr[pos++] = 0x80 | (c >> 6) & 0x3f;
            arr[pos++] = 0x80 | c & 0x3f;
        }
    }
    return arr;
}
exports.encode = encode;
/**
 * Returns the number of bytes required to encode the given string into UTF-8.
 * Throws if the source string has invalid UTF-16 encoding.
 */
function encodedLength(s) {
    var result = 0;
    for (var i = 0; i < s.length; i++) {
        var c = s.charCodeAt(i);
        if (c < 0x80) {
            result += 1;
        }
        else if (c < 0x800) {
            result += 2;
        }
        else if (c < 0xd800) {
            result += 3;
        }
        else if (c <= 0xdfff) {
            if (i >= s.length - 1) {
                throw new Error(INVALID_UTF16);
            }
            i++; // "eat" next character
            result += 4;
        }
        else {
            throw new Error(INVALID_UTF16);
        }
    }
    return result;
}
exports.encodedLength = encodedLength;
/**
 * Decodes the given byte array from UTF-8 into a string.
 * Throws if encoding is invalid.
 */
function decode(arr) {
    var chars = [];
    for (var i = 0; i < arr.length; i++) {
        var b = arr[i];
        if (b & 0x80) {
            var min = void 0;
            if (b < 0xe0) {
                // Need 1 more byte.
                if (i >= arr.length) {
                    throw new Error(INVALID_UTF8);
                }
                var n1 = arr[++i];
                if ((n1 & 0xc0) !== 0x80) {
                    throw new Error(INVALID_UTF8);
                }
                b = (b & 0x1f) << 6 | (n1 & 0x3f);
                min = 0x80;
            }
            else if (b < 0xf0) {
                // Need 2 more bytes.
                if (i >= arr.length - 1) {
                    throw new Error(INVALID_UTF8);
                }
                var n1 = arr[++i];
                var n2 = arr[++i];
                if ((n1 & 0xc0) !== 0x80 || (n2 & 0xc0) !== 0x80) {
                    throw new Error(INVALID_UTF8);
                }
                b = (b & 0x0f) << 12 | (n1 & 0x3f) << 6 | (n2 & 0x3f);
                min = 0x800;
            }
            else if (b < 0xf8) {
                // Need 3 more bytes.
                if (i >= arr.length - 2) {
                    throw new Error(INVALID_UTF8);
                }
                var n1 = arr[++i];
                var n2 = arr[++i];
                var n3 = arr[++i];
                if ((n1 & 0xc0) !== 0x80 || (n2 & 0xc0) !== 0x80 || (n3 & 0xc0) !== 0x80) {
                    throw new Error(INVALID_UTF8);
                }
                b = (b & 0x0f) << 18 | (n1 & 0x3f) << 12 | (n2 & 0x3f) << 6 | (n3 & 0x3f);
                min = 0x10000;
            }
            else {
                throw new Error(INVALID_UTF8);
            }
            if (b < min || (b >= 0xd800 && b <= 0xdfff)) {
                throw new Error(INVALID_UTF8);
            }
            if (b >= 0x10000) {
                // Surrogate pair.
                if (b > 0x10ffff) {
                    throw new Error(INVALID_UTF8);
                }
                b -= 0x10000;
                chars.push(String.fromCharCode(0xd800 | (b >> 10)));
                b = 0xdc00 | (b & 0x3ff);
            }
        }
        chars.push(String.fromCharCode(b));
    }
    return chars.join("");
}
exports.decode = decode;


/***/ }),
/* 2 */
/***/ (function(module, exports, __nested_webpack_require_19901__) {

// required so we don't have to do require('pusher').default etc.
module.exports = __nested_webpack_require_19901__(3).default;


/***/ }),
/* 3 */
/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_20105__) {

"use strict";
// ESM COMPAT FLAG
__nested_webpack_require_20105__.r(__nested_webpack_exports__);

// CONCATENATED MODULE: ./src/runtimes/web/dom/script_receiver_factory.ts
var ScriptReceiverFactory = (function () {
    function ScriptReceiverFactory(prefix, name) {
        this.lastId = 0;
        this.prefix = prefix;
        this.name = name;
    }
    ScriptReceiverFactory.prototype.create = function (callback) {
        this.lastId++;
        var number = this.lastId;
        var id = this.prefix + number;
        var name = this.name + '[' + number + ']';
        var called = false;
        var callbackWrapper = function () {
            if (!called) {
                callback.apply(null, arguments);
                called = true;
            }
        };
        this[number] = callbackWrapper;
        return { number: number, id: id, name: name, callback: callbackWrapper };
    };
    ScriptReceiverFactory.prototype.remove = function (receiver) {
        delete this[receiver.number];
    };
    return ScriptReceiverFactory;
}());

var ScriptReceivers = new ScriptReceiverFactory('_pusher_script_', 'Pusher.ScriptReceivers');

// CONCATENATED MODULE: ./src/core/defaults.ts
var Defaults = {
    VERSION: "7.6.0",
    PROTOCOL: 7,
    wsPort: 80,
    wssPort: 443,
    wsPath: '',
    httpHost: 'sockjs.pusher.com',
    httpPort: 80,
    httpsPort: 443,
    httpPath: '/pusher',
    stats_host: 'stats.pusher.com',
    authEndpoint: '/pusher/auth',
    authTransport: 'ajax',
    activityTimeout: 120000,
    pongTimeout: 30000,
    unavailableTimeout: 10000,
    cluster: 'mt1',
    userAuthentication: {
        endpoint: '/pusher/user-auth',
        transport: 'ajax'
    },
    channelAuthorization: {
        endpoint: '/pusher/auth',
        transport: 'ajax'
    },
    cdn_http: "http://js.pusher.com",
    cdn_https: "https://js.pusher.com",
    dependency_suffix: ""
};
/* harmony default export */ var defaults = (Defaults);

// CONCATENATED MODULE: ./src/runtimes/web/dom/dependency_loader.ts


var dependency_loader_DependencyLoader = (function () {
    function DependencyLoader(options) {
        this.options = options;
        this.receivers = options.receivers || ScriptReceivers;
        this.loading = {};
    }
    DependencyLoader.prototype.load = function (name, options, callback) {
        var self = this;
        if (self.loading[name] && self.loading[name].length > 0) {
            self.loading[name].push(callback);
        }
        else {
            self.loading[name] = [callback];
            var request = runtime.createScriptRequest(self.getPath(name, options));
            var receiver = self.receivers.create(function (error) {
                self.receivers.remove(receiver);
                if (self.loading[name]) {
                    var callbacks = self.loading[name];
                    delete self.loading[name];
                    var successCallback = function (wasSuccessful) {
                        if (!wasSuccessful) {
                            request.cleanup();
                        }
                    };
                    for (var i = 0; i < callbacks.length; i++) {
                        callbacks[i](error, successCallback);
                    }
                }
            });
            request.send(receiver);
        }
    };
    DependencyLoader.prototype.getRoot = function (options) {
        var cdn;
        var protocol = runtime.getDocument().location.protocol;
        if ((options && options.useTLS) || protocol === 'https:') {
            cdn = this.options.cdn_https;
        }
        else {
            cdn = this.options.cdn_http;
        }
        return cdn.replace(/\/*$/, '') + '/' + this.options.version;
    };
    DependencyLoader.prototype.getPath = function (name, options) {
        return this.getRoot(options) + '/' + name + this.options.suffix + '.js';
    };
    return DependencyLoader;
}());
/* harmony default export */ var dependency_loader = (dependency_loader_DependencyLoader);

// CONCATENATED MODULE: ./src/runtimes/web/dom/dependencies.ts



var DependenciesReceivers = new ScriptReceiverFactory('_pusher_dependencies', 'Pusher.DependenciesReceivers');
var Dependencies = new dependency_loader({
    cdn_http: defaults.cdn_http,
    cdn_https: defaults.cdn_https,
    version: defaults.VERSION,
    suffix: defaults.dependency_suffix,
    receivers: DependenciesReceivers
});

// CONCATENATED MODULE: ./src/core/utils/url_store.ts
var urlStore = {
    baseUrl: 'https://pusher.com',
    urls: {
        authenticationEndpoint: {
            path: '/docs/channels/server_api/authenticating_users'
        },
        authorizationEndpoint: {
            path: '/docs/channels/server_api/authorizing-users/'
        },
        javascriptQuickStart: {
            path: '/docs/javascript_quick_start'
        },
        triggeringClientEvents: {
            path: '/docs/client_api_guide/client_events#trigger-events'
        },
        encryptedChannelSupport: {
            fullUrl: 'https://github.com/pusher/pusher-js/tree/cc491015371a4bde5743d1c87a0fbac0feb53195#encrypted-channel-support'
        }
    }
};
var buildLogSuffix = function (key) {
    var urlPrefix = 'See:';
    var urlObj = urlStore.urls[key];
    if (!urlObj)
        return '';
    var url;
    if (urlObj.fullUrl) {
        url = urlObj.fullUrl;
    }
    else if (urlObj.path) {
        url = urlStore.baseUrl + urlObj.path;
    }
    if (!url)
        return '';
    return urlPrefix + " " + url;
};
/* harmony default export */ var url_store = ({ buildLogSuffix: buildLogSuffix });

// CONCATENATED MODULE: ./src/core/auth/options.ts
var AuthRequestType;
(function (AuthRequestType) {
    AuthRequestType["UserAuthentication"] = "user-authentication";
    AuthRequestType["ChannelAuthorization"] = "channel-authorization";
})(AuthRequestType || (AuthRequestType = {}));

// CONCATENATED MODULE: ./src/core/errors.ts
var __extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var BadEventName = (function (_super) {
    __extends(BadEventName, _super);
    function BadEventName(msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return BadEventName;
}(Error));

var BadChannelName = (function (_super) {
    __extends(BadChannelName, _super);
    function BadChannelName(msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return BadChannelName;
}(Error));

var RequestTimedOut = (function (_super) {
    __extends(RequestTimedOut, _super);
    function RequestTimedOut(msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return RequestTimedOut;
}(Error));

var TransportPriorityTooLow = (function (_super) {
    __extends(TransportPriorityTooLow, _super);
    function TransportPriorityTooLow(msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return TransportPriorityTooLow;
}(Error));

var TransportClosed = (function (_super) {
    __extends(TransportClosed, _super);
    function TransportClosed(msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return TransportClosed;
}(Error));

var UnsupportedFeature = (function (_super) {
    __extends(UnsupportedFeature, _super);
    function UnsupportedFeature(msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return UnsupportedFeature;
}(Error));

var UnsupportedTransport = (function (_super) {
    __extends(UnsupportedTransport, _super);
    function UnsupportedTransport(msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return UnsupportedTransport;
}(Error));

var UnsupportedStrategy = (function (_super) {
    __extends(UnsupportedStrategy, _super);
    function UnsupportedStrategy(msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return UnsupportedStrategy;
}(Error));

var HTTPAuthError = (function (_super) {
    __extends(HTTPAuthError, _super);
    function HTTPAuthError(status, msg) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, msg) || this;
        _this.status = status;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return HTTPAuthError;
}(Error));


// CONCATENATED MODULE: ./src/runtimes/isomorphic/auth/xhr_auth.ts




var ajax = function (context, query, authOptions, authRequestType, callback) {
    var xhr = runtime.createXHR();
    xhr.open('POST', authOptions.endpoint, true);
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    for (var headerName in authOptions.headers) {
        xhr.setRequestHeader(headerName, authOptions.headers[headerName]);
    }
    if (authOptions.headersProvider != null) {
        var dynamicHeaders = authOptions.headersProvider();
        for (var headerName in dynamicHeaders) {
            xhr.setRequestHeader(headerName, dynamicHeaders[headerName]);
        }
    }
    xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
            if (xhr.status === 200) {
                var data = void 0;
                var parsed = false;
                try {
                    data = JSON.parse(xhr.responseText);
                    parsed = true;
                }
                catch (e) {
                    callback(new HTTPAuthError(200, "JSON returned from " + authRequestType.toString() + " endpoint was invalid, yet status code was 200. Data was: " + xhr.responseText), null);
                }
                if (parsed) {
                    callback(null, data);
                }
            }
            else {
                var suffix = '';
                switch (authRequestType) {
                    case AuthRequestType.UserAuthentication:
                        suffix = url_store.buildLogSuffix('authenticationEndpoint');
                        break;
                    case AuthRequestType.ChannelAuthorization:
                        suffix = "Clients must be authorized to join private or presence channels. " + url_store.buildLogSuffix('authorizationEndpoint');
                        break;
                }
                callback(new HTTPAuthError(xhr.status, "Unable to retrieve auth string from " + authRequestType.toString() + " endpoint - " +
                    ("received status: " + xhr.status + " from " + authOptions.endpoint + ". " + suffix)), null);
            }
        }
    };
    xhr.send(query);
    return xhr;
};
/* harmony default export */ var xhr_auth = (ajax);

// CONCATENATED MODULE: ./src/core/base64.ts
function encode(s) {
    return btoa(utob(s));
}
var fromCharCode = String.fromCharCode;
var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
var b64tab = {};
for (var base64_i = 0, l = b64chars.length; base64_i < l; base64_i++) {
    b64tab[b64chars.charAt(base64_i)] = base64_i;
}
var cb_utob = function (c) {
    var cc = c.charCodeAt(0);
    return cc < 0x80
        ? c
        : cc < 0x800
            ? fromCharCode(0xc0 | (cc >>> 6)) + fromCharCode(0x80 | (cc & 0x3f))
            : fromCharCode(0xe0 | ((cc >>> 12) & 0x0f)) +
                fromCharCode(0x80 | ((cc >>> 6) & 0x3f)) +
                fromCharCode(0x80 | (cc & 0x3f));
};
var utob = function (u) {
    return u.replace(/[^\x00-\x7F]/g, cb_utob);
};
var cb_encode = function (ccc) {
    var padlen = [0, 2, 1][ccc.length % 3];
    var ord = (ccc.charCodeAt(0) << 16) |
        ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8) |
        (ccc.length > 2 ? ccc.charCodeAt(2) : 0);
    var chars = [
        b64chars.charAt(ord >>> 18),
        b64chars.charAt((ord >>> 12) & 63),
        padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),
        padlen >= 1 ? '=' : b64chars.charAt(ord & 63)
    ];
    return chars.join('');
};
var btoa = window.btoa ||
    function (b) {
        return b.replace(/[\s\S]{1,3}/g, cb_encode);
    };

// CONCATENATED MODULE: ./src/core/utils/timers/abstract_timer.ts
var Timer = (function () {
    function Timer(set, clear, delay, callback) {
        var _this = this;
        this.clear = clear;
        this.timer = set(function () {
            if (_this.timer) {
                _this.timer = callback(_this.timer);
            }
        }, delay);
    }
    Timer.prototype.isRunning = function () {
        return this.timer !== null;
    };
    Timer.prototype.ensureAborted = function () {
        if (this.timer) {
            this.clear(this.timer);
            this.timer = null;
        }
    };
    return Timer;
}());
/* harmony default export */ var abstract_timer = (Timer);

// CONCATENATED MODULE: ./src/core/utils/timers/index.ts
var timers_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

function timers_clearTimeout(timer) {
    window.clearTimeout(timer);
}
function timers_clearInterval(timer) {
    window.clearInterval(timer);
}
var OneOffTimer = (function (_super) {
    timers_extends(OneOffTimer, _super);
    function OneOffTimer(delay, callback) {
        return _super.call(this, setTimeout, timers_clearTimeout, delay, function (timer) {
            callback();
            return null;
        }) || this;
    }
    return OneOffTimer;
}(abstract_timer));

var PeriodicTimer = (function (_super) {
    timers_extends(PeriodicTimer, _super);
    function PeriodicTimer(delay, callback) {
        return _super.call(this, setInterval, timers_clearInterval, delay, function (timer) {
            callback();
            return timer;
        }) || this;
    }
    return PeriodicTimer;
}(abstract_timer));


// CONCATENATED MODULE: ./src/core/util.ts

var Util = {
    now: function () {
        if (Date.now) {
            return Date.now();
        }
        else {
            return new Date().valueOf();
        }
    },
    defer: function (callback) {
        return new OneOffTimer(0, callback);
    },
    method: function (name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var boundArguments = Array.prototype.slice.call(arguments, 1);
        return function (object) {
            return object[name].apply(object, boundArguments.concat(arguments));
        };
    }
};
/* harmony default export */ var util = (Util);

// CONCATENATED MODULE: ./src/core/utils/collections.ts


function extend(target) {
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    for (var i = 0; i < sources.length; i++) {
        var extensions = sources[i];
        for (var property in extensions) {
            if (extensions[property] &&
                extensions[property].constructor &&
                extensions[property].constructor === Object) {
                target[property] = extend(target[property] || {}, extensions[property]);
            }
            else {
                target[property] = extensions[property];
            }
        }
    }
    return target;
}
function stringify() {
    var m = ['Pusher'];
    for (var i = 0; i < arguments.length; i++) {
        if (typeof arguments[i] === 'string') {
            m.push(arguments[i]);
        }
        else {
            m.push(safeJSONStringify(arguments[i]));
        }
    }
    return m.join(' : ');
}
function arrayIndexOf(array, item) {
    var nativeIndexOf = Array.prototype.indexOf;
    if (array === null) {
        return -1;
    }
    if (nativeIndexOf && array.indexOf === nativeIndexOf) {
        return array.indexOf(item);
    }
    for (var i = 0, l = array.length; i < l; i++) {
        if (array[i] === item) {
            return i;
        }
    }
    return -1;
}
function objectApply(object, f) {
    for (var key in object) {
        if (Object.prototype.hasOwnProperty.call(object, key)) {
            f(object[key], key, object);
        }
    }
}
function keys(object) {
    var keys = [];
    objectApply(object, function (_, key) {
        keys.push(key);
    });
    return keys;
}
function values(object) {
    var values = [];
    objectApply(object, function (value) {
        values.push(value);
    });
    return values;
}
function apply(array, f, context) {
    for (var i = 0; i < array.length; i++) {
        f.call(context || window, array[i], i, array);
    }
}
function map(array, f) {
    var result = [];
    for (var i = 0; i < array.length; i++) {
        result.push(f(array[i], i, array, result));
    }
    return result;
}
function mapObject(object, f) {
    var result = {};
    objectApply(object, function (value, key) {
        result[key] = f(value);
    });
    return result;
}
function filter(array, test) {
    test =
        test ||
            function (value) {
                return !!value;
            };
    var result = [];
    for (var i = 0; i < array.length; i++) {
        if (test(array[i], i, array, result)) {
            result.push(array[i]);
        }
    }
    return result;
}
function filterObject(object, test) {
    var result = {};
    objectApply(object, function (value, key) {
        if ((test && test(value, key, object, result)) || Boolean(value)) {
            result[key] = value;
        }
    });
    return result;
}
function flatten(object) {
    var result = [];
    objectApply(object, function (value, key) {
        result.push([key, value]);
    });
    return result;
}
function any(array, test) {
    for (var i = 0; i < array.length; i++) {
        if (test(array[i], i, array)) {
            return true;
        }
    }
    return false;
}
function collections_all(array, test) {
    for (var i = 0; i < array.length; i++) {
        if (!test(array[i], i, array)) {
            return false;
        }
    }
    return true;
}
function encodeParamsObject(data) {
    return mapObject(data, function (value) {
        if (typeof value === 'object') {
            value = safeJSONStringify(value);
        }
        return encodeURIComponent(encode(value.toString()));
    });
}
function buildQueryString(data) {
    var params = filterObject(data, function (value) {
        return value !== undefined;
    });
    var query = map(flatten(encodeParamsObject(params)), util.method('join', '=')).join('&');
    return query;
}
function decycleObject(object) {
    var objects = [], paths = [];
    return (function derez(value, path) {
        var i, name, nu;
        switch (typeof value) {
            case 'object':
                if (!value) {
                    return null;
                }
                for (i = 0; i < objects.length; i += 1) {
                    if (objects[i] === value) {
                        return { $ref: paths[i] };
                    }
                }
                objects.push(value);
                paths.push(path);
                if (Object.prototype.toString.apply(value) === '[object Array]') {
                    nu = [];
                    for (i = 0; i < value.length; i += 1) {
                        nu[i] = derez(value[i], path + '[' + i + ']');
                    }
                }
                else {
                    nu = {};
                    for (name in value) {
                        if (Object.prototype.hasOwnProperty.call(value, name)) {
                            nu[name] = derez(value[name], path + '[' + JSON.stringify(name) + ']');
                        }
                    }
                }
                return nu;
            case 'number':
            case 'string':
            case 'boolean':
                return value;
        }
    })(object, '$');
}
function safeJSONStringify(source) {
    try {
        return JSON.stringify(source);
    }
    catch (e) {
        return JSON.stringify(decycleObject(source));
    }
}

// CONCATENATED MODULE: ./src/core/logger.ts


var logger_Logger = (function () {
    function Logger() {
        this.globalLog = function (message) {
            if (window.console && window.console.log) {
                window.console.log(message);
            }
        };
    }
    Logger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.log(this.globalLog, args);
    };
    Logger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.log(this.globalLogWarn, args);
    };
    Logger.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.log(this.globalLogError, args);
    };
    Logger.prototype.globalLogWarn = function (message) {
        if (window.console && window.console.warn) {
            window.console.warn(message);
        }
        else {
            this.globalLog(message);
        }
    };
    Logger.prototype.globalLogError = function (message) {
        if (window.console && window.console.error) {
            window.console.error(message);
        }
        else {
            this.globalLogWarn(message);
        }
    };
    Logger.prototype.log = function (defaultLoggingFunction) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        var message = stringify.apply(this, arguments);
        if (core_pusher.log) {
            core_pusher.log(message);
        }
        else if (core_pusher.logToConsole) {
            var log = defaultLoggingFunction.bind(this);
            log(message);
        }
    };
    return Logger;
}());
/* harmony default export */ var logger = (new logger_Logger());

// CONCATENATED MODULE: ./src/runtimes/web/auth/jsonp_auth.ts

var jsonp = function (context, query, authOptions, authRequestType, callback) {
    if (authOptions.headers !== undefined ||
        authOptions.headersProvider != null) {
        logger.warn("To send headers with the " + authRequestType.toString() + " request, you must use AJAX, rather than JSONP.");
    }
    var callbackName = context.nextAuthCallbackID.toString();
    context.nextAuthCallbackID++;
    var document = context.getDocument();
    var script = document.createElement('script');
    context.auth_callbacks[callbackName] = function (data) {
        callback(null, data);
    };
    var callback_name = "Pusher.auth_callbacks['" + callbackName + "']";
    script.src =
        authOptions.endpoint +
            '?callback=' +
            encodeURIComponent(callback_name) +
            '&' +
            query;
    var head = document.getElementsByTagName('head')[0] || document.documentElement;
    head.insertBefore(script, head.firstChild);
};
/* harmony default export */ var jsonp_auth = (jsonp);

// CONCATENATED MODULE: ./src/runtimes/web/dom/script_request.ts
var ScriptRequest = (function () {
    function ScriptRequest(src) {
        this.src = src;
    }
    ScriptRequest.prototype.send = function (receiver) {
        var self = this;
        var errorString = 'Error loading ' + self.src;
        self.script = document.createElement('script');
        self.script.id = receiver.id;
        self.script.src = self.src;
        self.script.type = 'text/javascript';
        self.script.charset = 'UTF-8';
        if (self.script.addEventListener) {
            self.script.onerror = function () {
                receiver.callback(errorString);
            };
            self.script.onload = function () {
                receiver.callback(null);
            };
        }
        else {
            self.script.onreadystatechange = function () {
                if (self.script.readyState === 'loaded' ||
                    self.script.readyState === 'complete') {
                    receiver.callback(null);
                }
            };
        }
        if (self.script.async === undefined &&
            document.attachEvent &&
            /opera/i.test(navigator.userAgent)) {
            self.errorScript = document.createElement('script');
            self.errorScript.id = receiver.id + '_error';
            self.errorScript.text = receiver.name + "('" + errorString + "');";
            self.script.async = self.errorScript.async = false;
        }
        else {
            self.script.async = true;
        }
        var head = document.getElementsByTagName('head')[0];
        head.insertBefore(self.script, head.firstChild);
        if (self.errorScript) {
            head.insertBefore(self.errorScript, self.script.nextSibling);
        }
    };
    ScriptRequest.prototype.cleanup = function () {
        if (this.script) {
            this.script.onload = this.script.onerror = null;
            this.script.onreadystatechange = null;
        }
        if (this.script && this.script.parentNode) {
            this.script.parentNode.removeChild(this.script);
        }
        if (this.errorScript && this.errorScript.parentNode) {
            this.errorScript.parentNode.removeChild(this.errorScript);
        }
        this.script = null;
        this.errorScript = null;
    };
    return ScriptRequest;
}());
/* harmony default export */ var script_request = (ScriptRequest);

// CONCATENATED MODULE: ./src/runtimes/web/dom/jsonp_request.ts


var jsonp_request_JSONPRequest = (function () {
    function JSONPRequest(url, data) {
        this.url = url;
        this.data = data;
    }
    JSONPRequest.prototype.send = function (receiver) {
        if (this.request) {
            return;
        }
        var query = buildQueryString(this.data);
        var url = this.url + '/' + receiver.number + '?' + query;
        this.request = runtime.createScriptRequest(url);
        this.request.send(receiver);
    };
    JSONPRequest.prototype.cleanup = function () {
        if (this.request) {
            this.request.cleanup();
        }
    };
    return JSONPRequest;
}());
/* harmony default export */ var jsonp_request = (jsonp_request_JSONPRequest);

// CONCATENATED MODULE: ./src/runtimes/web/timeline/jsonp_timeline.ts


var getAgent = function (sender, useTLS) {
    return function (data, callback) {
        var scheme = 'http' + (useTLS ? 's' : '') + '://';
        var url = scheme + (sender.host || sender.options.host) + sender.options.path;
        var request = runtime.createJSONPRequest(url, data);
        var receiver = runtime.ScriptReceivers.create(function (error, result) {
            ScriptReceivers.remove(receiver);
            request.cleanup();
            if (result && result.host) {
                sender.host = result.host;
            }
            if (callback) {
                callback(error, result);
            }
        });
        request.send(receiver);
    };
};
var jsonp_timeline_jsonp = {
    name: 'jsonp',
    getAgent: getAgent
};
/* harmony default export */ var jsonp_timeline = (jsonp_timeline_jsonp);

// CONCATENATED MODULE: ./src/core/transports/url_schemes.ts

function getGenericURL(baseScheme, params, path) {
    var scheme = baseScheme + (params.useTLS ? 's' : '');
    var host = params.useTLS ? params.hostTLS : params.hostNonTLS;
    return scheme + '://' + host + path;
}
function getGenericPath(key, queryString) {
    var path = '/app/' + key;
    var query = '?protocol=' +
        defaults.PROTOCOL +
        '&client=js' +
        '&version=' +
        defaults.VERSION +
        (queryString ? '&' + queryString : '');
    return path + query;
}
var ws = {
    getInitial: function (key, params) {
        var path = (params.httpPath || '') + getGenericPath(key, 'flash=false');
        return getGenericURL('ws', params, path);
    }
};
var http = {
    getInitial: function (key, params) {
        var path = (params.httpPath || '/pusher') + getGenericPath(key);
        return getGenericURL('http', params, path);
    }
};
var sockjs = {
    getInitial: function (key, params) {
        return getGenericURL('http', params, params.httpPath || '/pusher');
    },
    getPath: function (key, params) {
        return getGenericPath(key);
    }
};

// CONCATENATED MODULE: ./src/core/events/callback_registry.ts

var callback_registry_CallbackRegistry = (function () {
    function CallbackRegistry() {
        this._callbacks = {};
    }
    CallbackRegistry.prototype.get = function (name) {
        return this._callbacks[prefix(name)];
    };
    CallbackRegistry.prototype.add = function (name, callback, context) {
        var prefixedEventName = prefix(name);
        this._callbacks[prefixedEventName] =
            this._callbacks[prefixedEventName] || [];
        this._callbacks[prefixedEventName].push({
            fn: callback,
            context: context
        });
    };
    CallbackRegistry.prototype.remove = function (name, callback, context) {
        if (!name && !callback && !context) {
            this._callbacks = {};
            return;
        }
        var names = name ? [prefix(name)] : keys(this._callbacks);
        if (callback || context) {
            this.removeCallback(names, callback, context);
        }
        else {
            this.removeAllCallbacks(names);
        }
    };
    CallbackRegistry.prototype.removeCallback = function (names, callback, context) {
        apply(names, function (name) {
            this._callbacks[name] = filter(this._callbacks[name] || [], function (binding) {
                return ((callback && callback !== binding.fn) ||
                    (context && context !== binding.context));
            });
            if (this._callbacks[name].length === 0) {
                delete this._callbacks[name];
            }
        }, this);
    };
    CallbackRegistry.prototype.removeAllCallbacks = function (names) {
        apply(names, function (name) {
            delete this._callbacks[name];
        }, this);
    };
    return CallbackRegistry;
}());
/* harmony default export */ var callback_registry = (callback_registry_CallbackRegistry);
function prefix(name) {
    return '_' + name;
}

// CONCATENATED MODULE: ./src/core/events/dispatcher.ts


var dispatcher_Dispatcher = (function () {
    function Dispatcher(failThrough) {
        this.callbacks = new callback_registry();
        this.global_callbacks = [];
        this.failThrough = failThrough;
    }
    Dispatcher.prototype.bind = function (eventName, callback, context) {
        this.callbacks.add(eventName, callback, context);
        return this;
    };
    Dispatcher.prototype.bind_global = function (callback) {
        this.global_callbacks.push(callback);
        return this;
    };
    Dispatcher.prototype.unbind = function (eventName, callback, context) {
        this.callbacks.remove(eventName, callback, context);
        return this;
    };
    Dispatcher.prototype.unbind_global = function (callback) {
        if (!callback) {
            this.global_callbacks = [];
            return this;
        }
        this.global_callbacks = filter(this.global_callbacks || [], function (c) { return c !== callback; });
        return this;
    };
    Dispatcher.prototype.unbind_all = function () {
        this.unbind();
        this.unbind_global();
        return this;
    };
    Dispatcher.prototype.emit = function (eventName, data, metadata) {
        for (var i = 0; i < this.global_callbacks.length; i++) {
            this.global_callbacks[i](eventName, data);
        }
        var callbacks = this.callbacks.get(eventName);
        var args = [];
        if (metadata) {
            args.push(data, metadata);
        }
        else if (data) {
            args.push(data);
        }
        if (callbacks && callbacks.length > 0) {
            for (var i = 0; i < callbacks.length; i++) {
                callbacks[i].fn.apply(callbacks[i].context || window, args);
            }
        }
        else if (this.failThrough) {
            this.failThrough(eventName, data);
        }
        return this;
    };
    return Dispatcher;
}());
/* harmony default export */ var dispatcher = (dispatcher_Dispatcher);

// CONCATENATED MODULE: ./src/core/transports/transport_connection.ts
var transport_connection_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var transport_connection_TransportConnection = (function (_super) {
    transport_connection_extends(TransportConnection, _super);
    function TransportConnection(hooks, name, priority, key, options) {
        var _this = _super.call(this) || this;
        _this.initialize = runtime.transportConnectionInitializer;
        _this.hooks = hooks;
        _this.name = name;
        _this.priority = priority;
        _this.key = key;
        _this.options = options;
        _this.state = 'new';
        _this.timeline = options.timeline;
        _this.activityTimeout = options.activityTimeout;
        _this.id = _this.timeline.generateUniqueID();
        return _this;
    }
    TransportConnection.prototype.handlesActivityChecks = function () {
        return Boolean(this.hooks.handlesActivityChecks);
    };
    TransportConnection.prototype.supportsPing = function () {
        return Boolean(this.hooks.supportsPing);
    };
    TransportConnection.prototype.connect = function () {
        var _this = this;
        if (this.socket || this.state !== 'initialized') {
            return false;
        }
        var url = this.hooks.urls.getInitial(this.key, this.options);
        try {
            this.socket = this.hooks.getSocket(url, this.options);
        }
        catch (e) {
            util.defer(function () {
                _this.onError(e);
                _this.changeState('closed');
            });
            return false;
        }
        this.bindListeners();
        logger.debug('Connecting', { transport: this.name, url: url });
        this.changeState('connecting');
        return true;
    };
    TransportConnection.prototype.close = function () {
        if (this.socket) {
            this.socket.close();
            return true;
        }
        else {
            return false;
        }
    };
    TransportConnection.prototype.send = function (data) {
        var _this = this;
        if (this.state === 'open') {
            util.defer(function () {
                if (_this.socket) {
                    _this.socket.send(data);
                }
            });
            return true;
        }
        else {
            return false;
        }
    };
    TransportConnection.prototype.ping = function () {
        if (this.state === 'open' && this.supportsPing()) {
            this.socket.ping();
        }
    };
    TransportConnection.prototype.onOpen = function () {
        if (this.hooks.beforeOpen) {
            this.hooks.beforeOpen(this.socket, this.hooks.urls.getPath(this.key, this.options));
        }
        this.changeState('open');
        this.socket.onopen = undefined;
    };
    TransportConnection.prototype.onError = function (error) {
        this.emit('error', { type: 'WebSocketError', error: error });
        this.timeline.error(this.buildTimelineMessage({ error: error.toString() }));
    };
    TransportConnection.prototype.onClose = function (closeEvent) {
        if (closeEvent) {
            this.changeState('closed', {
                code: closeEvent.code,
                reason: closeEvent.reason,
                wasClean: closeEvent.wasClean
            });
        }
        else {
            this.changeState('closed');
        }
        this.unbindListeners();
        this.socket = undefined;
    };
    TransportConnection.prototype.onMessage = function (message) {
        this.emit('message', message);
    };
    TransportConnection.prototype.onActivity = function () {
        this.emit('activity');
    };
    TransportConnection.prototype.bindListeners = function () {
        var _this = this;
        this.socket.onopen = function () {
            _this.onOpen();
        };
        this.socket.onerror = function (error) {
            _this.onError(error);
        };
        this.socket.onclose = function (closeEvent) {
            _this.onClose(closeEvent);
        };
        this.socket.onmessage = function (message) {
            _this.onMessage(message);
        };
        if (this.supportsPing()) {
            this.socket.onactivity = function () {
                _this.onActivity();
            };
        }
    };
    TransportConnection.prototype.unbindListeners = function () {
        if (this.socket) {
            this.socket.onopen = undefined;
            this.socket.onerror = undefined;
            this.socket.onclose = undefined;
            this.socket.onmessage = undefined;
            if (this.supportsPing()) {
                this.socket.onactivity = undefined;
            }
        }
    };
    TransportConnection.prototype.changeState = function (state, params) {
        this.state = state;
        this.timeline.info(this.buildTimelineMessage({
            state: state,
            params: params
        }));
        this.emit(state, params);
    };
    TransportConnection.prototype.buildTimelineMessage = function (message) {
        return extend({ cid: this.id }, message);
    };
    return TransportConnection;
}(dispatcher));
/* harmony default export */ var transport_connection = (transport_connection_TransportConnection);

// CONCATENATED MODULE: ./src/core/transports/transport.ts

var transport_Transport = (function () {
    function Transport(hooks) {
        this.hooks = hooks;
    }
    Transport.prototype.isSupported = function (environment) {
        return this.hooks.isSupported(environment);
    };
    Transport.prototype.createConnection = function (name, priority, key, options) {
        return new transport_connection(this.hooks, name, priority, key, options);
    };
    return Transport;
}());
/* harmony default export */ var transports_transport = (transport_Transport);

// CONCATENATED MODULE: ./src/runtimes/isomorphic/transports/transports.ts




var WSTransport = new transports_transport({
    urls: ws,
    handlesActivityChecks: false,
    supportsPing: false,
    isInitialized: function () {
        return Boolean(runtime.getWebSocketAPI());
    },
    isSupported: function () {
        return Boolean(runtime.getWebSocketAPI());
    },
    getSocket: function (url) {
        return runtime.createWebSocket(url);
    }
});
var httpConfiguration = {
    urls: http,
    handlesActivityChecks: false,
    supportsPing: true,
    isInitialized: function () {
        return true;
    }
};
var streamingConfiguration = extend({
    getSocket: function (url) {
        return runtime.HTTPFactory.createStreamingSocket(url);
    }
}, httpConfiguration);
var pollingConfiguration = extend({
    getSocket: function (url) {
        return runtime.HTTPFactory.createPollingSocket(url);
    }
}, httpConfiguration);
var xhrConfiguration = {
    isSupported: function () {
        return runtime.isXHRSupported();
    }
};
var XHRStreamingTransport = new transports_transport((extend({}, streamingConfiguration, xhrConfiguration)));
var XHRPollingTransport = new transports_transport(extend({}, pollingConfiguration, xhrConfiguration));
var Transports = {
    ws: WSTransport,
    xhr_streaming: XHRStreamingTransport,
    xhr_polling: XHRPollingTransport
};
/* harmony default export */ var transports = (Transports);

// CONCATENATED MODULE: ./src/runtimes/web/transports/transports.ts






var SockJSTransport = new transports_transport({
    file: 'sockjs',
    urls: sockjs,
    handlesActivityChecks: true,
    supportsPing: false,
    isSupported: function () {
        return true;
    },
    isInitialized: function () {
        return window.SockJS !== undefined;
    },
    getSocket: function (url, options) {
        return new window.SockJS(url, null, {
            js_path: Dependencies.getPath('sockjs', {
                useTLS: options.useTLS
            }),
            ignore_null_origin: options.ignoreNullOrigin
        });
    },
    beforeOpen: function (socket, path) {
        socket.send(JSON.stringify({
            path: path
        }));
    }
});
var xdrConfiguration = {
    isSupported: function (environment) {
        var yes = runtime.isXDRSupported(environment.useTLS);
        return yes;
    }
};
var XDRStreamingTransport = new transports_transport((extend({}, streamingConfiguration, xdrConfiguration)));
var XDRPollingTransport = new transports_transport(extend({}, pollingConfiguration, xdrConfiguration));
transports.xdr_streaming = XDRStreamingTransport;
transports.xdr_polling = XDRPollingTransport;
transports.sockjs = SockJSTransport;
/* harmony default export */ var transports_transports = (transports);

// CONCATENATED MODULE: ./src/runtimes/web/net_info.ts
var net_info_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var NetInfo = (function (_super) {
    net_info_extends(NetInfo, _super);
    function NetInfo() {
        var _this = _super.call(this) || this;
        var self = _this;
        if (window.addEventListener !== undefined) {
            window.addEventListener('online', function () {
                self.emit('online');
            }, false);
            window.addEventListener('offline', function () {
                self.emit('offline');
            }, false);
        }
        return _this;
    }
    NetInfo.prototype.isOnline = function () {
        if (window.navigator.onLine === undefined) {
            return true;
        }
        else {
            return window.navigator.onLine;
        }
    };
    return NetInfo;
}(dispatcher));

var net_info_Network = new NetInfo();

// CONCATENATED MODULE: ./src/core/transports/assistant_to_the_transport_manager.ts


var assistant_to_the_transport_manager_AssistantToTheTransportManager = (function () {
    function AssistantToTheTransportManager(manager, transport, options) {
        this.manager = manager;
        this.transport = transport;
        this.minPingDelay = options.minPingDelay;
        this.maxPingDelay = options.maxPingDelay;
        this.pingDelay = undefined;
    }
    AssistantToTheTransportManager.prototype.createConnection = function (name, priority, key, options) {
        var _this = this;
        options = extend({}, options, {
            activityTimeout: this.pingDelay
        });
        var connection = this.transport.createConnection(name, priority, key, options);
        var openTimestamp = null;
        var onOpen = function () {
            connection.unbind('open', onOpen);
            connection.bind('closed', onClosed);
            openTimestamp = util.now();
        };
        var onClosed = function (closeEvent) {
            connection.unbind('closed', onClosed);
            if (closeEvent.code === 1002 || closeEvent.code === 1003) {
                _this.manager.reportDeath();
            }
            else if (!closeEvent.wasClean && openTimestamp) {
                var lifespan = util.now() - openTimestamp;
                if (lifespan < 2 * _this.maxPingDelay) {
                    _this.manager.reportDeath();
                    _this.pingDelay = Math.max(lifespan / 2, _this.minPingDelay);
                }
            }
        };
        connection.bind('open', onOpen);
        return connection;
    };
    AssistantToTheTransportManager.prototype.isSupported = function (environment) {
        return this.manager.isAlive() && this.transport.isSupported(environment);
    };
    return AssistantToTheTransportManager;
}());
/* harmony default export */ var assistant_to_the_transport_manager = (assistant_to_the_transport_manager_AssistantToTheTransportManager);

// CONCATENATED MODULE: ./src/core/connection/protocol/protocol.ts
var Protocol = {
    decodeMessage: function (messageEvent) {
        try {
            var messageData = JSON.parse(messageEvent.data);
            var pusherEventData = messageData.data;
            if (typeof pusherEventData === 'string') {
                try {
                    pusherEventData = JSON.parse(messageData.data);
                }
                catch (e) { }
            }
            var pusherEvent = {
                event: messageData.event,
                channel: messageData.channel,
                data: pusherEventData
            };
            if (messageData.user_id) {
                pusherEvent.user_id = messageData.user_id;
            }
            return pusherEvent;
        }
        catch (e) {
            throw { type: 'MessageParseError', error: e, data: messageEvent.data };
        }
    },
    encodeMessage: function (event) {
        return JSON.stringify(event);
    },
    processHandshake: function (messageEvent) {
        var message = Protocol.decodeMessage(messageEvent);
        if (message.event === 'pusher:connection_established') {
            if (!message.data.activity_timeout) {
                throw 'No activity timeout specified in handshake';
            }
            return {
                action: 'connected',
                id: message.data.socket_id,
                activityTimeout: message.data.activity_timeout * 1000
            };
        }
        else if (message.event === 'pusher:error') {
            return {
                action: this.getCloseAction(message.data),
                error: this.getCloseError(message.data)
            };
        }
        else {
            throw 'Invalid handshake';
        }
    },
    getCloseAction: function (closeEvent) {
        if (closeEvent.code < 4000) {
            if (closeEvent.code >= 1002 && closeEvent.code <= 1004) {
                return 'backoff';
            }
            else {
                return null;
            }
        }
        else if (closeEvent.code === 4000) {
            return 'tls_only';
        }
        else if (closeEvent.code < 4100) {
            return 'refused';
        }
        else if (closeEvent.code < 4200) {
            return 'backoff';
        }
        else if (closeEvent.code < 4300) {
            return 'retry';
        }
        else {
            return 'refused';
        }
    },
    getCloseError: function (closeEvent) {
        if (closeEvent.code !== 1000 && closeEvent.code !== 1001) {
            return {
                type: 'PusherError',
                data: {
                    code: closeEvent.code,
                    message: closeEvent.reason || closeEvent.message
                }
            };
        }
        else {
            return null;
        }
    }
};
/* harmony default export */ var protocol_protocol = (Protocol);

// CONCATENATED MODULE: ./src/core/connection/connection.ts
var connection_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var connection_Connection = (function (_super) {
    connection_extends(Connection, _super);
    function Connection(id, transport) {
        var _this = _super.call(this) || this;
        _this.id = id;
        _this.transport = transport;
        _this.activityTimeout = transport.activityTimeout;
        _this.bindListeners();
        return _this;
    }
    Connection.prototype.handlesActivityChecks = function () {
        return this.transport.handlesActivityChecks();
    };
    Connection.prototype.send = function (data) {
        return this.transport.send(data);
    };
    Connection.prototype.send_event = function (name, data, channel) {
        var event = { event: name, data: data };
        if (channel) {
            event.channel = channel;
        }
        logger.debug('Event sent', event);
        return this.send(protocol_protocol.encodeMessage(event));
    };
    Connection.prototype.ping = function () {
        if (this.transport.supportsPing()) {
            this.transport.ping();
        }
        else {
            this.send_event('pusher:ping', {});
        }
    };
    Connection.prototype.close = function () {
        this.transport.close();
    };
    Connection.prototype.bindListeners = function () {
        var _this = this;
        var listeners = {
            message: function (messageEvent) {
                var pusherEvent;
                try {
                    pusherEvent = protocol_protocol.decodeMessage(messageEvent);
                }
                catch (e) {
                    _this.emit('error', {
                        type: 'MessageParseError',
                        error: e,
                        data: messageEvent.data
                    });
                }
                if (pusherEvent !== undefined) {
                    logger.debug('Event recd', pusherEvent);
                    switch (pusherEvent.event) {
                        case 'pusher:error':
                            _this.emit('error', {
                                type: 'PusherError',
                                data: pusherEvent.data
                            });
                            break;
                        case 'pusher:ping':
                            _this.emit('ping');
                            break;
                        case 'pusher:pong':
                            _this.emit('pong');
                            break;
                    }
                    _this.emit('message', pusherEvent);
                }
            },
            activity: function () {
                _this.emit('activity');
            },
            error: function (error) {
                _this.emit('error', error);
            },
            closed: function (closeEvent) {
                unbindListeners();
                if (closeEvent && closeEvent.code) {
                    _this.handleCloseEvent(closeEvent);
                }
                _this.transport = null;
                _this.emit('closed');
            }
        };
        var unbindListeners = function () {
            objectApply(listeners, function (listener, event) {
                _this.transport.unbind(event, listener);
            });
        };
        objectApply(listeners, function (listener, event) {
            _this.transport.bind(event, listener);
        });
    };
    Connection.prototype.handleCloseEvent = function (closeEvent) {
        var action = protocol_protocol.getCloseAction(closeEvent);
        var error = protocol_protocol.getCloseError(closeEvent);
        if (error) {
            this.emit('error', error);
        }
        if (action) {
            this.emit(action, { action: action, error: error });
        }
    };
    return Connection;
}(dispatcher));
/* harmony default export */ var connection_connection = (connection_Connection);

// CONCATENATED MODULE: ./src/core/connection/handshake/index.ts



var handshake_Handshake = (function () {
    function Handshake(transport, callback) {
        this.transport = transport;
        this.callback = callback;
        this.bindListeners();
    }
    Handshake.prototype.close = function () {
        this.unbindListeners();
        this.transport.close();
    };
    Handshake.prototype.bindListeners = function () {
        var _this = this;
        this.onMessage = function (m) {
            _this.unbindListeners();
            var result;
            try {
                result = protocol_protocol.processHandshake(m);
            }
            catch (e) {
                _this.finish('error', { error: e });
                _this.transport.close();
                return;
            }
            if (result.action === 'connected') {
                _this.finish('connected', {
                    connection: new connection_connection(result.id, _this.transport),
                    activityTimeout: result.activityTimeout
                });
            }
            else {
                _this.finish(result.action, { error: result.error });
                _this.transport.close();
            }
        };
        this.onClosed = function (closeEvent) {
            _this.unbindListeners();
            var action = protocol_protocol.getCloseAction(closeEvent) || 'backoff';
            var error = protocol_protocol.getCloseError(closeEvent);
            _this.finish(action, { error: error });
        };
        this.transport.bind('message', this.onMessage);
        this.transport.bind('closed', this.onClosed);
    };
    Handshake.prototype.unbindListeners = function () {
        this.transport.unbind('message', this.onMessage);
        this.transport.unbind('closed', this.onClosed);
    };
    Handshake.prototype.finish = function (action, params) {
        this.callback(extend({ transport: this.transport, action: action }, params));
    };
    return Handshake;
}());
/* harmony default export */ var connection_handshake = (handshake_Handshake);

// CONCATENATED MODULE: ./src/core/timeline/timeline_sender.ts

var timeline_sender_TimelineSender = (function () {
    function TimelineSender(timeline, options) {
        this.timeline = timeline;
        this.options = options || {};
    }
    TimelineSender.prototype.send = function (useTLS, callback) {
        if (this.timeline.isEmpty()) {
            return;
        }
        this.timeline.send(runtime.TimelineTransport.getAgent(this, useTLS), callback);
    };
    return TimelineSender;
}());
/* harmony default export */ var timeline_sender = (timeline_sender_TimelineSender);

// CONCATENATED MODULE: ./src/core/channels/channel.ts
var channel_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var channel_Channel = (function (_super) {
    channel_extends(Channel, _super);
    function Channel(name, pusher) {
        var _this = _super.call(this, function (event, data) {
            logger.debug('No callbacks on ' + name + ' for ' + event);
        }) || this;
        _this.name = name;
        _this.pusher = pusher;
        _this.subscribed = false;
        _this.subscriptionPending = false;
        _this.subscriptionCancelled = false;
        return _this;
    }
    Channel.prototype.authorize = function (socketId, callback) {
        return callback(null, { auth: '' });
    };
    Channel.prototype.trigger = function (event, data) {
        if (event.indexOf('client-') !== 0) {
            throw new BadEventName("Event '" + event + "' does not start with 'client-'");
        }
        if (!this.subscribed) {
            var suffix = url_store.buildLogSuffix('triggeringClientEvents');
            logger.warn("Client event triggered before channel 'subscription_succeeded' event . " + suffix);
        }
        return this.pusher.send_event(event, data, this.name);
    };
    Channel.prototype.disconnect = function () {
        this.subscribed = false;
        this.subscriptionPending = false;
    };
    Channel.prototype.handleEvent = function (event) {
        var eventName = event.event;
        var data = event.data;
        if (eventName === 'pusher_internal:subscription_succeeded') {
            this.handleSubscriptionSucceededEvent(event);
        }
        else if (eventName === 'pusher_internal:subscription_count') {
            this.handleSubscriptionCountEvent(event);
        }
        else if (eventName.indexOf('pusher_internal:') !== 0) {
            var metadata = {};
            this.emit(eventName, data, metadata);
        }
    };
    Channel.prototype.handleSubscriptionSucceededEvent = function (event) {
        this.subscriptionPending = false;
        this.subscribed = true;
        if (this.subscriptionCancelled) {
            this.pusher.unsubscribe(this.name);
        }
        else {
            this.emit('pusher:subscription_succeeded', event.data);
        }
    };
    Channel.prototype.handleSubscriptionCountEvent = function (event) {
        if (event.data.subscription_count) {
            this.subscriptionCount = event.data.subscription_count;
        }
        this.emit('pusher:subscription_count', event.data);
    };
    Channel.prototype.subscribe = function () {
        var _this = this;
        if (this.subscribed) {
            return;
        }
        this.subscriptionPending = true;
        this.subscriptionCancelled = false;
        this.authorize(this.pusher.connection.socket_id, function (error, data) {
            if (error) {
                _this.subscriptionPending = false;
                logger.error(error.toString());
                _this.emit('pusher:subscription_error', Object.assign({}, {
                    type: 'AuthError',
                    error: error.message
                }, error instanceof HTTPAuthError ? { status: error.status } : {}));
            }
            else {
                _this.pusher.send_event('pusher:subscribe', {
                    auth: data.auth,
                    channel_data: data.channel_data,
                    channel: _this.name
                });
            }
        });
    };
    Channel.prototype.unsubscribe = function () {
        this.subscribed = false;
        this.pusher.send_event('pusher:unsubscribe', {
            channel: this.name
        });
    };
    Channel.prototype.cancelSubscription = function () {
        this.subscriptionCancelled = true;
    };
    Channel.prototype.reinstateSubscription = function () {
        this.subscriptionCancelled = false;
    };
    return Channel;
}(dispatcher));
/* harmony default export */ var channels_channel = (channel_Channel);

// CONCATENATED MODULE: ./src/core/channels/private_channel.ts
var private_channel_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var PrivateChannel = (function (_super) {
    private_channel_extends(PrivateChannel, _super);
    function PrivateChannel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PrivateChannel.prototype.authorize = function (socketId, callback) {
        return this.pusher.config.channelAuthorizer({
            channelName: this.name,
            socketId: socketId
        }, callback);
    };
    return PrivateChannel;
}(channels_channel));
/* harmony default export */ var private_channel = (PrivateChannel);

// CONCATENATED MODULE: ./src/core/channels/members.ts

var members_Members = (function () {
    function Members() {
        this.reset();
    }
    Members.prototype.get = function (id) {
        if (Object.prototype.hasOwnProperty.call(this.members, id)) {
            return {
                id: id,
                info: this.members[id]
            };
        }
        else {
            return null;
        }
    };
    Members.prototype.each = function (callback) {
        var _this = this;
        objectApply(this.members, function (member, id) {
            callback(_this.get(id));
        });
    };
    Members.prototype.setMyID = function (id) {
        this.myID = id;
    };
    Members.prototype.onSubscription = function (subscriptionData) {
        this.members = subscriptionData.presence.hash;
        this.count = subscriptionData.presence.count;
        this.me = this.get(this.myID);
    };
    Members.prototype.addMember = function (memberData) {
        if (this.get(memberData.user_id) === null) {
            this.count++;
        }
        this.members[memberData.user_id] = memberData.user_info;
        return this.get(memberData.user_id);
    };
    Members.prototype.removeMember = function (memberData) {
        var member = this.get(memberData.user_id);
        if (member) {
            delete this.members[memberData.user_id];
            this.count--;
        }
        return member;
    };
    Members.prototype.reset = function () {
        this.members = {};
        this.count = 0;
        this.myID = null;
        this.me = null;
    };
    return Members;
}());
/* harmony default export */ var members = (members_Members);

// CONCATENATED MODULE: ./src/core/channels/presence_channel.ts
var presence_channel_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = ( false) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = ( false) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




var presence_channel_PresenceChannel = (function (_super) {
    presence_channel_extends(PresenceChannel, _super);
    function PresenceChannel(name, pusher) {
        var _this = _super.call(this, name, pusher) || this;
        _this.members = new members();
        return _this;
    }
    PresenceChannel.prototype.authorize = function (socketId, callback) {
        var _this = this;
        _super.prototype.authorize.call(this, socketId, function (error, authData) { return __awaiter(_this, void 0, void 0, function () {
            var channelData, suffix;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!!error) return [3, 3];
                        authData = authData;
                        if (!(authData.channel_data != null)) return [3, 1];
                        channelData = JSON.parse(authData.channel_data);
                        this.members.setMyID(channelData.user_id);
                        return [3, 3];
                    case 1: return [4, this.pusher.user.signinDonePromise];
                    case 2:
                        _a.sent();
                        if (this.pusher.user.user_data != null) {
                            this.members.setMyID(this.pusher.user.user_data.id);
                        }
                        else {
                            suffix = url_store.buildLogSuffix('authorizationEndpoint');
                            logger.error("Invalid auth response for channel '" + this.name + "', " +
                                ("expected 'channel_data' field. " + suffix + ", ") +
                                "or the user should be signed in.");
                            callback('Invalid auth response');
                            return [2];
                        }
                        _a.label = 3;
                    case 3:
                        callback(error, authData);
                        return [2];
                }
            });
        }); });
    };
    PresenceChannel.prototype.handleEvent = function (event) {
        var eventName = event.event;
        if (eventName.indexOf('pusher_internal:') === 0) {
            this.handleInternalEvent(event);
        }
        else {
            var data = event.data;
            var metadata = {};
            if (event.user_id) {
                metadata.user_id = event.user_id;
            }
            this.emit(eventName, data, metadata);
        }
    };
    PresenceChannel.prototype.handleInternalEvent = function (event) {
        var eventName = event.event;
        var data = event.data;
        switch (eventName) {
            case 'pusher_internal:subscription_succeeded':
                this.handleSubscriptionSucceededEvent(event);
                break;
            case 'pusher_internal:subscription_count':
                this.handleSubscriptionCountEvent(event);
                break;
            case 'pusher_internal:member_added':
                var addedMember = this.members.addMember(data);
                this.emit('pusher:member_added', addedMember);
                break;
            case 'pusher_internal:member_removed':
                var removedMember = this.members.removeMember(data);
                if (removedMember) {
                    this.emit('pusher:member_removed', removedMember);
                }
                break;
        }
    };
    PresenceChannel.prototype.handleSubscriptionSucceededEvent = function (event) {
        this.subscriptionPending = false;
        this.subscribed = true;
        if (this.subscriptionCancelled) {
            this.pusher.unsubscribe(this.name);
        }
        else {
            this.members.onSubscription(event.data);
            this.emit('pusher:subscription_succeeded', this.members);
        }
    };
    PresenceChannel.prototype.disconnect = function () {
        this.members.reset();
        _super.prototype.disconnect.call(this);
    };
    return PresenceChannel;
}(private_channel));
/* harmony default export */ var presence_channel = (presence_channel_PresenceChannel);

// EXTERNAL MODULE: ./node_modules/@stablelib/utf8/lib/utf8.js
var utf8 = __nested_webpack_require_20105__(1);

// EXTERNAL MODULE: ./node_modules/@stablelib/base64/lib/base64.js
var base64 = __nested_webpack_require_20105__(0);

// CONCATENATED MODULE: ./src/core/channels/encrypted_channel.ts
var encrypted_channel_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var encrypted_channel_EncryptedChannel = (function (_super) {
    encrypted_channel_extends(EncryptedChannel, _super);
    function EncryptedChannel(name, pusher, nacl) {
        var _this = _super.call(this, name, pusher) || this;
        _this.key = null;
        _this.nacl = nacl;
        return _this;
    }
    EncryptedChannel.prototype.authorize = function (socketId, callback) {
        var _this = this;
        _super.prototype.authorize.call(this, socketId, function (error, authData) {
            if (error) {
                callback(error, authData);
                return;
            }
            var sharedSecret = authData['shared_secret'];
            if (!sharedSecret) {
                callback(new Error("No shared_secret key in auth payload for encrypted channel: " + _this.name), null);
                return;
            }
            _this.key = Object(base64["decode"])(sharedSecret);
            delete authData['shared_secret'];
            callback(null, authData);
        });
    };
    EncryptedChannel.prototype.trigger = function (event, data) {
        throw new UnsupportedFeature('Client events are not currently supported for encrypted channels');
    };
    EncryptedChannel.prototype.handleEvent = function (event) {
        var eventName = event.event;
        var data = event.data;
        if (eventName.indexOf('pusher_internal:') === 0 ||
            eventName.indexOf('pusher:') === 0) {
            _super.prototype.handleEvent.call(this, event);
            return;
        }
        this.handleEncryptedEvent(eventName, data);
    };
    EncryptedChannel.prototype.handleEncryptedEvent = function (event, data) {
        var _this = this;
        if (!this.key) {
            logger.debug('Received encrypted event before key has been retrieved from the authEndpoint');
            return;
        }
        if (!data.ciphertext || !data.nonce) {
            logger.error('Unexpected format for encrypted event, expected object with `ciphertext` and `nonce` fields, got: ' +
                data);
            return;
        }
        var cipherText = Object(base64["decode"])(data.ciphertext);
        if (cipherText.length < this.nacl.secretbox.overheadLength) {
            logger.error("Expected encrypted event ciphertext length to be " + this.nacl.secretbox.overheadLength + ", got: " + cipherText.length);
            return;
        }
        var nonce = Object(base64["decode"])(data.nonce);
        if (nonce.length < this.nacl.secretbox.nonceLength) {
            logger.error("Expected encrypted event nonce length to be " + this.nacl.secretbox.nonceLength + ", got: " + nonce.length);
            return;
        }
        var bytes = this.nacl.secretbox.open(cipherText, nonce, this.key);
        if (bytes === null) {
            logger.debug('Failed to decrypt an event, probably because it was encrypted with a different key. Fetching a new key from the authEndpoint...');
            this.authorize(this.pusher.connection.socket_id, function (error, authData) {
                if (error) {
                    logger.error("Failed to make a request to the authEndpoint: " + authData + ". Unable to fetch new key, so dropping encrypted event");
                    return;
                }
                bytes = _this.nacl.secretbox.open(cipherText, nonce, _this.key);
                if (bytes === null) {
                    logger.error("Failed to decrypt event with new key. Dropping encrypted event");
                    return;
                }
                _this.emit(event, _this.getDataToEmit(bytes));
                return;
            });
            return;
        }
        this.emit(event, this.getDataToEmit(bytes));
    };
    EncryptedChannel.prototype.getDataToEmit = function (bytes) {
        var raw = Object(utf8["decode"])(bytes);
        try {
            return JSON.parse(raw);
        }
        catch (_a) {
            return raw;
        }
    };
    return EncryptedChannel;
}(private_channel));
/* harmony default export */ var encrypted_channel = (encrypted_channel_EncryptedChannel);

// CONCATENATED MODULE: ./src/core/connection/connection_manager.ts
var connection_manager_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var connection_manager_ConnectionManager = (function (_super) {
    connection_manager_extends(ConnectionManager, _super);
    function ConnectionManager(key, options) {
        var _this = _super.call(this) || this;
        _this.state = 'initialized';
        _this.connection = null;
        _this.key = key;
        _this.options = options;
        _this.timeline = _this.options.timeline;
        _this.usingTLS = _this.options.useTLS;
        _this.errorCallbacks = _this.buildErrorCallbacks();
        _this.connectionCallbacks = _this.buildConnectionCallbacks(_this.errorCallbacks);
        _this.handshakeCallbacks = _this.buildHandshakeCallbacks(_this.errorCallbacks);
        var Network = runtime.getNetwork();
        Network.bind('online', function () {
            _this.timeline.info({ netinfo: 'online' });
            if (_this.state === 'connecting' || _this.state === 'unavailable') {
                _this.retryIn(0);
            }
        });
        Network.bind('offline', function () {
            _this.timeline.info({ netinfo: 'offline' });
            if (_this.connection) {
                _this.sendActivityCheck();
            }
        });
        _this.updateStrategy();
        return _this;
    }
    ConnectionManager.prototype.connect = function () {
        if (this.connection || this.runner) {
            return;
        }
        if (!this.strategy.isSupported()) {
            this.updateState('failed');
            return;
        }
        this.updateState('connecting');
        this.startConnecting();
        this.setUnavailableTimer();
    };
    ConnectionManager.prototype.send = function (data) {
        if (this.connection) {
            return this.connection.send(data);
        }
        else {
            return false;
        }
    };
    ConnectionManager.prototype.send_event = function (name, data, channel) {
        if (this.connection) {
            return this.connection.send_event(name, data, channel);
        }
        else {
            return false;
        }
    };
    ConnectionManager.prototype.disconnect = function () {
        this.disconnectInternally();
        this.updateState('disconnected');
    };
    ConnectionManager.prototype.isUsingTLS = function () {
        return this.usingTLS;
    };
    ConnectionManager.prototype.startConnecting = function () {
        var _this = this;
        var callback = function (error, handshake) {
            if (error) {
                _this.runner = _this.strategy.connect(0, callback);
            }
            else {
                if (handshake.action === 'error') {
                    _this.emit('error', {
                        type: 'HandshakeError',
                        error: handshake.error
                    });
                    _this.timeline.error({ handshakeError: handshake.error });
                }
                else {
                    _this.abortConnecting();
                    _this.handshakeCallbacks[handshake.action](handshake);
                }
            }
        };
        this.runner = this.strategy.connect(0, callback);
    };
    ConnectionManager.prototype.abortConnecting = function () {
        if (this.runner) {
            this.runner.abort();
            this.runner = null;
        }
    };
    ConnectionManager.prototype.disconnectInternally = function () {
        this.abortConnecting();
        this.clearRetryTimer();
        this.clearUnavailableTimer();
        if (this.connection) {
            var connection = this.abandonConnection();
            connection.close();
        }
    };
    ConnectionManager.prototype.updateStrategy = function () {
        this.strategy = this.options.getStrategy({
            key: this.key,
            timeline: this.timeline,
            useTLS: this.usingTLS
        });
    };
    ConnectionManager.prototype.retryIn = function (delay) {
        var _this = this;
        this.timeline.info({ action: 'retry', delay: delay });
        if (delay > 0) {
            this.emit('connecting_in', Math.round(delay / 1000));
        }
        this.retryTimer = new OneOffTimer(delay || 0, function () {
            _this.disconnectInternally();
            _this.connect();
        });
    };
    ConnectionManager.prototype.clearRetryTimer = function () {
        if (this.retryTimer) {
            this.retryTimer.ensureAborted();
            this.retryTimer = null;
        }
    };
    ConnectionManager.prototype.setUnavailableTimer = function () {
        var _this = this;
        this.unavailableTimer = new OneOffTimer(this.options.unavailableTimeout, function () {
            _this.updateState('unavailable');
        });
    };
    ConnectionManager.prototype.clearUnavailableTimer = function () {
        if (this.unavailableTimer) {
            this.unavailableTimer.ensureAborted();
        }
    };
    ConnectionManager.prototype.sendActivityCheck = function () {
        var _this = this;
        this.stopActivityCheck();
        this.connection.ping();
        this.activityTimer = new OneOffTimer(this.options.pongTimeout, function () {
            _this.timeline.error({ pong_timed_out: _this.options.pongTimeout });
            _this.retryIn(0);
        });
    };
    ConnectionManager.prototype.resetActivityCheck = function () {
        var _this = this;
        this.stopActivityCheck();
        if (this.connection && !this.connection.handlesActivityChecks()) {
            this.activityTimer = new OneOffTimer(this.activityTimeout, function () {
                _this.sendActivityCheck();
            });
        }
    };
    ConnectionManager.prototype.stopActivityCheck = function () {
        if (this.activityTimer) {
            this.activityTimer.ensureAborted();
        }
    };
    ConnectionManager.prototype.buildConnectionCallbacks = function (errorCallbacks) {
        var _this = this;
        return extend({}, errorCallbacks, {
            message: function (message) {
                _this.resetActivityCheck();
                _this.emit('message', message);
            },
            ping: function () {
                _this.send_event('pusher:pong', {});
            },
            activity: function () {
                _this.resetActivityCheck();
            },
            error: function (error) {
                _this.emit('error', error);
            },
            closed: function () {
                _this.abandonConnection();
                if (_this.shouldRetry()) {
                    _this.retryIn(1000);
                }
            }
        });
    };
    ConnectionManager.prototype.buildHandshakeCallbacks = function (errorCallbacks) {
        var _this = this;
        return extend({}, errorCallbacks, {
            connected: function (handshake) {
                _this.activityTimeout = Math.min(_this.options.activityTimeout, handshake.activityTimeout, handshake.connection.activityTimeout || Infinity);
                _this.clearUnavailableTimer();
                _this.setConnection(handshake.connection);
                _this.socket_id = _this.connection.id;
                _this.updateState('connected', { socket_id: _this.socket_id });
            }
        });
    };
    ConnectionManager.prototype.buildErrorCallbacks = function () {
        var _this = this;
        var withErrorEmitted = function (callback) {
            return function (result) {
                if (result.error) {
                    _this.emit('error', { type: 'WebSocketError', error: result.error });
                }
                callback(result);
            };
        };
        return {
            tls_only: withErrorEmitted(function () {
                _this.usingTLS = true;
                _this.updateStrategy();
                _this.retryIn(0);
            }),
            refused: withErrorEmitted(function () {
                _this.disconnect();
            }),
            backoff: withErrorEmitted(function () {
                _this.retryIn(1000);
            }),
            retry: withErrorEmitted(function () {
                _this.retryIn(0);
            })
        };
    };
    ConnectionManager.prototype.setConnection = function (connection) {
        this.connection = connection;
        for (var event in this.connectionCallbacks) {
            this.connection.bind(event, this.connectionCallbacks[event]);
        }
        this.resetActivityCheck();
    };
    ConnectionManager.prototype.abandonConnection = function () {
        if (!this.connection) {
            return;
        }
        this.stopActivityCheck();
        for (var event in this.connectionCallbacks) {
            this.connection.unbind(event, this.connectionCallbacks[event]);
        }
        var connection = this.connection;
        this.connection = null;
        return connection;
    };
    ConnectionManager.prototype.updateState = function (newState, data) {
        var previousState = this.state;
        this.state = newState;
        if (previousState !== newState) {
            var newStateDescription = newState;
            if (newStateDescription === 'connected') {
                newStateDescription += ' with new socket ID ' + data.socket_id;
            }
            logger.debug('State changed', previousState + ' -> ' + newStateDescription);
            this.timeline.info({ state: newState, params: data });
            this.emit('state_change', { previous: previousState, current: newState });
            this.emit(newState, data);
        }
    };
    ConnectionManager.prototype.shouldRetry = function () {
        return this.state === 'connecting' || this.state === 'connected';
    };
    return ConnectionManager;
}(dispatcher));
/* harmony default export */ var connection_manager = (connection_manager_ConnectionManager);

// CONCATENATED MODULE: ./src/core/channels/channels.ts




var channels_Channels = (function () {
    function Channels() {
        this.channels = {};
    }
    Channels.prototype.add = function (name, pusher) {
        if (!this.channels[name]) {
            this.channels[name] = createChannel(name, pusher);
        }
        return this.channels[name];
    };
    Channels.prototype.all = function () {
        return values(this.channels);
    };
    Channels.prototype.find = function (name) {
        return this.channels[name];
    };
    Channels.prototype.remove = function (name) {
        var channel = this.channels[name];
        delete this.channels[name];
        return channel;
    };
    Channels.prototype.disconnect = function () {
        objectApply(this.channels, function (channel) {
            channel.disconnect();
        });
    };
    return Channels;
}());
/* harmony default export */ var channels = (channels_Channels);
function createChannel(name, pusher) {
    if (name.indexOf('private-encrypted-') === 0) {
        if (pusher.config.nacl) {
            return factory.createEncryptedChannel(name, pusher, pusher.config.nacl);
        }
        var errMsg = 'Tried to subscribe to a private-encrypted- channel but no nacl implementation available';
        var suffix = url_store.buildLogSuffix('encryptedChannelSupport');
        throw new UnsupportedFeature(errMsg + ". " + suffix);
    }
    else if (name.indexOf('private-') === 0) {
        return factory.createPrivateChannel(name, pusher);
    }
    else if (name.indexOf('presence-') === 0) {
        return factory.createPresenceChannel(name, pusher);
    }
    else if (name.indexOf('#') === 0) {
        throw new BadChannelName('Cannot create a channel with name "' + name + '".');
    }
    else {
        return factory.createChannel(name, pusher);
    }
}

// CONCATENATED MODULE: ./src/core/utils/factory.ts









var Factory = {
    createChannels: function () {
        return new channels();
    },
    createConnectionManager: function (key, options) {
        return new connection_manager(key, options);
    },
    createChannel: function (name, pusher) {
        return new channels_channel(name, pusher);
    },
    createPrivateChannel: function (name, pusher) {
        return new private_channel(name, pusher);
    },
    createPresenceChannel: function (name, pusher) {
        return new presence_channel(name, pusher);
    },
    createEncryptedChannel: function (name, pusher, nacl) {
        return new encrypted_channel(name, pusher, nacl);
    },
    createTimelineSender: function (timeline, options) {
        return new timeline_sender(timeline, options);
    },
    createHandshake: function (transport, callback) {
        return new connection_handshake(transport, callback);
    },
    createAssistantToTheTransportManager: function (manager, transport, options) {
        return new assistant_to_the_transport_manager(manager, transport, options);
    }
};
/* harmony default export */ var factory = (Factory);

// CONCATENATED MODULE: ./src/core/transports/transport_manager.ts

var transport_manager_TransportManager = (function () {
    function TransportManager(options) {
        this.options = options || {};
        this.livesLeft = this.options.lives || Infinity;
    }
    TransportManager.prototype.getAssistant = function (transport) {
        return factory.createAssistantToTheTransportManager(this, transport, {
            minPingDelay: this.options.minPingDelay,
            maxPingDelay: this.options.maxPingDelay
        });
    };
    TransportManager.prototype.isAlive = function () {
        return this.livesLeft > 0;
    };
    TransportManager.prototype.reportDeath = function () {
        this.livesLeft -= 1;
    };
    return TransportManager;
}());
/* harmony default export */ var transport_manager = (transport_manager_TransportManager);

// CONCATENATED MODULE: ./src/core/strategies/sequential_strategy.ts



var sequential_strategy_SequentialStrategy = (function () {
    function SequentialStrategy(strategies, options) {
        this.strategies = strategies;
        this.loop = Boolean(options.loop);
        this.failFast = Boolean(options.failFast);
        this.timeout = options.timeout;
        this.timeoutLimit = options.timeoutLimit;
    }
    SequentialStrategy.prototype.isSupported = function () {
        return any(this.strategies, util.method('isSupported'));
    };
    SequentialStrategy.prototype.connect = function (minPriority, callback) {
        var _this = this;
        var strategies = this.strategies;
        var current = 0;
        var timeout = this.timeout;
        var runner = null;
        var tryNextStrategy = function (error, handshake) {
            if (handshake) {
                callback(null, handshake);
            }
            else {
                current = current + 1;
                if (_this.loop) {
                    current = current % strategies.length;
                }
                if (current < strategies.length) {
                    if (timeout) {
                        timeout = timeout * 2;
                        if (_this.timeoutLimit) {
                            timeout = Math.min(timeout, _this.timeoutLimit);
                        }
                    }
                    runner = _this.tryStrategy(strategies[current], minPriority, { timeout: timeout, failFast: _this.failFast }, tryNextStrategy);
                }
                else {
                    callback(true);
                }
            }
        };
        runner = this.tryStrategy(strategies[current], minPriority, { timeout: timeout, failFast: this.failFast }, tryNextStrategy);
        return {
            abort: function () {
                runner.abort();
            },
            forceMinPriority: function (p) {
                minPriority = p;
                if (runner) {
                    runner.forceMinPriority(p);
                }
            }
        };
    };
    SequentialStrategy.prototype.tryStrategy = function (strategy, minPriority, options, callback) {
        var timer = null;
        var runner = null;
        if (options.timeout > 0) {
            timer = new OneOffTimer(options.timeout, function () {
                runner.abort();
                callback(true);
            });
        }
        runner = strategy.connect(minPriority, function (error, handshake) {
            if (error && timer && timer.isRunning() && !options.failFast) {
                return;
            }
            if (timer) {
                timer.ensureAborted();
            }
            callback(error, handshake);
        });
        return {
            abort: function () {
                if (timer) {
                    timer.ensureAborted();
                }
                runner.abort();
            },
            forceMinPriority: function (p) {
                runner.forceMinPriority(p);
            }
        };
    };
    return SequentialStrategy;
}());
/* harmony default export */ var sequential_strategy = (sequential_strategy_SequentialStrategy);

// CONCATENATED MODULE: ./src/core/strategies/best_connected_ever_strategy.ts


var best_connected_ever_strategy_BestConnectedEverStrategy = (function () {
    function BestConnectedEverStrategy(strategies) {
        this.strategies = strategies;
    }
    BestConnectedEverStrategy.prototype.isSupported = function () {
        return any(this.strategies, util.method('isSupported'));
    };
    BestConnectedEverStrategy.prototype.connect = function (minPriority, callback) {
        return connect(this.strategies, minPriority, function (i, runners) {
            return function (error, handshake) {
                runners[i].error = error;
                if (error) {
                    if (allRunnersFailed(runners)) {
                        callback(true);
                    }
                    return;
                }
                apply(runners, function (runner) {
                    runner.forceMinPriority(handshake.transport.priority);
                });
                callback(null, handshake);
            };
        });
    };
    return BestConnectedEverStrategy;
}());
/* harmony default export */ var best_connected_ever_strategy = (best_connected_ever_strategy_BestConnectedEverStrategy);
function connect(strategies, minPriority, callbackBuilder) {
    var runners = map(strategies, function (strategy, i, _, rs) {
        return strategy.connect(minPriority, callbackBuilder(i, rs));
    });
    return {
        abort: function () {
            apply(runners, abortRunner);
        },
        forceMinPriority: function (p) {
            apply(runners, function (runner) {
                runner.forceMinPriority(p);
            });
        }
    };
}
function allRunnersFailed(runners) {
    return collections_all(runners, function (runner) {
        return Boolean(runner.error);
    });
}
function abortRunner(runner) {
    if (!runner.error && !runner.aborted) {
        runner.abort();
        runner.aborted = true;
    }
}

// CONCATENATED MODULE: ./src/core/strategies/cached_strategy.ts




var cached_strategy_CachedStrategy = (function () {
    function CachedStrategy(strategy, transports, options) {
        this.strategy = strategy;
        this.transports = transports;
        this.ttl = options.ttl || 1800 * 1000;
        this.usingTLS = options.useTLS;
        this.timeline = options.timeline;
    }
    CachedStrategy.prototype.isSupported = function () {
        return this.strategy.isSupported();
    };
    CachedStrategy.prototype.connect = function (minPriority, callback) {
        var usingTLS = this.usingTLS;
        var info = fetchTransportCache(usingTLS);
        var strategies = [this.strategy];
        if (info && info.timestamp + this.ttl >= util.now()) {
            var transport = this.transports[info.transport];
            if (transport) {
                this.timeline.info({
                    cached: true,
                    transport: info.transport,
                    latency: info.latency
                });
                strategies.push(new sequential_strategy([transport], {
                    timeout: info.latency * 2 + 1000,
                    failFast: true
                }));
            }
        }
        var startTimestamp = util.now();
        var runner = strategies
            .pop()
            .connect(minPriority, function cb(error, handshake) {
            if (error) {
                flushTransportCache(usingTLS);
                if (strategies.length > 0) {
                    startTimestamp = util.now();
                    runner = strategies.pop().connect(minPriority, cb);
                }
                else {
                    callback(error);
                }
            }
            else {
                storeTransportCache(usingTLS, handshake.transport.name, util.now() - startTimestamp);
                callback(null, handshake);
            }
        });
        return {
            abort: function () {
                runner.abort();
            },
            forceMinPriority: function (p) {
                minPriority = p;
                if (runner) {
                    runner.forceMinPriority(p);
                }
            }
        };
    };
    return CachedStrategy;
}());
/* harmony default export */ var cached_strategy = (cached_strategy_CachedStrategy);
function getTransportCacheKey(usingTLS) {
    return 'pusherTransport' + (usingTLS ? 'TLS' : 'NonTLS');
}
function fetchTransportCache(usingTLS) {
    var storage = runtime.getLocalStorage();
    if (storage) {
        try {
            var serializedCache = storage[getTransportCacheKey(usingTLS)];
            if (serializedCache) {
                return JSON.parse(serializedCache);
            }
        }
        catch (e) {
            flushTransportCache(usingTLS);
        }
    }
    return null;
}
function storeTransportCache(usingTLS, transport, latency) {
    var storage = runtime.getLocalStorage();
    if (storage) {
        try {
            storage[getTransportCacheKey(usingTLS)] = safeJSONStringify({
                timestamp: util.now(),
                transport: transport,
                latency: latency
            });
        }
        catch (e) {
        }
    }
}
function flushTransportCache(usingTLS) {
    var storage = runtime.getLocalStorage();
    if (storage) {
        try {
            delete storage[getTransportCacheKey(usingTLS)];
        }
        catch (e) {
        }
    }
}

// CONCATENATED MODULE: ./src/core/strategies/delayed_strategy.ts

var delayed_strategy_DelayedStrategy = (function () {
    function DelayedStrategy(strategy, _a) {
        var number = _a.delay;
        this.strategy = strategy;
        this.options = { delay: number };
    }
    DelayedStrategy.prototype.isSupported = function () {
        return this.strategy.isSupported();
    };
    DelayedStrategy.prototype.connect = function (minPriority, callback) {
        var strategy = this.strategy;
        var runner;
        var timer = new OneOffTimer(this.options.delay, function () {
            runner = strategy.connect(minPriority, callback);
        });
        return {
            abort: function () {
                timer.ensureAborted();
                if (runner) {
                    runner.abort();
                }
            },
            forceMinPriority: function (p) {
                minPriority = p;
                if (runner) {
                    runner.forceMinPriority(p);
                }
            }
        };
    };
    return DelayedStrategy;
}());
/* harmony default export */ var delayed_strategy = (delayed_strategy_DelayedStrategy);

// CONCATENATED MODULE: ./src/core/strategies/if_strategy.ts
var IfStrategy = (function () {
    function IfStrategy(test, trueBranch, falseBranch) {
        this.test = test;
        this.trueBranch = trueBranch;
        this.falseBranch = falseBranch;
    }
    IfStrategy.prototype.isSupported = function () {
        var branch = this.test() ? this.trueBranch : this.falseBranch;
        return branch.isSupported();
    };
    IfStrategy.prototype.connect = function (minPriority, callback) {
        var branch = this.test() ? this.trueBranch : this.falseBranch;
        return branch.connect(minPriority, callback);
    };
    return IfStrategy;
}());
/* harmony default export */ var if_strategy = (IfStrategy);

// CONCATENATED MODULE: ./src/core/strategies/first_connected_strategy.ts
var FirstConnectedStrategy = (function () {
    function FirstConnectedStrategy(strategy) {
        this.strategy = strategy;
    }
    FirstConnectedStrategy.prototype.isSupported = function () {
        return this.strategy.isSupported();
    };
    FirstConnectedStrategy.prototype.connect = function (minPriority, callback) {
        var runner = this.strategy.connect(minPriority, function (error, handshake) {
            if (handshake) {
                runner.abort();
            }
            callback(error, handshake);
        });
        return runner;
    };
    return FirstConnectedStrategy;
}());
/* harmony default export */ var first_connected_strategy = (FirstConnectedStrategy);

// CONCATENATED MODULE: ./src/runtimes/web/default_strategy.ts







function testSupportsStrategy(strategy) {
    return function () {
        return strategy.isSupported();
    };
}
var getDefaultStrategy = function (config, baseOptions, defineTransport) {
    var definedTransports = {};
    function defineTransportStrategy(name, type, priority, options, manager) {
        var transport = defineTransport(config, name, type, priority, options, manager);
        definedTransports[name] = transport;
        return transport;
    }
    var ws_options = Object.assign({}, baseOptions, {
        hostNonTLS: config.wsHost + ':' + config.wsPort,
        hostTLS: config.wsHost + ':' + config.wssPort,
        httpPath: config.wsPath
    });
    var wss_options = Object.assign({}, ws_options, {
        useTLS: true
    });
    var sockjs_options = Object.assign({}, baseOptions, {
        hostNonTLS: config.httpHost + ':' + config.httpPort,
        hostTLS: config.httpHost + ':' + config.httpsPort,
        httpPath: config.httpPath
    });
    var timeouts = {
        loop: true,
        timeout: 15000,
        timeoutLimit: 60000
    };
    var ws_manager = new transport_manager({
        lives: 2,
        minPingDelay: 10000,
        maxPingDelay: config.activityTimeout
    });
    var streaming_manager = new transport_manager({
        lives: 2,
        minPingDelay: 10000,
        maxPingDelay: config.activityTimeout
    });
    var ws_transport = defineTransportStrategy('ws', 'ws', 3, ws_options, ws_manager);
    var wss_transport = defineTransportStrategy('wss', 'ws', 3, wss_options, ws_manager);
    var sockjs_transport = defineTransportStrategy('sockjs', 'sockjs', 1, sockjs_options);
    var xhr_streaming_transport = defineTransportStrategy('xhr_streaming', 'xhr_streaming', 1, sockjs_options, streaming_manager);
    var xdr_streaming_transport = defineTransportStrategy('xdr_streaming', 'xdr_streaming', 1, sockjs_options, streaming_manager);
    var xhr_polling_transport = defineTransportStrategy('xhr_polling', 'xhr_polling', 1, sockjs_options);
    var xdr_polling_transport = defineTransportStrategy('xdr_polling', 'xdr_polling', 1, sockjs_options);
    var ws_loop = new sequential_strategy([ws_transport], timeouts);
    var wss_loop = new sequential_strategy([wss_transport], timeouts);
    var sockjs_loop = new sequential_strategy([sockjs_transport], timeouts);
    var streaming_loop = new sequential_strategy([
        new if_strategy(testSupportsStrategy(xhr_streaming_transport), xhr_streaming_transport, xdr_streaming_transport)
    ], timeouts);
    var polling_loop = new sequential_strategy([
        new if_strategy(testSupportsStrategy(xhr_polling_transport), xhr_polling_transport, xdr_polling_transport)
    ], timeouts);
    var http_loop = new sequential_strategy([
        new if_strategy(testSupportsStrategy(streaming_loop), new best_connected_ever_strategy([
            streaming_loop,
            new delayed_strategy(polling_loop, { delay: 4000 })
        ]), polling_loop)
    ], timeouts);
    var http_fallback_loop = new if_strategy(testSupportsStrategy(http_loop), http_loop, sockjs_loop);
    var wsStrategy;
    if (baseOptions.useTLS) {
        wsStrategy = new best_connected_ever_strategy([
            ws_loop,
            new delayed_strategy(http_fallback_loop, { delay: 2000 })
        ]);
    }
    else {
        wsStrategy = new best_connected_ever_strategy([
            ws_loop,
            new delayed_strategy(wss_loop, { delay: 2000 }),
            new delayed_strategy(http_fallback_loop, { delay: 5000 })
        ]);
    }
    return new cached_strategy(new first_connected_strategy(new if_strategy(testSupportsStrategy(ws_transport), wsStrategy, http_fallback_loop)), definedTransports, {
        ttl: 1800000,
        timeline: baseOptions.timeline,
        useTLS: baseOptions.useTLS
    });
};
/* harmony default export */ var default_strategy = (getDefaultStrategy);

// CONCATENATED MODULE: ./src/runtimes/web/transports/transport_connection_initializer.ts

/* harmony default export */ var transport_connection_initializer = (function () {
    var self = this;
    self.timeline.info(self.buildTimelineMessage({
        transport: self.name + (self.options.useTLS ? 's' : '')
    }));
    if (self.hooks.isInitialized()) {
        self.changeState('initialized');
    }
    else if (self.hooks.file) {
        self.changeState('initializing');
        Dependencies.load(self.hooks.file, { useTLS: self.options.useTLS }, function (error, callback) {
            if (self.hooks.isInitialized()) {
                self.changeState('initialized');
                callback(true);
            }
            else {
                if (error) {
                    self.onError(error);
                }
                self.onClose();
                callback(false);
            }
        });
    }
    else {
        self.onClose();
    }
});

// CONCATENATED MODULE: ./src/runtimes/web/http/http_xdomain_request.ts

var http_xdomain_request_hooks = {
    getRequest: function (socket) {
        var xdr = new window.XDomainRequest();
        xdr.ontimeout = function () {
            socket.emit('error', new RequestTimedOut());
            socket.close();
        };
        xdr.onerror = function (e) {
            socket.emit('error', e);
            socket.close();
        };
        xdr.onprogress = function () {
            if (xdr.responseText && xdr.responseText.length > 0) {
                socket.onChunk(200, xdr.responseText);
            }
        };
        xdr.onload = function () {
            if (xdr.responseText && xdr.responseText.length > 0) {
                socket.onChunk(200, xdr.responseText);
            }
            socket.emit('finished', 200);
            socket.close();
        };
        return xdr;
    },
    abortRequest: function (xdr) {
        xdr.ontimeout = xdr.onerror = xdr.onprogress = xdr.onload = null;
        xdr.abort();
    }
};
/* harmony default export */ var http_xdomain_request = (http_xdomain_request_hooks);

// CONCATENATED MODULE: ./src/core/http/http_request.ts
var http_request_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var MAX_BUFFER_LENGTH = 256 * 1024;
var http_request_HTTPRequest = (function (_super) {
    http_request_extends(HTTPRequest, _super);
    function HTTPRequest(hooks, method, url) {
        var _this = _super.call(this) || this;
        _this.hooks = hooks;
        _this.method = method;
        _this.url = url;
        return _this;
    }
    HTTPRequest.prototype.start = function (payload) {
        var _this = this;
        this.position = 0;
        this.xhr = this.hooks.getRequest(this);
        this.unloader = function () {
            _this.close();
        };
        runtime.addUnloadListener(this.unloader);
        this.xhr.open(this.method, this.url, true);
        if (this.xhr.setRequestHeader) {
            this.xhr.setRequestHeader('Content-Type', 'application/json');
        }
        this.xhr.send(payload);
    };
    HTTPRequest.prototype.close = function () {
        if (this.unloader) {
            runtime.removeUnloadListener(this.unloader);
            this.unloader = null;
        }
        if (this.xhr) {
            this.hooks.abortRequest(this.xhr);
            this.xhr = null;
        }
    };
    HTTPRequest.prototype.onChunk = function (status, data) {
        while (true) {
            var chunk = this.advanceBuffer(data);
            if (chunk) {
                this.emit('chunk', { status: status, data: chunk });
            }
            else {
                break;
            }
        }
        if (this.isBufferTooLong(data)) {
            this.emit('buffer_too_long');
        }
    };
    HTTPRequest.prototype.advanceBuffer = function (buffer) {
        var unreadData = buffer.slice(this.position);
        var endOfLinePosition = unreadData.indexOf('\n');
        if (endOfLinePosition !== -1) {
            this.position += endOfLinePosition + 1;
            return unreadData.slice(0, endOfLinePosition);
        }
        else {
            return null;
        }
    };
    HTTPRequest.prototype.isBufferTooLong = function (buffer) {
        return this.position === buffer.length && buffer.length > MAX_BUFFER_LENGTH;
    };
    return HTTPRequest;
}(dispatcher));
/* harmony default export */ var http_request = (http_request_HTTPRequest);

// CONCATENATED MODULE: ./src/core/http/state.ts
var State;
(function (State) {
    State[State["CONNECTING"] = 0] = "CONNECTING";
    State[State["OPEN"] = 1] = "OPEN";
    State[State["CLOSED"] = 3] = "CLOSED";
})(State || (State = {}));
/* harmony default export */ var state = (State);

// CONCATENATED MODULE: ./src/core/http/http_socket.ts



var autoIncrement = 1;
var http_socket_HTTPSocket = (function () {
    function HTTPSocket(hooks, url) {
        this.hooks = hooks;
        this.session = randomNumber(1000) + '/' + randomString(8);
        this.location = getLocation(url);
        this.readyState = state.CONNECTING;
        this.openStream();
    }
    HTTPSocket.prototype.send = function (payload) {
        return this.sendRaw(JSON.stringify([payload]));
    };
    HTTPSocket.prototype.ping = function () {
        this.hooks.sendHeartbeat(this);
    };
    HTTPSocket.prototype.close = function (code, reason) {
        this.onClose(code, reason, true);
    };
    HTTPSocket.prototype.sendRaw = function (payload) {
        if (this.readyState === state.OPEN) {
            try {
                runtime.createSocketRequest('POST', getUniqueURL(getSendURL(this.location, this.session))).start(payload);
                return true;
            }
            catch (e) {
                return false;
            }
        }
        else {
            return false;
        }
    };
    HTTPSocket.prototype.reconnect = function () {
        this.closeStream();
        this.openStream();
    };
    HTTPSocket.prototype.onClose = function (code, reason, wasClean) {
        this.closeStream();
        this.readyState = state.CLOSED;
        if (this.onclose) {
            this.onclose({
                code: code,
                reason: reason,
                wasClean: wasClean
            });
        }
    };
    HTTPSocket.prototype.onChunk = function (chunk) {
        if (chunk.status !== 200) {
            return;
        }
        if (this.readyState === state.OPEN) {
            this.onActivity();
        }
        var payload;
        var type = chunk.data.slice(0, 1);
        switch (type) {
            case 'o':
                payload = JSON.parse(chunk.data.slice(1) || '{}');
                this.onOpen(payload);
                break;
            case 'a':
                payload = JSON.parse(chunk.data.slice(1) || '[]');
                for (var i = 0; i < payload.length; i++) {
                    this.onEvent(payload[i]);
                }
                break;
            case 'm':
                payload = JSON.parse(chunk.data.slice(1) || 'null');
                this.onEvent(payload);
                break;
            case 'h':
                this.hooks.onHeartbeat(this);
                break;
            case 'c':
                payload = JSON.parse(chunk.data.slice(1) || '[]');
                this.onClose(payload[0], payload[1], true);
                break;
        }
    };
    HTTPSocket.prototype.onOpen = function (options) {
        if (this.readyState === state.CONNECTING) {
            if (options && options.hostname) {
                this.location.base = replaceHost(this.location.base, options.hostname);
            }
            this.readyState = state.OPEN;
            if (this.onopen) {
                this.onopen();
            }
        }
        else {
            this.onClose(1006, 'Server lost session', true);
        }
    };
    HTTPSocket.prototype.onEvent = function (event) {
        if (this.readyState === state.OPEN && this.onmessage) {
            this.onmessage({ data: event });
        }
    };
    HTTPSocket.prototype.onActivity = function () {
        if (this.onactivity) {
            this.onactivity();
        }
    };
    HTTPSocket.prototype.onError = function (error) {
        if (this.onerror) {
            this.onerror(error);
        }
    };
    HTTPSocket.prototype.openStream = function () {
        var _this = this;
        this.stream = runtime.createSocketRequest('POST', getUniqueURL(this.hooks.getReceiveURL(this.location, this.session)));
        this.stream.bind('chunk', function (chunk) {
            _this.onChunk(chunk);
        });
        this.stream.bind('finished', function (status) {
            _this.hooks.onFinished(_this, status);
        });
        this.stream.bind('buffer_too_long', function () {
            _this.reconnect();
        });
        try {
            this.stream.start();
        }
        catch (error) {
            util.defer(function () {
                _this.onError(error);
                _this.onClose(1006, 'Could not start streaming', false);
            });
        }
    };
    HTTPSocket.prototype.closeStream = function () {
        if (this.stream) {
            this.stream.unbind_all();
            this.stream.close();
            this.stream = null;
        }
    };
    return HTTPSocket;
}());
function getLocation(url) {
    var parts = /([^\?]*)\/*(\??.*)/.exec(url);
    return {
        base: parts[1],
        queryString: parts[2]
    };
}
function getSendURL(url, session) {
    return url.base + '/' + session + '/xhr_send';
}
function getUniqueURL(url) {
    var separator = url.indexOf('?') === -1 ? '?' : '&';
    return url + separator + 't=' + +new Date() + '&n=' + autoIncrement++;
}
function replaceHost(url, hostname) {
    var urlParts = /(https?:\/\/)([^\/:]+)((\/|:)?.*)/.exec(url);
    return urlParts[1] + hostname + urlParts[3];
}
function randomNumber(max) {
    return runtime.randomInt(max);
}
function randomString(length) {
    var result = [];
    for (var i = 0; i < length; i++) {
        result.push(randomNumber(32).toString(32));
    }
    return result.join('');
}
/* harmony default export */ var http_socket = (http_socket_HTTPSocket);

// CONCATENATED MODULE: ./src/core/http/http_streaming_socket.ts
var http_streaming_socket_hooks = {
    getReceiveURL: function (url, session) {
        return url.base + '/' + session + '/xhr_streaming' + url.queryString;
    },
    onHeartbeat: function (socket) {
        socket.sendRaw('[]');
    },
    sendHeartbeat: function (socket) {
        socket.sendRaw('[]');
    },
    onFinished: function (socket, status) {
        socket.onClose(1006, 'Connection interrupted (' + status + ')', false);
    }
};
/* harmony default export */ var http_streaming_socket = (http_streaming_socket_hooks);

// CONCATENATED MODULE: ./src/core/http/http_polling_socket.ts
var http_polling_socket_hooks = {
    getReceiveURL: function (url, session) {
        return url.base + '/' + session + '/xhr' + url.queryString;
    },
    onHeartbeat: function () {
    },
    sendHeartbeat: function (socket) {
        socket.sendRaw('[]');
    },
    onFinished: function (socket, status) {
        if (status === 200) {
            socket.reconnect();
        }
        else {
            socket.onClose(1006, 'Connection interrupted (' + status + ')', false);
        }
    }
};
/* harmony default export */ var http_polling_socket = (http_polling_socket_hooks);

// CONCATENATED MODULE: ./src/runtimes/isomorphic/http/http_xhr_request.ts

var http_xhr_request_hooks = {
    getRequest: function (socket) {
        var Constructor = runtime.getXHRAPI();
        var xhr = new Constructor();
        xhr.onreadystatechange = xhr.onprogress = function () {
            switch (xhr.readyState) {
                case 3:
                    if (xhr.responseText && xhr.responseText.length > 0) {
                        socket.onChunk(xhr.status, xhr.responseText);
                    }
                    break;
                case 4:
                    if (xhr.responseText && xhr.responseText.length > 0) {
                        socket.onChunk(xhr.status, xhr.responseText);
                    }
                    socket.emit('finished', xhr.status);
                    socket.close();
                    break;
            }
        };
        return xhr;
    },
    abortRequest: function (xhr) {
        xhr.onreadystatechange = null;
        xhr.abort();
    }
};
/* harmony default export */ var http_xhr_request = (http_xhr_request_hooks);

// CONCATENATED MODULE: ./src/runtimes/isomorphic/http/http.ts





var HTTP = {
    createStreamingSocket: function (url) {
        return this.createSocket(http_streaming_socket, url);
    },
    createPollingSocket: function (url) {
        return this.createSocket(http_polling_socket, url);
    },
    createSocket: function (hooks, url) {
        return new http_socket(hooks, url);
    },
    createXHR: function (method, url) {
        return this.createRequest(http_xhr_request, method, url);
    },
    createRequest: function (hooks, method, url) {
        return new http_request(hooks, method, url);
    }
};
/* harmony default export */ var http_http = (HTTP);

// CONCATENATED MODULE: ./src/runtimes/web/http/http.ts


http_http.createXDR = function (method, url) {
    return this.createRequest(http_xdomain_request, method, url);
};
/* harmony default export */ var web_http_http = (http_http);

// CONCATENATED MODULE: ./src/runtimes/web/runtime.ts












var Runtime = {
    nextAuthCallbackID: 1,
    auth_callbacks: {},
    ScriptReceivers: ScriptReceivers,
    DependenciesReceivers: DependenciesReceivers,
    getDefaultStrategy: default_strategy,
    Transports: transports_transports,
    transportConnectionInitializer: transport_connection_initializer,
    HTTPFactory: web_http_http,
    TimelineTransport: jsonp_timeline,
    getXHRAPI: function () {
        return window.XMLHttpRequest;
    },
    getWebSocketAPI: function () {
        return window.WebSocket || window.MozWebSocket;
    },
    setup: function (PusherClass) {
        var _this = this;
        window.Pusher = PusherClass;
        var initializeOnDocumentBody = function () {
            _this.onDocumentBody(PusherClass.ready);
        };
        if (!window.JSON) {
            Dependencies.load('json2', {}, initializeOnDocumentBody);
        }
        else {
            initializeOnDocumentBody();
        }
    },
    getDocument: function () {
        return document;
    },
    getProtocol: function () {
        return this.getDocument().location.protocol;
    },
    getAuthorizers: function () {
        return { ajax: xhr_auth, jsonp: jsonp_auth };
    },
    onDocumentBody: function (callback) {
        var _this = this;
        if (document.body) {
            callback();
        }
        else {
            setTimeout(function () {
                _this.onDocumentBody(callback);
            }, 0);
        }
    },
    createJSONPRequest: function (url, data) {
        return new jsonp_request(url, data);
    },
    createScriptRequest: function (src) {
        return new script_request(src);
    },
    getLocalStorage: function () {
        try {
            return window.localStorage;
        }
        catch (e) {
            return undefined;
        }
    },
    createXHR: function () {
        if (this.getXHRAPI()) {
            return this.createXMLHttpRequest();
        }
        else {
            return this.createMicrosoftXHR();
        }
    },
    createXMLHttpRequest: function () {
        var Constructor = this.getXHRAPI();
        return new Constructor();
    },
    createMicrosoftXHR: function () {
        return new ActiveXObject('Microsoft.XMLHTTP');
    },
    getNetwork: function () {
        return net_info_Network;
    },
    createWebSocket: function (url) {
        var Constructor = this.getWebSocketAPI();
        return new Constructor(url);
    },
    createSocketRequest: function (method, url) {
        if (this.isXHRSupported()) {
            return this.HTTPFactory.createXHR(method, url);
        }
        else if (this.isXDRSupported(url.indexOf('https:') === 0)) {
            return this.HTTPFactory.createXDR(method, url);
        }
        else {
            throw 'Cross-origin HTTP requests are not supported';
        }
    },
    isXHRSupported: function () {
        var Constructor = this.getXHRAPI();
        return (Boolean(Constructor) && new Constructor().withCredentials !== undefined);
    },
    isXDRSupported: function (useTLS) {
        var protocol = useTLS ? 'https:' : 'http:';
        var documentProtocol = this.getProtocol();
        return (Boolean(window['XDomainRequest']) && documentProtocol === protocol);
    },
    addUnloadListener: function (listener) {
        if (window.addEventListener !== undefined) {
            window.addEventListener('unload', listener, false);
        }
        else if (window.attachEvent !== undefined) {
            window.attachEvent('onunload', listener);
        }
    },
    removeUnloadListener: function (listener) {
        if (window.addEventListener !== undefined) {
            window.removeEventListener('unload', listener, false);
        }
        else if (window.detachEvent !== undefined) {
            window.detachEvent('onunload', listener);
        }
    },
    randomInt: function (max) {
        var random = function () {
            var crypto = window.crypto || window['msCrypto'];
            var random = crypto.getRandomValues(new Uint32Array(1))[0];
            return random / Math.pow(2, 32);
        };
        return Math.floor(random() * max);
    }
};
/* harmony default export */ var runtime = (Runtime);

// CONCATENATED MODULE: ./src/core/timeline/level.ts
var TimelineLevel;
(function (TimelineLevel) {
    TimelineLevel[TimelineLevel["ERROR"] = 3] = "ERROR";
    TimelineLevel[TimelineLevel["INFO"] = 6] = "INFO";
    TimelineLevel[TimelineLevel["DEBUG"] = 7] = "DEBUG";
})(TimelineLevel || (TimelineLevel = {}));
/* harmony default export */ var timeline_level = (TimelineLevel);

// CONCATENATED MODULE: ./src/core/timeline/timeline.ts



var timeline_Timeline = (function () {
    function Timeline(key, session, options) {
        this.key = key;
        this.session = session;
        this.events = [];
        this.options = options || {};
        this.sent = 0;
        this.uniqueID = 0;
    }
    Timeline.prototype.log = function (level, event) {
        if (level <= this.options.level) {
            this.events.push(extend({}, event, { timestamp: util.now() }));
            if (this.options.limit && this.events.length > this.options.limit) {
                this.events.shift();
            }
        }
    };
    Timeline.prototype.error = function (event) {
        this.log(timeline_level.ERROR, event);
    };
    Timeline.prototype.info = function (event) {
        this.log(timeline_level.INFO, event);
    };
    Timeline.prototype.debug = function (event) {
        this.log(timeline_level.DEBUG, event);
    };
    Timeline.prototype.isEmpty = function () {
        return this.events.length === 0;
    };
    Timeline.prototype.send = function (sendfn, callback) {
        var _this = this;
        var data = extend({
            session: this.session,
            bundle: this.sent + 1,
            key: this.key,
            lib: 'js',
            version: this.options.version,
            cluster: this.options.cluster,
            features: this.options.features,
            timeline: this.events
        }, this.options.params);
        this.events = [];
        sendfn(data, function (error, result) {
            if (!error) {
                _this.sent++;
            }
            if (callback) {
                callback(error, result);
            }
        });
        return true;
    };
    Timeline.prototype.generateUniqueID = function () {
        this.uniqueID++;
        return this.uniqueID;
    };
    return Timeline;
}());
/* harmony default export */ var timeline_timeline = (timeline_Timeline);

// CONCATENATED MODULE: ./src/core/strategies/transport_strategy.ts




var transport_strategy_TransportStrategy = (function () {
    function TransportStrategy(name, priority, transport, options) {
        this.name = name;
        this.priority = priority;
        this.transport = transport;
        this.options = options || {};
    }
    TransportStrategy.prototype.isSupported = function () {
        return this.transport.isSupported({
            useTLS: this.options.useTLS
        });
    };
    TransportStrategy.prototype.connect = function (minPriority, callback) {
        var _this = this;
        if (!this.isSupported()) {
            return failAttempt(new UnsupportedStrategy(), callback);
        }
        else if (this.priority < minPriority) {
            return failAttempt(new TransportPriorityTooLow(), callback);
        }
        var connected = false;
        var transport = this.transport.createConnection(this.name, this.priority, this.options.key, this.options);
        var handshake = null;
        var onInitialized = function () {
            transport.unbind('initialized', onInitialized);
            transport.connect();
        };
        var onOpen = function () {
            handshake = factory.createHandshake(transport, function (result) {
                connected = true;
                unbindListeners();
                callback(null, result);
            });
        };
        var onError = function (error) {
            unbindListeners();
            callback(error);
        };
        var onClosed = function () {
            unbindListeners();
            var serializedTransport;
            serializedTransport = safeJSONStringify(transport);
            callback(new TransportClosed(serializedTransport));
        };
        var unbindListeners = function () {
            transport.unbind('initialized', onInitialized);
            transport.unbind('open', onOpen);
            transport.unbind('error', onError);
            transport.unbind('closed', onClosed);
        };
        transport.bind('initialized', onInitialized);
        transport.bind('open', onOpen);
        transport.bind('error', onError);
        transport.bind('closed', onClosed);
        transport.initialize();
        return {
            abort: function () {
                if (connected) {
                    return;
                }
                unbindListeners();
                if (handshake) {
                    handshake.close();
                }
                else {
                    transport.close();
                }
            },
            forceMinPriority: function (p) {
                if (connected) {
                    return;
                }
                if (_this.priority < p) {
                    if (handshake) {
                        handshake.close();
                    }
                    else {
                        transport.close();
                    }
                }
            }
        };
    };
    return TransportStrategy;
}());
/* harmony default export */ var transport_strategy = (transport_strategy_TransportStrategy);
function failAttempt(error, callback) {
    util.defer(function () {
        callback(error);
    });
    return {
        abort: function () { },
        forceMinPriority: function () { }
    };
}

// CONCATENATED MODULE: ./src/core/strategies/strategy_builder.ts





var strategy_builder_Transports = runtime.Transports;
var strategy_builder_defineTransport = function (config, name, type, priority, options, manager) {
    var transportClass = strategy_builder_Transports[type];
    if (!transportClass) {
        throw new UnsupportedTransport(type);
    }
    var enabled = (!config.enabledTransports ||
        arrayIndexOf(config.enabledTransports, name) !== -1) &&
        (!config.disabledTransports ||
            arrayIndexOf(config.disabledTransports, name) === -1);
    var transport;
    if (enabled) {
        options = Object.assign({ ignoreNullOrigin: config.ignoreNullOrigin }, options);
        transport = new transport_strategy(name, priority, manager ? manager.getAssistant(transportClass) : transportClass, options);
    }
    else {
        transport = strategy_builder_UnsupportedStrategy;
    }
    return transport;
};
var strategy_builder_UnsupportedStrategy = {
    isSupported: function () {
        return false;
    },
    connect: function (_, callback) {
        var deferred = util.defer(function () {
            callback(new UnsupportedStrategy());
        });
        return {
            abort: function () {
                deferred.ensureAborted();
            },
            forceMinPriority: function () { }
        };
    }
};

// CONCATENATED MODULE: ./src/core/auth/user_authenticator.ts


var composeChannelQuery = function (params, authOptions) {
    var query = 'socket_id=' + encodeURIComponent(params.socketId);
    for (var key in authOptions.params) {
        query +=
            '&' +
                encodeURIComponent(key) +
                '=' +
                encodeURIComponent(authOptions.params[key]);
    }
    if (authOptions.paramsProvider != null) {
        var dynamicParams = authOptions.paramsProvider();
        for (var key in dynamicParams) {
            query +=
                '&' +
                    encodeURIComponent(key) +
                    '=' +
                    encodeURIComponent(dynamicParams[key]);
        }
    }
    return query;
};
var UserAuthenticator = function (authOptions) {
    if (typeof runtime.getAuthorizers()[authOptions.transport] === 'undefined') {
        throw "'" + authOptions.transport + "' is not a recognized auth transport";
    }
    return function (params, callback) {
        var query = composeChannelQuery(params, authOptions);
        runtime.getAuthorizers()[authOptions.transport](runtime, query, authOptions, AuthRequestType.UserAuthentication, callback);
    };
};
/* harmony default export */ var user_authenticator = (UserAuthenticator);

// CONCATENATED MODULE: ./src/core/auth/channel_authorizer.ts


var channel_authorizer_composeChannelQuery = function (params, authOptions) {
    var query = 'socket_id=' + encodeURIComponent(params.socketId);
    query += '&channel_name=' + encodeURIComponent(params.channelName);
    for (var key in authOptions.params) {
        query +=
            '&' +
                encodeURIComponent(key) +
                '=' +
                encodeURIComponent(authOptions.params[key]);
    }
    if (authOptions.paramsProvider != null) {
        var dynamicParams = authOptions.paramsProvider();
        for (var key in dynamicParams) {
            query +=
                '&' +
                    encodeURIComponent(key) +
                    '=' +
                    encodeURIComponent(dynamicParams[key]);
        }
    }
    return query;
};
var ChannelAuthorizer = function (authOptions) {
    if (typeof runtime.getAuthorizers()[authOptions.transport] === 'undefined') {
        throw "'" + authOptions.transport + "' is not a recognized auth transport";
    }
    return function (params, callback) {
        var query = channel_authorizer_composeChannelQuery(params, authOptions);
        runtime.getAuthorizers()[authOptions.transport](runtime, query, authOptions, AuthRequestType.ChannelAuthorization, callback);
    };
};
/* harmony default export */ var channel_authorizer = (ChannelAuthorizer);

// CONCATENATED MODULE: ./src/core/auth/deprecated_channel_authorizer.ts
var ChannelAuthorizerProxy = function (pusher, authOptions, channelAuthorizerGenerator) {
    var deprecatedAuthorizerOptions = {
        authTransport: authOptions.transport,
        authEndpoint: authOptions.endpoint,
        auth: {
            params: authOptions.params,
            headers: authOptions.headers
        }
    };
    return function (params, callback) {
        var channel = pusher.channel(params.channelName);
        var channelAuthorizer = channelAuthorizerGenerator(channel, deprecatedAuthorizerOptions);
        channelAuthorizer.authorize(params.socketId, callback);
    };
};

// CONCATENATED MODULE: ./src/core/config.ts
var __assign = ( false) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};





function getConfig(opts, pusher) {
    var config = {
        activityTimeout: opts.activityTimeout || defaults.activityTimeout,
        cluster: opts.cluster || defaults.cluster,
        httpPath: opts.httpPath || defaults.httpPath,
        httpPort: opts.httpPort || defaults.httpPort,
        httpsPort: opts.httpsPort || defaults.httpsPort,
        pongTimeout: opts.pongTimeout || defaults.pongTimeout,
        statsHost: opts.statsHost || defaults.stats_host,
        unavailableTimeout: opts.unavailableTimeout || defaults.unavailableTimeout,
        wsPath: opts.wsPath || defaults.wsPath,
        wsPort: opts.wsPort || defaults.wsPort,
        wssPort: opts.wssPort || defaults.wssPort,
        enableStats: getEnableStatsConfig(opts),
        httpHost: getHttpHost(opts),
        useTLS: shouldUseTLS(opts),
        wsHost: getWebsocketHost(opts),
        userAuthenticator: buildUserAuthenticator(opts),
        channelAuthorizer: buildChannelAuthorizer(opts, pusher)
    };
    if ('disabledTransports' in opts)
        config.disabledTransports = opts.disabledTransports;
    if ('enabledTransports' in opts)
        config.enabledTransports = opts.enabledTransports;
    if ('ignoreNullOrigin' in opts)
        config.ignoreNullOrigin = opts.ignoreNullOrigin;
    if ('timelineParams' in opts)
        config.timelineParams = opts.timelineParams;
    if ('nacl' in opts) {
        config.nacl = opts.nacl;
    }
    return config;
}
function getHttpHost(opts) {
    if (opts.httpHost) {
        return opts.httpHost;
    }
    if (opts.cluster) {
        return "sockjs-" + opts.cluster + ".pusher.com";
    }
    return defaults.httpHost;
}
function getWebsocketHost(opts) {
    if (opts.wsHost) {
        return opts.wsHost;
    }
    if (opts.cluster) {
        return getWebsocketHostFromCluster(opts.cluster);
    }
    return getWebsocketHostFromCluster(defaults.cluster);
}
function getWebsocketHostFromCluster(cluster) {
    return "ws-" + cluster + ".pusher.com";
}
function shouldUseTLS(opts) {
    if (runtime.getProtocol() === 'https:') {
        return true;
    }
    else if (opts.forceTLS === false) {
        return false;
    }
    return true;
}
function getEnableStatsConfig(opts) {
    if ('enableStats' in opts) {
        return opts.enableStats;
    }
    if ('disableStats' in opts) {
        return !opts.disableStats;
    }
    return false;
}
function buildUserAuthenticator(opts) {
    var userAuthentication = __assign(__assign({}, defaults.userAuthentication), opts.userAuthentication);
    if ('customHandler' in userAuthentication &&
        userAuthentication['customHandler'] != null) {
        return userAuthentication['customHandler'];
    }
    return user_authenticator(userAuthentication);
}
function buildChannelAuth(opts, pusher) {
    var channelAuthorization;
    if ('channelAuthorization' in opts) {
        channelAuthorization = __assign(__assign({}, defaults.channelAuthorization), opts.channelAuthorization);
    }
    else {
        channelAuthorization = {
            transport: opts.authTransport || defaults.authTransport,
            endpoint: opts.authEndpoint || defaults.authEndpoint
        };
        if ('auth' in opts) {
            if ('params' in opts.auth)
                channelAuthorization.params = opts.auth.params;
            if ('headers' in opts.auth)
                channelAuthorization.headers = opts.auth.headers;
        }
        if ('authorizer' in opts)
            channelAuthorization.customHandler = ChannelAuthorizerProxy(pusher, channelAuthorization, opts.authorizer);
    }
    return channelAuthorization;
}
function buildChannelAuthorizer(opts, pusher) {
    var channelAuthorization = buildChannelAuth(opts, pusher);
    if ('customHandler' in channelAuthorization &&
        channelAuthorization['customHandler'] != null) {
        return channelAuthorization['customHandler'];
    }
    return channel_authorizer(channelAuthorization);
}

// CONCATENATED MODULE: ./src/core/watchlist.ts
var watchlist_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var watchlist_WatchlistFacade = (function (_super) {
    watchlist_extends(WatchlistFacade, _super);
    function WatchlistFacade(pusher) {
        var _this = _super.call(this, function (eventName, data) {
            logger.debug("No callbacks on watchlist events for " + eventName);
        }) || this;
        _this.pusher = pusher;
        _this.bindWatchlistInternalEvent();
        return _this;
    }
    WatchlistFacade.prototype.handleEvent = function (pusherEvent) {
        var _this = this;
        pusherEvent.data.events.forEach(function (watchlistEvent) {
            _this.emit(watchlistEvent.name, watchlistEvent);
        });
    };
    WatchlistFacade.prototype.bindWatchlistInternalEvent = function () {
        var _this = this;
        this.pusher.connection.bind('message', function (pusherEvent) {
            var eventName = pusherEvent.event;
            if (eventName === 'pusher_internal:watchlist_events') {
                _this.handleEvent(pusherEvent);
            }
        });
    };
    return WatchlistFacade;
}(dispatcher));
/* harmony default export */ var watchlist = (watchlist_WatchlistFacade);

// CONCATENATED MODULE: ./src/core/utils/flat_promise.ts
function flatPromise() {
    var resolve, reject;
    var promise = new Promise(function (res, rej) {
        resolve = res;
        reject = rej;
    });
    return { promise: promise, resolve: resolve, reject: reject };
}
/* harmony default export */ var flat_promise = (flatPromise);

// CONCATENATED MODULE: ./src/core/user.ts
var user_extends = ( false) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





var user_UserFacade = (function (_super) {
    user_extends(UserFacade, _super);
    function UserFacade(pusher) {
        var _this = _super.call(this, function (eventName, data) {
            logger.debug('No callbacks on user for ' + eventName);
        }) || this;
        _this.signin_requested = false;
        _this.user_data = null;
        _this.serverToUserChannel = null;
        _this.signinDonePromise = null;
        _this._signinDoneResolve = null;
        _this._onAuthorize = function (err, authData) {
            if (err) {
                logger.warn("Error during signin: " + err);
                _this._cleanup();
                return;
            }
            _this.pusher.send_event('pusher:signin', {
                auth: authData.auth,
                user_data: authData.user_data
            });
        };
        _this.pusher = pusher;
        _this.pusher.connection.bind('state_change', function (_a) {
            var previous = _a.previous, current = _a.current;
            if (previous !== 'connected' && current === 'connected') {
                _this._signin();
            }
            if (previous === 'connected' && current !== 'connected') {
                _this._cleanup();
                _this._newSigninPromiseIfNeeded();
            }
        });
        _this.watchlist = new watchlist(pusher);
        _this.pusher.connection.bind('message', function (event) {
            var eventName = event.event;
            if (eventName === 'pusher:signin_success') {
                _this._onSigninSuccess(event.data);
            }
            if (_this.serverToUserChannel &&
                _this.serverToUserChannel.name === event.channel) {
                _this.serverToUserChannel.handleEvent(event);
            }
        });
        return _this;
    }
    UserFacade.prototype.signin = function () {
        if (this.signin_requested) {
            return;
        }
        this.signin_requested = true;
        this._signin();
    };
    UserFacade.prototype._signin = function () {
        if (!this.signin_requested) {
            return;
        }
        this._newSigninPromiseIfNeeded();
        if (this.pusher.connection.state !== 'connected') {
            return;
        }
        this.pusher.config.userAuthenticator({
            socketId: this.pusher.connection.socket_id
        }, this._onAuthorize);
    };
    UserFacade.prototype._onSigninSuccess = function (data) {
        try {
            this.user_data = JSON.parse(data.user_data);
        }
        catch (e) {
            logger.error("Failed parsing user data after signin: " + data.user_data);
            this._cleanup();
            return;
        }
        if (typeof this.user_data.id !== 'string' || this.user_data.id === '') {
            logger.error("user_data doesn't contain an id. user_data: " + this.user_data);
            this._cleanup();
            return;
        }
        this._signinDoneResolve();
        this._subscribeChannels();
    };
    UserFacade.prototype._subscribeChannels = function () {
        var _this = this;
        var ensure_subscribed = function (channel) {
            if (channel.subscriptionPending && channel.subscriptionCancelled) {
                channel.reinstateSubscription();
            }
            else if (!channel.subscriptionPending &&
                _this.pusher.connection.state === 'connected') {
                channel.subscribe();
            }
        };
        this.serverToUserChannel = new channels_channel("#server-to-user-" + this.user_data.id, this.pusher);
        this.serverToUserChannel.bind_global(function (eventName, data) {
            if (eventName.indexOf('pusher_internal:') === 0 ||
                eventName.indexOf('pusher:') === 0) {
                return;
            }
            _this.emit(eventName, data);
        });
        ensure_subscribed(this.serverToUserChannel);
    };
    UserFacade.prototype._cleanup = function () {
        this.user_data = null;
        if (this.serverToUserChannel) {
            this.serverToUserChannel.unbind_all();
            this.serverToUserChannel.disconnect();
            this.serverToUserChannel = null;
        }
        if (this.signin_requested) {
            this._signinDoneResolve();
        }
    };
    UserFacade.prototype._newSigninPromiseIfNeeded = function () {
        if (!this.signin_requested) {
            return;
        }
        if (this.signinDonePromise && !this.signinDonePromise.done) {
            return;
        }
        var _a = flat_promise(), promise = _a.promise, resolve = _a.resolve, _ = _a.reject;
        promise.done = false;
        var setDone = function () {
            promise.done = true;
        };
        promise.then(setDone)["catch"](setDone);
        this.signinDonePromise = promise;
        this._signinDoneResolve = resolve;
    };
    return UserFacade;
}(dispatcher));
/* harmony default export */ var user = (user_UserFacade);

// CONCATENATED MODULE: ./src/core/pusher.ts













var pusher_Pusher = (function () {
    function Pusher(app_key, options) {
        var _this = this;
        checkAppKey(app_key);
        options = options || {};
        if (!options.cluster && !(options.wsHost || options.httpHost)) {
            var suffix = url_store.buildLogSuffix('javascriptQuickStart');
            logger.warn("You should always specify a cluster when connecting. " + suffix);
        }
        if ('disableStats' in options) {
            logger.warn('The disableStats option is deprecated in favor of enableStats');
        }
        this.key = app_key;
        this.config = getConfig(options, this);
        this.channels = factory.createChannels();
        this.global_emitter = new dispatcher();
        this.sessionID = runtime.randomInt(1000000000);
        this.timeline = new timeline_timeline(this.key, this.sessionID, {
            cluster: this.config.cluster,
            features: Pusher.getClientFeatures(),
            params: this.config.timelineParams || {},
            limit: 50,
            level: timeline_level.INFO,
            version: defaults.VERSION
        });
        if (this.config.enableStats) {
            this.timelineSender = factory.createTimelineSender(this.timeline, {
                host: this.config.statsHost,
                path: '/timeline/v2/' + runtime.TimelineTransport.name
            });
        }
        var getStrategy = function (options) {
            return runtime.getDefaultStrategy(_this.config, options, strategy_builder_defineTransport);
        };
        this.connection = factory.createConnectionManager(this.key, {
            getStrategy: getStrategy,
            timeline: this.timeline,
            activityTimeout: this.config.activityTimeout,
            pongTimeout: this.config.pongTimeout,
            unavailableTimeout: this.config.unavailableTimeout,
            useTLS: Boolean(this.config.useTLS)
        });
        this.connection.bind('connected', function () {
            _this.subscribeAll();
            if (_this.timelineSender) {
                _this.timelineSender.send(_this.connection.isUsingTLS());
            }
        });
        this.connection.bind('message', function (event) {
            var eventName = event.event;
            var internal = eventName.indexOf('pusher_internal:') === 0;
            if (event.channel) {
                var channel = _this.channel(event.channel);
                if (channel) {
                    channel.handleEvent(event);
                }
            }
            if (!internal) {
                _this.global_emitter.emit(event.event, event.data);
            }
        });
        this.connection.bind('connecting', function () {
            _this.channels.disconnect();
        });
        this.connection.bind('disconnected', function () {
            _this.channels.disconnect();
        });
        this.connection.bind('error', function (err) {
            logger.warn(err);
        });
        Pusher.instances.push(this);
        this.timeline.info({ instances: Pusher.instances.length });
        this.user = new user(this);
        if (Pusher.isReady) {
            this.connect();
        }
    }
    Pusher.ready = function () {
        Pusher.isReady = true;
        for (var i = 0, l = Pusher.instances.length; i < l; i++) {
            Pusher.instances[i].connect();
        }
    };
    Pusher.getClientFeatures = function () {
        return keys(filterObject({ ws: runtime.Transports.ws }, function (t) {
            return t.isSupported({});
        }));
    };
    Pusher.prototype.channel = function (name) {
        return this.channels.find(name);
    };
    Pusher.prototype.allChannels = function () {
        return this.channels.all();
    };
    Pusher.prototype.connect = function () {
        this.connection.connect();
        if (this.timelineSender) {
            if (!this.timelineSenderTimer) {
                var usingTLS = this.connection.isUsingTLS();
                var timelineSender = this.timelineSender;
                this.timelineSenderTimer = new PeriodicTimer(60000, function () {
                    timelineSender.send(usingTLS);
                });
            }
        }
    };
    Pusher.prototype.disconnect = function () {
        this.connection.disconnect();
        if (this.timelineSenderTimer) {
            this.timelineSenderTimer.ensureAborted();
            this.timelineSenderTimer = null;
        }
    };
    Pusher.prototype.bind = function (event_name, callback, context) {
        this.global_emitter.bind(event_name, callback, context);
        return this;
    };
    Pusher.prototype.unbind = function (event_name, callback, context) {
        this.global_emitter.unbind(event_name, callback, context);
        return this;
    };
    Pusher.prototype.bind_global = function (callback) {
        this.global_emitter.bind_global(callback);
        return this;
    };
    Pusher.prototype.unbind_global = function (callback) {
        this.global_emitter.unbind_global(callback);
        return this;
    };
    Pusher.prototype.unbind_all = function (callback) {
        this.global_emitter.unbind_all();
        return this;
    };
    Pusher.prototype.subscribeAll = function () {
        var channelName;
        for (channelName in this.channels.channels) {
            if (this.channels.channels.hasOwnProperty(channelName)) {
                this.subscribe(channelName);
            }
        }
    };
    Pusher.prototype.subscribe = function (channel_name) {
        var channel = this.channels.add(channel_name, this);
        if (channel.subscriptionPending && channel.subscriptionCancelled) {
            channel.reinstateSubscription();
        }
        else if (!channel.subscriptionPending &&
            this.connection.state === 'connected') {
            channel.subscribe();
        }
        return channel;
    };
    Pusher.prototype.unsubscribe = function (channel_name) {
        var channel = this.channels.find(channel_name);
        if (channel && channel.subscriptionPending) {
            channel.cancelSubscription();
        }
        else {
            channel = this.channels.remove(channel_name);
            if (channel && channel.subscribed) {
                channel.unsubscribe();
            }
        }
    };
    Pusher.prototype.send_event = function (event_name, data, channel) {
        return this.connection.send_event(event_name, data, channel);
    };
    Pusher.prototype.shouldUseTLS = function () {
        return this.config.useTLS;
    };
    Pusher.prototype.signin = function () {
        this.user.signin();
    };
    Pusher.instances = [];
    Pusher.isReady = false;
    Pusher.logToConsole = false;
    Pusher.Runtime = runtime;
    Pusher.ScriptReceivers = runtime.ScriptReceivers;
    Pusher.DependenciesReceivers = runtime.DependenciesReceivers;
    Pusher.auth_callbacks = runtime.auth_callbacks;
    return Pusher;
}());
/* harmony default export */ var core_pusher = __nested_webpack_exports__["default"] = (pusher_Pusher);
function checkAppKey(key) {
    if (key === null || key === undefined) {
        throw 'You must pass your app key when you instantiate Pusher.';
    }
}
runtime.setup(pusher_Pusher);


/***/ })
/******/ ]);
});
//# sourceMappingURL=pusher.js.map

/***/ }),

/***/ "./node_modules/timeago.js/esm/format.js":
/*!***********************************************!*\
  !*** ./node_modules/timeago.js/esm/format.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   format: () => (/* binding */ format)
/* harmony export */ });
/* harmony import */ var _utils_date__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/date */ "./node_modules/timeago.js/esm/utils/date.js");
/* harmony import */ var _register__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./register */ "./node_modules/timeago.js/esm/register.js");


/**
 * format a TDate into string
 * @param date
 * @param locale
 * @param opts
 */
var format = function (date, locale, opts) {
    // diff seconds
    var sec = (0,_utils_date__WEBPACK_IMPORTED_MODULE_0__.diffSec)(date, opts && opts.relativeDate);
    // format it with locale
    return (0,_utils_date__WEBPACK_IMPORTED_MODULE_0__.formatDiff)(sec, (0,_register__WEBPACK_IMPORTED_MODULE_1__.getLocale)(locale));
};
//# sourceMappingURL=format.js.map

/***/ }),

/***/ "./node_modules/timeago.js/esm/index.js":
/*!**********************************************!*\
  !*** ./node_modules/timeago.js/esm/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cancel: () => (/* reexport safe */ _realtime__WEBPACK_IMPORTED_MODULE_4__.cancel),
/* harmony export */   format: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.format),
/* harmony export */   register: () => (/* reexport safe */ _register__WEBPACK_IMPORTED_MODULE_2__.register),
/* harmony export */   render: () => (/* reexport safe */ _realtime__WEBPACK_IMPORTED_MODULE_4__.render)
/* harmony export */ });
/* harmony import */ var _lang_en_US__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lang/en_US */ "./node_modules/timeago.js/esm/lang/en_US.js");
/* harmony import */ var _lang_zh_CN__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lang/zh_CN */ "./node_modules/timeago.js/esm/lang/zh_CN.js");
/* harmony import */ var _register__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./register */ "./node_modules/timeago.js/esm/register.js");
/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format */ "./node_modules/timeago.js/esm/format.js");
/* harmony import */ var _realtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./realtime */ "./node_modules/timeago.js/esm/realtime.js");
/**
 * Created by hustcc on 18/5/20.
 * Contract: i@hust.cc
 */



(0,_register__WEBPACK_IMPORTED_MODULE_2__.register)('en_US', _lang_en_US__WEBPACK_IMPORTED_MODULE_0__["default"]);
(0,_register__WEBPACK_IMPORTED_MODULE_2__.register)('zh_CN', _lang_zh_CN__WEBPACK_IMPORTED_MODULE_1__["default"]);



//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/timeago.js/esm/lang/en_US.js":
/*!***************************************************!*\
  !*** ./node_modules/timeago.js/esm/lang/en_US.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(diff, idx) {
    if (idx === 0)
        return ['just now', 'right now'];
    var unit = EN_US[Math.floor(idx / 2)];
    if (diff > 1)
        unit += 's';
    return [diff + " " + unit + " ago", "in " + diff + " " + unit];
}
//# sourceMappingURL=en_US.js.map

/***/ }),

/***/ "./node_modules/timeago.js/esm/lang/zh_CN.js":
/*!***************************************************!*\
  !*** ./node_modules/timeago.js/esm/lang/zh_CN.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(diff, idx) {
    if (idx === 0)
        return ['刚刚', '片刻后'];
    var unit = ZH_CN[~~(idx / 2)];
    return [diff + " " + unit + "\u524D", diff + " " + unit + "\u540E"];
}
//# sourceMappingURL=zh_CN.js.map

/***/ }),

/***/ "./node_modules/timeago.js/esm/realtime.js":
/*!*************************************************!*\
  !*** ./node_modules/timeago.js/esm/realtime.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cancel: () => (/* binding */ cancel),
/* harmony export */   render: () => (/* binding */ render)
/* harmony export */ });
/* harmony import */ var _utils_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/dom */ "./node_modules/timeago.js/esm/utils/dom.js");
/* harmony import */ var _utils_date__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/date */ "./node_modules/timeago.js/esm/utils/date.js");
/* harmony import */ var _register__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./register */ "./node_modules/timeago.js/esm/register.js");



// all realtime timer
var TIMER_POOL = {};
/**
 * clear a timer from pool
 * @param tid
 */
var clear = function (tid) {
    clearTimeout(tid);
    delete TIMER_POOL[tid];
};
// run with timer(setTimeout)
function run(node, date, localeFunc, opts) {
    // clear the node's exist timer
    clear((0,_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getTimerId)(node));
    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;
    // get diff seconds
    var diff = (0,_utils_date__WEBPACK_IMPORTED_MODULE_1__.diffSec)(date, relativeDate);
    // render
    node.innerText = (0,_utils_date__WEBPACK_IMPORTED_MODULE_1__.formatDiff)(diff, localeFunc);
    var tid = setTimeout(function () {
        run(node, date, localeFunc, opts);
    }, Math.min(Math.max((0,_utils_date__WEBPACK_IMPORTED_MODULE_1__.nextInterval)(diff), minInterval || 1) * 1000, 0x7fffffff));
    // there is no need to save node in object. Just save the key
    TIMER_POOL[tid] = 0;
    (0,_utils_dom__WEBPACK_IMPORTED_MODULE_0__.setTimerId)(node, tid);
}
/**
 * cancel a timer or all timers
 * @param node - node hosting the time string
 */
function cancel(node) {
    // cancel one
    if (node)
        clear((0,_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getTimerId)(node));
    // cancel all
    // @ts-ignore
    else
        Object.keys(TIMER_POOL).forEach(clear);
}
/**
 * render a dom realtime
 * @param nodes
 * @param locale
 * @param opts
 */
function render(nodes, locale, opts) {
    // by .length
    // @ts-ignore
    var nodeList = nodes.length ? nodes : [nodes];
    nodeList.forEach(function (node) {
        run(node, (0,_utils_dom__WEBPACK_IMPORTED_MODULE_0__.getDateAttribute)(node), (0,_register__WEBPACK_IMPORTED_MODULE_2__.getLocale)(locale), opts || {});
    });
    return nodeList;
}
//# sourceMappingURL=realtime.js.map

/***/ }),

/***/ "./node_modules/timeago.js/esm/register.js":
/*!*************************************************!*\
  !*** ./node_modules/timeago.js/esm/register.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getLocale: () => (/* binding */ getLocale),
/* harmony export */   register: () => (/* binding */ register)
/* harmony export */ });
/**
 * Created by hustcc on 18/5/20.
 * Contract: i@hust.cc
 */
/**
 * All supported locales
 */
var Locales = {};
/**
 * register a locale
 * @param locale
 * @param func
 */
var register = function (locale, func) {
    Locales[locale] = func;
};
/**
 * get a locale, default is en_US
 * @param locale
 * @returns {*}
 */
var getLocale = function (locale) {
    return Locales[locale] || Locales['en_US'];
};
//# sourceMappingURL=register.js.map

/***/ }),

/***/ "./node_modules/timeago.js/esm/utils/date.js":
/*!***************************************************!*\
  !*** ./node_modules/timeago.js/esm/utils/date.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   diffSec: () => (/* binding */ diffSec),
/* harmony export */   formatDiff: () => (/* binding */ formatDiff),
/* harmony export */   nextInterval: () => (/* binding */ nextInterval),
/* harmony export */   toDate: () => (/* binding */ toDate)
/* harmony export */ });
/**
 * Created by hustcc on 18/5/20.
 * Contract: i@hust.cc
 */
var SEC_ARRAY = [
    60,
    60,
    24,
    7,
    365 / 7 / 12,
    12,
];
/**
 * format Date / string / timestamp to timestamp
 * @param input
 * @returns {*}
 */
function toDate(input) {
    if (input instanceof Date)
        return input;
    // @ts-ignore
    if (!isNaN(input) || /^\d+$/.test(input))
        return new Date(parseInt(input));
    input = (input || '')
        // @ts-ignore
        .trim()
        .replace(/\.\d+/, '') // remove milliseconds
        .replace(/-/, '/')
        .replace(/-/, '/')
        .replace(/(\d)T(\d)/, '$1 $2')
        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC
        .replace(/([+-]\d\d):?(\d\d)/, ' $1$2'); // -04:00 -> -0400
    return new Date(input);
}
/**
 * format the diff second to *** time ago, with setting locale
 * @param diff
 * @param localeFunc
 * @returns
 */
function formatDiff(diff, localeFunc) {
    /**
     * if locale is not exist, use defaultLocale.
     * if defaultLocale is not exist, use build-in `en`.
     * be sure of no error when locale is not exist.
     *
     * If `time in`, then 1
     * If `time ago`, then 0
     */
    var agoIn = diff < 0 ? 1 : 0;
    /**
     * Get absolute value of number (|diff| is non-negative) value of x
     * |diff| = diff if diff is positive
     * |diff| = -diff if diff is negative
     * |0| = 0
     */
    diff = Math.abs(diff);
    /**
     * Time in seconds
     */
    var totalSec = diff;
    /**
     * Unit of time
     */
    var idx = 0;
    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {
        diff /= SEC_ARRAY[idx];
    }
    /**
     * Math.floor() is alternative of ~~
     *
     * The differences and bugs:
     * Math.floor(3.7) -> 4 but ~~3.7 -> 3
     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552
     *
     * More information about the performance of algebraic:
     * https://www.youtube.com/watch?v=65-RbBwZQdU
     */
    diff = Math.floor(diff);
    idx *= 2;
    if (diff > (idx === 0 ? 9 : 1))
        idx += 1;
    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());
}
/**
 * calculate the diff second between date to be formatted an now date.
 * @param date
 * @param relativeDate
 * @returns {number}
 */
function diffSec(date, relativeDate) {
    var relDate = relativeDate ? toDate(relativeDate) : new Date();
    return (+relDate - +toDate(date)) / 1000;
}
/**
 * nextInterval: calculate the next interval time.
 * - diff: the diff sec between now and date to be formatted.
 *
 * What's the meaning?
 * diff = 61 then return 59
 * diff = 3601 (an hour + 1 second), then return 3599
 * make the interval with high performance.
 **/
function nextInterval(diff) {
    var rst = 1, i = 0, d = Math.abs(diff);
    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {
        diff /= SEC_ARRAY[i];
        rst *= SEC_ARRAY[i];
    }
    d = d % rst;
    d = d ? rst - d : rst;
    return Math.ceil(d);
}
//# sourceMappingURL=date.js.map

/***/ }),

/***/ "./node_modules/timeago.js/esm/utils/dom.js":
/*!**************************************************!*\
  !*** ./node_modules/timeago.js/esm/utils/dom.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getDateAttribute: () => (/* binding */ getDateAttribute),
/* harmony export */   getTimerId: () => (/* binding */ getTimerId),
/* harmony export */   setTimerId: () => (/* binding */ setTimerId)
/* harmony export */ });
var ATTR_TIMEAGO_TID = 'timeago-id';
/**
 * get the datetime attribute, `datetime` are supported.
 * @param node
 * @returns {*}
 */
function getDateAttribute(node) {
    return node.getAttribute('datetime');
}
/**
 * set the node attribute, native DOM
 * @param node
 * @param timerId
 * @returns {*}
 */
function setTimerId(node, timerId) {
    // @ts-ignore
    node.setAttribute(ATTR_TIMEAGO_TID, timerId);
}
/**
 * get the timer id
 * @param node
 */
function getTimerId(node) {
    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));
}
//# sourceMappingURL=dom.js.map

/***/ })

}]);
//# sourceMappingURL=vendor.js.map